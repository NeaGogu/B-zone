/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LinkModel struct for LinkModel
type LinkModel struct {
	// Unique ID
	Id *int64 `json:"id,omitempty"`
	// The external Link ID
	LinkId *string `json:"link_id,omitempty"`
	// The object type id which this link is connected to
	ObjectType *int64 `json:"object_type,omitempty"`
	// The object ID which this link is connected to
	ObjectId *int64 `json:"object_id,omitempty"`
	// The Provider ID which this link is connected to
	ProviderId *int64 `json:"provider_id,omitempty"`
	// A Provider reference which this link is connected to
	ProviderReference *string `json:"provider_reference,omitempty"`
	// The name of the external Provider
	ProviderName *string `json:"provider_name,omitempty"`
}

// NewLinkModel instantiates a new LinkModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkModel() *LinkModel {
	this := LinkModel{}
	return &this
}

// NewLinkModelWithDefaults instantiates a new LinkModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkModelWithDefaults() *LinkModel {
	this := LinkModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LinkModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LinkModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *LinkModel) SetId(v int64) {
	o.Id = &v
}

// GetLinkId returns the LinkId field value if set, zero value otherwise.
func (o *LinkModel) GetLinkId() string {
	if o == nil || o.LinkId == nil {
		var ret string
		return ret
	}
	return *o.LinkId
}

// GetLinkIdOk returns a tuple with the LinkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkModel) GetLinkIdOk() (*string, bool) {
	if o == nil || o.LinkId == nil {
		return nil, false
	}
	return o.LinkId, true
}

// HasLinkId returns a boolean if a field has been set.
func (o *LinkModel) HasLinkId() bool {
	if o != nil && o.LinkId != nil {
		return true
	}

	return false
}

// SetLinkId gets a reference to the given string and assigns it to the LinkId field.
func (o *LinkModel) SetLinkId(v string) {
	o.LinkId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *LinkModel) GetObjectType() int64 {
	if o == nil || o.ObjectType == nil {
		var ret int64
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkModel) GetObjectTypeOk() (*int64, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *LinkModel) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given int64 and assigns it to the ObjectType field.
func (o *LinkModel) SetObjectType(v int64) {
	o.ObjectType = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *LinkModel) GetObjectId() int64 {
	if o == nil || o.ObjectId == nil {
		var ret int64
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkModel) GetObjectIdOk() (*int64, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *LinkModel) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given int64 and assigns it to the ObjectId field.
func (o *LinkModel) SetObjectId(v int64) {
	o.ObjectId = &v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *LinkModel) GetProviderId() int64 {
	if o == nil || o.ProviderId == nil {
		var ret int64
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkModel) GetProviderIdOk() (*int64, bool) {
	if o == nil || o.ProviderId == nil {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *LinkModel) HasProviderId() bool {
	if o != nil && o.ProviderId != nil {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given int64 and assigns it to the ProviderId field.
func (o *LinkModel) SetProviderId(v int64) {
	o.ProviderId = &v
}

// GetProviderReference returns the ProviderReference field value if set, zero value otherwise.
func (o *LinkModel) GetProviderReference() string {
	if o == nil || o.ProviderReference == nil {
		var ret string
		return ret
	}
	return *o.ProviderReference
}

// GetProviderReferenceOk returns a tuple with the ProviderReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkModel) GetProviderReferenceOk() (*string, bool) {
	if o == nil || o.ProviderReference == nil {
		return nil, false
	}
	return o.ProviderReference, true
}

// HasProviderReference returns a boolean if a field has been set.
func (o *LinkModel) HasProviderReference() bool {
	if o != nil && o.ProviderReference != nil {
		return true
	}

	return false
}

// SetProviderReference gets a reference to the given string and assigns it to the ProviderReference field.
func (o *LinkModel) SetProviderReference(v string) {
	o.ProviderReference = &v
}

// GetProviderName returns the ProviderName field value if set, zero value otherwise.
func (o *LinkModel) GetProviderName() string {
	if o == nil || o.ProviderName == nil {
		var ret string
		return ret
	}
	return *o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkModel) GetProviderNameOk() (*string, bool) {
	if o == nil || o.ProviderName == nil {
		return nil, false
	}
	return o.ProviderName, true
}

// HasProviderName returns a boolean if a field has been set.
func (o *LinkModel) HasProviderName() bool {
	if o != nil && o.ProviderName != nil {
		return true
	}

	return false
}

// SetProviderName gets a reference to the given string and assigns it to the ProviderName field.
func (o *LinkModel) SetProviderName(v string) {
	o.ProviderName = &v
}

func (o LinkModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LinkId != nil {
		toSerialize["link_id"] = o.LinkId
	}
	if o.ObjectType != nil {
		toSerialize["object_type"] = o.ObjectType
	}
	if o.ObjectId != nil {
		toSerialize["object_id"] = o.ObjectId
	}
	if o.ProviderId != nil {
		toSerialize["provider_id"] = o.ProviderId
	}
	if o.ProviderReference != nil {
		toSerialize["provider_reference"] = o.ProviderReference
	}
	if o.ProviderName != nil {
		toSerialize["provider_name"] = o.ProviderName
	}
	return json.Marshal(toSerialize)
}

type NullableLinkModel struct {
	value *LinkModel
	isSet bool
}

func (v NullableLinkModel) Get() *LinkModel {
	return v.value
}

func (v *NullableLinkModel) Set(val *LinkModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkModel(val *LinkModel) *NullableLinkModel {
	return &NullableLinkModel{value: val, isSet: true}
}

func (v NullableLinkModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


