/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PaymentModel struct for PaymentModel
type PaymentModel struct {
	// Unique Identifier
	Id *int64 `json:"id,omitempty"`
	// if active=0: Payment has been removed and is no longer visible in any bumbal interface
	Active *bool `json:"active,omitempty"`
	// id of the activity this payment is bound to
	ActivityId *int32 `json:"activity_id,omitempty"`
	// amount of the payment in cents
	Amount *int32 `json:"amount,omitempty"`
	// title of the payment
	Title *string `json:"title,omitempty"`
}

// NewPaymentModel instantiates a new PaymentModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentModel() *PaymentModel {
	this := PaymentModel{}
	return &this
}

// NewPaymentModelWithDefaults instantiates a new PaymentModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentModelWithDefaults() *PaymentModel {
	this := PaymentModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PaymentModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PaymentModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *PaymentModel) SetId(v int64) {
	o.Id = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PaymentModel) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentModel) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PaymentModel) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *PaymentModel) SetActive(v bool) {
	o.Active = &v
}

// GetActivityId returns the ActivityId field value if set, zero value otherwise.
func (o *PaymentModel) GetActivityId() int32 {
	if o == nil || o.ActivityId == nil {
		var ret int32
		return ret
	}
	return *o.ActivityId
}

// GetActivityIdOk returns a tuple with the ActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentModel) GetActivityIdOk() (*int32, bool) {
	if o == nil || o.ActivityId == nil {
		return nil, false
	}
	return o.ActivityId, true
}

// HasActivityId returns a boolean if a field has been set.
func (o *PaymentModel) HasActivityId() bool {
	if o != nil && o.ActivityId != nil {
		return true
	}

	return false
}

// SetActivityId gets a reference to the given int32 and assigns it to the ActivityId field.
func (o *PaymentModel) SetActivityId(v int32) {
	o.ActivityId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PaymentModel) GetAmount() int32 {
	if o == nil || o.Amount == nil {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentModel) GetAmountOk() (*int32, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PaymentModel) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *PaymentModel) SetAmount(v int32) {
	o.Amount = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *PaymentModel) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentModel) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PaymentModel) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *PaymentModel) SetTitle(v string) {
	o.Title = &v
}

func (o PaymentModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.ActivityId != nil {
		toSerialize["activity_id"] = o.ActivityId
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentModel struct {
	value *PaymentModel
	isSet bool
}

func (v NullablePaymentModel) Get() *PaymentModel {
	return v.value
}

func (v *NullablePaymentModel) Set(val *PaymentModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentModel(val *PaymentModel) *NullablePaymentModel {
	return &NullablePaymentModel{value: val, isSet: true}
}

func (v NullablePaymentModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


