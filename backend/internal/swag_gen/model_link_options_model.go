/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LinkOptionsModel struct for LinkOptionsModel
type LinkOptionsModel struct {
	// 
	IncludeObjectTypeName *bool `json:"include_object_type_name,omitempty"`
	// 
	IncludeProviderName *bool `json:"include_provider_name,omitempty"`
}

// NewLinkOptionsModel instantiates a new LinkOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkOptionsModel() *LinkOptionsModel {
	this := LinkOptionsModel{}
	return &this
}

// NewLinkOptionsModelWithDefaults instantiates a new LinkOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkOptionsModelWithDefaults() *LinkOptionsModel {
	this := LinkOptionsModel{}
	return &this
}

// GetIncludeObjectTypeName returns the IncludeObjectTypeName field value if set, zero value otherwise.
func (o *LinkOptionsModel) GetIncludeObjectTypeName() bool {
	if o == nil || o.IncludeObjectTypeName == nil {
		var ret bool
		return ret
	}
	return *o.IncludeObjectTypeName
}

// GetIncludeObjectTypeNameOk returns a tuple with the IncludeObjectTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkOptionsModel) GetIncludeObjectTypeNameOk() (*bool, bool) {
	if o == nil || o.IncludeObjectTypeName == nil {
		return nil, false
	}
	return o.IncludeObjectTypeName, true
}

// HasIncludeObjectTypeName returns a boolean if a field has been set.
func (o *LinkOptionsModel) HasIncludeObjectTypeName() bool {
	if o != nil && o.IncludeObjectTypeName != nil {
		return true
	}

	return false
}

// SetIncludeObjectTypeName gets a reference to the given bool and assigns it to the IncludeObjectTypeName field.
func (o *LinkOptionsModel) SetIncludeObjectTypeName(v bool) {
	o.IncludeObjectTypeName = &v
}

// GetIncludeProviderName returns the IncludeProviderName field value if set, zero value otherwise.
func (o *LinkOptionsModel) GetIncludeProviderName() bool {
	if o == nil || o.IncludeProviderName == nil {
		var ret bool
		return ret
	}
	return *o.IncludeProviderName
}

// GetIncludeProviderNameOk returns a tuple with the IncludeProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkOptionsModel) GetIncludeProviderNameOk() (*bool, bool) {
	if o == nil || o.IncludeProviderName == nil {
		return nil, false
	}
	return o.IncludeProviderName, true
}

// HasIncludeProviderName returns a boolean if a field has been set.
func (o *LinkOptionsModel) HasIncludeProviderName() bool {
	if o != nil && o.IncludeProviderName != nil {
		return true
	}

	return false
}

// SetIncludeProviderName gets a reference to the given bool and assigns it to the IncludeProviderName field.
func (o *LinkOptionsModel) SetIncludeProviderName(v bool) {
	o.IncludeProviderName = &v
}

func (o LinkOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeObjectTypeName != nil {
		toSerialize["include_object_type_name"] = o.IncludeObjectTypeName
	}
	if o.IncludeProviderName != nil {
		toSerialize["include_provider_name"] = o.IncludeProviderName
	}
	return json.Marshal(toSerialize)
}

type NullableLinkOptionsModel struct {
	value *LinkOptionsModel
	isSet bool
}

func (v NullableLinkOptionsModel) Get() *LinkOptionsModel {
	return v.value
}

func (v *NullableLinkOptionsModel) Set(val *LinkOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkOptionsModel(val *LinkOptionsModel) *NullableLinkOptionsModel {
	return &NullableLinkOptionsModel{value: val, isSet: true}
}

func (v NullableLinkOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


