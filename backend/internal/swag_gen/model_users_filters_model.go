/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UsersFiltersModel struct for UsersFiltersModel
type UsersFiltersModel struct {
	// 
	Id *[]int32 `json:"id,omitempty"`
	// unique per user
	Uuid *[]string `json:"uuid,omitempty"`
	// ids of pause schemes applied to user with teh role driver
	PauseId *[]int32 `json:"pause_id,omitempty"`
	// ids of the user roles, 1: Guest, 2: Driver, 3: Planner, 4: Manager, 5: Admin
	RoleId *[]int32 `json:"role_id,omitempty"`
	// Associated Party IDs
	PartyId *[]int32 `json:"party_id,omitempty"`
	// Tag names
	TagNames *[]string `json:"tag_names,omitempty"`
	// Zone names
	ZoneNames *[]string `json:"zone_names,omitempty"`
	// System users
	System *[]bool `json:"system,omitempty"`
	// Activated users
	Activated *[]bool `json:"activated,omitempty"`
}

// NewUsersFiltersModel instantiates a new UsersFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersFiltersModel() *UsersFiltersModel {
	this := UsersFiltersModel{}
	return &this
}

// NewUsersFiltersModelWithDefaults instantiates a new UsersFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersFiltersModelWithDefaults() *UsersFiltersModel {
	this := UsersFiltersModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UsersFiltersModel) GetId() []int32 {
	if o == nil || o.Id == nil {
		var ret []int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersFiltersModel) GetIdOk() (*[]int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UsersFiltersModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given []int32 and assigns it to the Id field.
func (o *UsersFiltersModel) SetId(v []int32) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *UsersFiltersModel) GetUuid() []string {
	if o == nil || o.Uuid == nil {
		var ret []string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersFiltersModel) GetUuidOk() (*[]string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *UsersFiltersModel) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given []string and assigns it to the Uuid field.
func (o *UsersFiltersModel) SetUuid(v []string) {
	o.Uuid = &v
}

// GetPauseId returns the PauseId field value if set, zero value otherwise.
func (o *UsersFiltersModel) GetPauseId() []int32 {
	if o == nil || o.PauseId == nil {
		var ret []int32
		return ret
	}
	return *o.PauseId
}

// GetPauseIdOk returns a tuple with the PauseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersFiltersModel) GetPauseIdOk() (*[]int32, bool) {
	if o == nil || o.PauseId == nil {
		return nil, false
	}
	return o.PauseId, true
}

// HasPauseId returns a boolean if a field has been set.
func (o *UsersFiltersModel) HasPauseId() bool {
	if o != nil && o.PauseId != nil {
		return true
	}

	return false
}

// SetPauseId gets a reference to the given []int32 and assigns it to the PauseId field.
func (o *UsersFiltersModel) SetPauseId(v []int32) {
	o.PauseId = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *UsersFiltersModel) GetRoleId() []int32 {
	if o == nil || o.RoleId == nil {
		var ret []int32
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersFiltersModel) GetRoleIdOk() (*[]int32, bool) {
	if o == nil || o.RoleId == nil {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *UsersFiltersModel) HasRoleId() bool {
	if o != nil && o.RoleId != nil {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given []int32 and assigns it to the RoleId field.
func (o *UsersFiltersModel) SetRoleId(v []int32) {
	o.RoleId = &v
}

// GetPartyId returns the PartyId field value if set, zero value otherwise.
func (o *UsersFiltersModel) GetPartyId() []int32 {
	if o == nil || o.PartyId == nil {
		var ret []int32
		return ret
	}
	return *o.PartyId
}

// GetPartyIdOk returns a tuple with the PartyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersFiltersModel) GetPartyIdOk() (*[]int32, bool) {
	if o == nil || o.PartyId == nil {
		return nil, false
	}
	return o.PartyId, true
}

// HasPartyId returns a boolean if a field has been set.
func (o *UsersFiltersModel) HasPartyId() bool {
	if o != nil && o.PartyId != nil {
		return true
	}

	return false
}

// SetPartyId gets a reference to the given []int32 and assigns it to the PartyId field.
func (o *UsersFiltersModel) SetPartyId(v []int32) {
	o.PartyId = &v
}

// GetTagNames returns the TagNames field value if set, zero value otherwise.
func (o *UsersFiltersModel) GetTagNames() []string {
	if o == nil || o.TagNames == nil {
		var ret []string
		return ret
	}
	return *o.TagNames
}

// GetTagNamesOk returns a tuple with the TagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersFiltersModel) GetTagNamesOk() (*[]string, bool) {
	if o == nil || o.TagNames == nil {
		return nil, false
	}
	return o.TagNames, true
}

// HasTagNames returns a boolean if a field has been set.
func (o *UsersFiltersModel) HasTagNames() bool {
	if o != nil && o.TagNames != nil {
		return true
	}

	return false
}

// SetTagNames gets a reference to the given []string and assigns it to the TagNames field.
func (o *UsersFiltersModel) SetTagNames(v []string) {
	o.TagNames = &v
}

// GetZoneNames returns the ZoneNames field value if set, zero value otherwise.
func (o *UsersFiltersModel) GetZoneNames() []string {
	if o == nil || o.ZoneNames == nil {
		var ret []string
		return ret
	}
	return *o.ZoneNames
}

// GetZoneNamesOk returns a tuple with the ZoneNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersFiltersModel) GetZoneNamesOk() (*[]string, bool) {
	if o == nil || o.ZoneNames == nil {
		return nil, false
	}
	return o.ZoneNames, true
}

// HasZoneNames returns a boolean if a field has been set.
func (o *UsersFiltersModel) HasZoneNames() bool {
	if o != nil && o.ZoneNames != nil {
		return true
	}

	return false
}

// SetZoneNames gets a reference to the given []string and assigns it to the ZoneNames field.
func (o *UsersFiltersModel) SetZoneNames(v []string) {
	o.ZoneNames = &v
}

// GetSystem returns the System field value if set, zero value otherwise.
func (o *UsersFiltersModel) GetSystem() []bool {
	if o == nil || o.System == nil {
		var ret []bool
		return ret
	}
	return *o.System
}

// GetSystemOk returns a tuple with the System field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersFiltersModel) GetSystemOk() (*[]bool, bool) {
	if o == nil || o.System == nil {
		return nil, false
	}
	return o.System, true
}

// HasSystem returns a boolean if a field has been set.
func (o *UsersFiltersModel) HasSystem() bool {
	if o != nil && o.System != nil {
		return true
	}

	return false
}

// SetSystem gets a reference to the given []bool and assigns it to the System field.
func (o *UsersFiltersModel) SetSystem(v []bool) {
	o.System = &v
}

// GetActivated returns the Activated field value if set, zero value otherwise.
func (o *UsersFiltersModel) GetActivated() []bool {
	if o == nil || o.Activated == nil {
		var ret []bool
		return ret
	}
	return *o.Activated
}

// GetActivatedOk returns a tuple with the Activated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersFiltersModel) GetActivatedOk() (*[]bool, bool) {
	if o == nil || o.Activated == nil {
		return nil, false
	}
	return o.Activated, true
}

// HasActivated returns a boolean if a field has been set.
func (o *UsersFiltersModel) HasActivated() bool {
	if o != nil && o.Activated != nil {
		return true
	}

	return false
}

// SetActivated gets a reference to the given []bool and assigns it to the Activated field.
func (o *UsersFiltersModel) SetActivated(v []bool) {
	o.Activated = &v
}

func (o UsersFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.PauseId != nil {
		toSerialize["pause_id"] = o.PauseId
	}
	if o.RoleId != nil {
		toSerialize["role_id"] = o.RoleId
	}
	if o.PartyId != nil {
		toSerialize["party_id"] = o.PartyId
	}
	if o.TagNames != nil {
		toSerialize["tag_names"] = o.TagNames
	}
	if o.ZoneNames != nil {
		toSerialize["zone_names"] = o.ZoneNames
	}
	if o.System != nil {
		toSerialize["system"] = o.System
	}
	if o.Activated != nil {
		toSerialize["activated"] = o.Activated
	}
	return json.Marshal(toSerialize)
}

type NullableUsersFiltersModel struct {
	value *UsersFiltersModel
	isSet bool
}

func (v NullableUsersFiltersModel) Get() *UsersFiltersModel {
	return v.value
}

func (v *NullableUsersFiltersModel) Set(val *UsersFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersFiltersModel(val *UsersFiltersModel) *NullableUsersFiltersModel {
	return &NullableUsersFiltersModel{value: val, isSet: true}
}

func (v NullableUsersFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


