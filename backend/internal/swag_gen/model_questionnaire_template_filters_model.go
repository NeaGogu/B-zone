/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// QuestionnaireTemplateFiltersModel struct for QuestionnaireTemplateFiltersModel
type QuestionnaireTemplateFiltersModel struct {
	// QuestionnaireTemplate id's
	Id *[]int32 `json:"id,omitempty"`
	// Tag names
	TagNames *[]string `json:"tag_names,omitempty"`
	// Zone names
	ZoneNames *[]string `json:"zone_names,omitempty"`
	// Activity Link ids
	Link *[]map[string]interface{} `json:"link,omitempty"`
	// Activity Link ids
	Links *[]map[string]interface{} `json:"links,omitempty"`
	// free search through text and numeric type columns
	SearchText *string `json:"search_text,omitempty"`
	// Zone ID
	ZoneId *int32 `json:"zone_id,omitempty"`
	// Brand ID
	BrandId *int32 `json:"brand_id,omitempty"`
	// Show updated since
	UpdatedAtSince *time.Time `json:"updated_at_since,omitempty"`
	// Show updated till
	UpdatedAtTill *time.Time `json:"updated_at_till,omitempty"`
	// Questionnaire type name
	QuestionnaireTypeName *map[string]interface{} `json:"questionnaire_type_name,omitempty"`
}

// NewQuestionnaireTemplateFiltersModel instantiates a new QuestionnaireTemplateFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuestionnaireTemplateFiltersModel() *QuestionnaireTemplateFiltersModel {
	this := QuestionnaireTemplateFiltersModel{}
	return &this
}

// NewQuestionnaireTemplateFiltersModelWithDefaults instantiates a new QuestionnaireTemplateFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuestionnaireTemplateFiltersModelWithDefaults() *QuestionnaireTemplateFiltersModel {
	this := QuestionnaireTemplateFiltersModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QuestionnaireTemplateFiltersModel) GetId() []int32 {
	if o == nil || o.Id == nil {
		var ret []int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateFiltersModel) GetIdOk() (*[]int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QuestionnaireTemplateFiltersModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given []int32 and assigns it to the Id field.
func (o *QuestionnaireTemplateFiltersModel) SetId(v []int32) {
	o.Id = &v
}

// GetTagNames returns the TagNames field value if set, zero value otherwise.
func (o *QuestionnaireTemplateFiltersModel) GetTagNames() []string {
	if o == nil || o.TagNames == nil {
		var ret []string
		return ret
	}
	return *o.TagNames
}

// GetTagNamesOk returns a tuple with the TagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateFiltersModel) GetTagNamesOk() (*[]string, bool) {
	if o == nil || o.TagNames == nil {
		return nil, false
	}
	return o.TagNames, true
}

// HasTagNames returns a boolean if a field has been set.
func (o *QuestionnaireTemplateFiltersModel) HasTagNames() bool {
	if o != nil && o.TagNames != nil {
		return true
	}

	return false
}

// SetTagNames gets a reference to the given []string and assigns it to the TagNames field.
func (o *QuestionnaireTemplateFiltersModel) SetTagNames(v []string) {
	o.TagNames = &v
}

// GetZoneNames returns the ZoneNames field value if set, zero value otherwise.
func (o *QuestionnaireTemplateFiltersModel) GetZoneNames() []string {
	if o == nil || o.ZoneNames == nil {
		var ret []string
		return ret
	}
	return *o.ZoneNames
}

// GetZoneNamesOk returns a tuple with the ZoneNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateFiltersModel) GetZoneNamesOk() (*[]string, bool) {
	if o == nil || o.ZoneNames == nil {
		return nil, false
	}
	return o.ZoneNames, true
}

// HasZoneNames returns a boolean if a field has been set.
func (o *QuestionnaireTemplateFiltersModel) HasZoneNames() bool {
	if o != nil && o.ZoneNames != nil {
		return true
	}

	return false
}

// SetZoneNames gets a reference to the given []string and assigns it to the ZoneNames field.
func (o *QuestionnaireTemplateFiltersModel) SetZoneNames(v []string) {
	o.ZoneNames = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *QuestionnaireTemplateFiltersModel) GetLink() []map[string]interface{} {
	if o == nil || o.Link == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateFiltersModel) GetLinkOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Link == nil {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *QuestionnaireTemplateFiltersModel) HasLink() bool {
	if o != nil && o.Link != nil {
		return true
	}

	return false
}

// SetLink gets a reference to the given []map[string]interface{} and assigns it to the Link field.
func (o *QuestionnaireTemplateFiltersModel) SetLink(v []map[string]interface{}) {
	o.Link = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *QuestionnaireTemplateFiltersModel) GetLinks() []map[string]interface{} {
	if o == nil || o.Links == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateFiltersModel) GetLinksOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *QuestionnaireTemplateFiltersModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []map[string]interface{} and assigns it to the Links field.
func (o *QuestionnaireTemplateFiltersModel) SetLinks(v []map[string]interface{}) {
	o.Links = &v
}

// GetSearchText returns the SearchText field value if set, zero value otherwise.
func (o *QuestionnaireTemplateFiltersModel) GetSearchText() string {
	if o == nil || o.SearchText == nil {
		var ret string
		return ret
	}
	return *o.SearchText
}

// GetSearchTextOk returns a tuple with the SearchText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateFiltersModel) GetSearchTextOk() (*string, bool) {
	if o == nil || o.SearchText == nil {
		return nil, false
	}
	return o.SearchText, true
}

// HasSearchText returns a boolean if a field has been set.
func (o *QuestionnaireTemplateFiltersModel) HasSearchText() bool {
	if o != nil && o.SearchText != nil {
		return true
	}

	return false
}

// SetSearchText gets a reference to the given string and assigns it to the SearchText field.
func (o *QuestionnaireTemplateFiltersModel) SetSearchText(v string) {
	o.SearchText = &v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise.
func (o *QuestionnaireTemplateFiltersModel) GetZoneId() int32 {
	if o == nil || o.ZoneId == nil {
		var ret int32
		return ret
	}
	return *o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateFiltersModel) GetZoneIdOk() (*int32, bool) {
	if o == nil || o.ZoneId == nil {
		return nil, false
	}
	return o.ZoneId, true
}

// HasZoneId returns a boolean if a field has been set.
func (o *QuestionnaireTemplateFiltersModel) HasZoneId() bool {
	if o != nil && o.ZoneId != nil {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given int32 and assigns it to the ZoneId field.
func (o *QuestionnaireTemplateFiltersModel) SetZoneId(v int32) {
	o.ZoneId = &v
}

// GetBrandId returns the BrandId field value if set, zero value otherwise.
func (o *QuestionnaireTemplateFiltersModel) GetBrandId() int32 {
	if o == nil || o.BrandId == nil {
		var ret int32
		return ret
	}
	return *o.BrandId
}

// GetBrandIdOk returns a tuple with the BrandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateFiltersModel) GetBrandIdOk() (*int32, bool) {
	if o == nil || o.BrandId == nil {
		return nil, false
	}
	return o.BrandId, true
}

// HasBrandId returns a boolean if a field has been set.
func (o *QuestionnaireTemplateFiltersModel) HasBrandId() bool {
	if o != nil && o.BrandId != nil {
		return true
	}

	return false
}

// SetBrandId gets a reference to the given int32 and assigns it to the BrandId field.
func (o *QuestionnaireTemplateFiltersModel) SetBrandId(v int32) {
	o.BrandId = &v
}

// GetUpdatedAtSince returns the UpdatedAtSince field value if set, zero value otherwise.
func (o *QuestionnaireTemplateFiltersModel) GetUpdatedAtSince() time.Time {
	if o == nil || o.UpdatedAtSince == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAtSince
}

// GetUpdatedAtSinceOk returns a tuple with the UpdatedAtSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateFiltersModel) GetUpdatedAtSinceOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAtSince == nil {
		return nil, false
	}
	return o.UpdatedAtSince, true
}

// HasUpdatedAtSince returns a boolean if a field has been set.
func (o *QuestionnaireTemplateFiltersModel) HasUpdatedAtSince() bool {
	if o != nil && o.UpdatedAtSince != nil {
		return true
	}

	return false
}

// SetUpdatedAtSince gets a reference to the given time.Time and assigns it to the UpdatedAtSince field.
func (o *QuestionnaireTemplateFiltersModel) SetUpdatedAtSince(v time.Time) {
	o.UpdatedAtSince = &v
}

// GetUpdatedAtTill returns the UpdatedAtTill field value if set, zero value otherwise.
func (o *QuestionnaireTemplateFiltersModel) GetUpdatedAtTill() time.Time {
	if o == nil || o.UpdatedAtTill == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAtTill
}

// GetUpdatedAtTillOk returns a tuple with the UpdatedAtTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateFiltersModel) GetUpdatedAtTillOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAtTill == nil {
		return nil, false
	}
	return o.UpdatedAtTill, true
}

// HasUpdatedAtTill returns a boolean if a field has been set.
func (o *QuestionnaireTemplateFiltersModel) HasUpdatedAtTill() bool {
	if o != nil && o.UpdatedAtTill != nil {
		return true
	}

	return false
}

// SetUpdatedAtTill gets a reference to the given time.Time and assigns it to the UpdatedAtTill field.
func (o *QuestionnaireTemplateFiltersModel) SetUpdatedAtTill(v time.Time) {
	o.UpdatedAtTill = &v
}

// GetQuestionnaireTypeName returns the QuestionnaireTypeName field value if set, zero value otherwise.
func (o *QuestionnaireTemplateFiltersModel) GetQuestionnaireTypeName() map[string]interface{} {
	if o == nil || o.QuestionnaireTypeName == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.QuestionnaireTypeName
}

// GetQuestionnaireTypeNameOk returns a tuple with the QuestionnaireTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateFiltersModel) GetQuestionnaireTypeNameOk() (*map[string]interface{}, bool) {
	if o == nil || o.QuestionnaireTypeName == nil {
		return nil, false
	}
	return o.QuestionnaireTypeName, true
}

// HasQuestionnaireTypeName returns a boolean if a field has been set.
func (o *QuestionnaireTemplateFiltersModel) HasQuestionnaireTypeName() bool {
	if o != nil && o.QuestionnaireTypeName != nil {
		return true
	}

	return false
}

// SetQuestionnaireTypeName gets a reference to the given map[string]interface{} and assigns it to the QuestionnaireTypeName field.
func (o *QuestionnaireTemplateFiltersModel) SetQuestionnaireTypeName(v map[string]interface{}) {
	o.QuestionnaireTypeName = &v
}

func (o QuestionnaireTemplateFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.TagNames != nil {
		toSerialize["tag_names"] = o.TagNames
	}
	if o.ZoneNames != nil {
		toSerialize["zone_names"] = o.ZoneNames
	}
	if o.Link != nil {
		toSerialize["link"] = o.Link
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.SearchText != nil {
		toSerialize["search_text"] = o.SearchText
	}
	if o.ZoneId != nil {
		toSerialize["zone_id"] = o.ZoneId
	}
	if o.BrandId != nil {
		toSerialize["brand_id"] = o.BrandId
	}
	if o.UpdatedAtSince != nil {
		toSerialize["updated_at_since"] = o.UpdatedAtSince
	}
	if o.UpdatedAtTill != nil {
		toSerialize["updated_at_till"] = o.UpdatedAtTill
	}
	if o.QuestionnaireTypeName != nil {
		toSerialize["questionnaire_type_name"] = o.QuestionnaireTypeName
	}
	return json.Marshal(toSerialize)
}

type NullableQuestionnaireTemplateFiltersModel struct {
	value *QuestionnaireTemplateFiltersModel
	isSet bool
}

func (v NullableQuestionnaireTemplateFiltersModel) Get() *QuestionnaireTemplateFiltersModel {
	return v.value
}

func (v *NullableQuestionnaireTemplateFiltersModel) Set(val *QuestionnaireTemplateFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableQuestionnaireTemplateFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableQuestionnaireTemplateFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuestionnaireTemplateFiltersModel(val *QuestionnaireTemplateFiltersModel) *NullableQuestionnaireTemplateFiltersModel {
	return &NullableQuestionnaireTemplateFiltersModel{value: val, isSet: true}
}

func (v NullableQuestionnaireTemplateFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuestionnaireTemplateFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


