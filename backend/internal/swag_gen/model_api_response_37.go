/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiResponse37 struct for ApiResponse37
type ApiResponse37 struct {
	// Message describing the error
	Message *string `json:"message,omitempty"`
	// Error code
	Code *float32 `json:"code,omitempty"`
}

// NewApiResponse37 instantiates a new ApiResponse37 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiResponse37() *ApiResponse37 {
	this := ApiResponse37{}
	return &this
}

// NewApiResponse37WithDefaults instantiates a new ApiResponse37 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiResponse37WithDefaults() *ApiResponse37 {
	this := ApiResponse37{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ApiResponse37) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiResponse37) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ApiResponse37) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ApiResponse37) SetMessage(v string) {
	o.Message = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ApiResponse37) GetCode() float32 {
	if o == nil || o.Code == nil {
		var ret float32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiResponse37) GetCodeOk() (*float32, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ApiResponse37) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given float32 and assigns it to the Code field.
func (o *ApiResponse37) SetCode(v float32) {
	o.Code = &v
}

func (o ApiResponse37) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableApiResponse37 struct {
	value *ApiResponse37
	isSet bool
}

func (v NullableApiResponse37) Get() *ApiResponse37 {
	return v.value
}

func (v *NullableApiResponse37) Set(val *ApiResponse37) {
	v.value = val
	v.isSet = true
}

func (v NullableApiResponse37) IsSet() bool {
	return v.isSet
}

func (v *NullableApiResponse37) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiResponse37(val *ApiResponse37) *NullableApiResponse37 {
	return &NullableApiResponse37{value: val, isSet: true}
}

func (v NullableApiResponse37) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiResponse37) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


