/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PhoneNrModel struct for PhoneNrModel
type PhoneNrModel struct {
	// Unique ID
	Id *int64 `json:"id,omitempty"`
	// Address ID asociated with this email address
	AddressId *int64 `json:"address_id,omitempty"`
	// Phone number Country Code
	CountryCode *string `json:"country_code,omitempty"`
	// Phone number type name
	PhoneNrTypeName *string `json:"phone_nr_type_name,omitempty"`
	// Phone number
	Nr *string `json:"nr,omitempty"`
	// Phone number description
	Description *string `json:"description,omitempty"`
	// primary phone number
	Primary *bool `json:"primary,omitempty"`
}

// NewPhoneNrModel instantiates a new PhoneNrModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhoneNrModel() *PhoneNrModel {
	this := PhoneNrModel{}
	return &this
}

// NewPhoneNrModelWithDefaults instantiates a new PhoneNrModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhoneNrModelWithDefaults() *PhoneNrModel {
	this := PhoneNrModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PhoneNrModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNrModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PhoneNrModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *PhoneNrModel) SetId(v int64) {
	o.Id = &v
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *PhoneNrModel) GetAddressId() int64 {
	if o == nil || o.AddressId == nil {
		var ret int64
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNrModel) GetAddressIdOk() (*int64, bool) {
	if o == nil || o.AddressId == nil {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *PhoneNrModel) HasAddressId() bool {
	if o != nil && o.AddressId != nil {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given int64 and assigns it to the AddressId field.
func (o *PhoneNrModel) SetAddressId(v int64) {
	o.AddressId = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *PhoneNrModel) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNrModel) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *PhoneNrModel) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *PhoneNrModel) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetPhoneNrTypeName returns the PhoneNrTypeName field value if set, zero value otherwise.
func (o *PhoneNrModel) GetPhoneNrTypeName() string {
	if o == nil || o.PhoneNrTypeName == nil {
		var ret string
		return ret
	}
	return *o.PhoneNrTypeName
}

// GetPhoneNrTypeNameOk returns a tuple with the PhoneNrTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNrModel) GetPhoneNrTypeNameOk() (*string, bool) {
	if o == nil || o.PhoneNrTypeName == nil {
		return nil, false
	}
	return o.PhoneNrTypeName, true
}

// HasPhoneNrTypeName returns a boolean if a field has been set.
func (o *PhoneNrModel) HasPhoneNrTypeName() bool {
	if o != nil && o.PhoneNrTypeName != nil {
		return true
	}

	return false
}

// SetPhoneNrTypeName gets a reference to the given string and assigns it to the PhoneNrTypeName field.
func (o *PhoneNrModel) SetPhoneNrTypeName(v string) {
	o.PhoneNrTypeName = &v
}

// GetNr returns the Nr field value if set, zero value otherwise.
func (o *PhoneNrModel) GetNr() string {
	if o == nil || o.Nr == nil {
		var ret string
		return ret
	}
	return *o.Nr
}

// GetNrOk returns a tuple with the Nr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNrModel) GetNrOk() (*string, bool) {
	if o == nil || o.Nr == nil {
		return nil, false
	}
	return o.Nr, true
}

// HasNr returns a boolean if a field has been set.
func (o *PhoneNrModel) HasNr() bool {
	if o != nil && o.Nr != nil {
		return true
	}

	return false
}

// SetNr gets a reference to the given string and assigns it to the Nr field.
func (o *PhoneNrModel) SetNr(v string) {
	o.Nr = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PhoneNrModel) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNrModel) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PhoneNrModel) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PhoneNrModel) SetDescription(v string) {
	o.Description = &v
}

// GetPrimary returns the Primary field value if set, zero value otherwise.
func (o *PhoneNrModel) GetPrimary() bool {
	if o == nil || o.Primary == nil {
		var ret bool
		return ret
	}
	return *o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhoneNrModel) GetPrimaryOk() (*bool, bool) {
	if o == nil || o.Primary == nil {
		return nil, false
	}
	return o.Primary, true
}

// HasPrimary returns a boolean if a field has been set.
func (o *PhoneNrModel) HasPrimary() bool {
	if o != nil && o.Primary != nil {
		return true
	}

	return false
}

// SetPrimary gets a reference to the given bool and assigns it to the Primary field.
func (o *PhoneNrModel) SetPrimary(v bool) {
	o.Primary = &v
}

func (o PhoneNrModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AddressId != nil {
		toSerialize["address_id"] = o.AddressId
	}
	if o.CountryCode != nil {
		toSerialize["country_code"] = o.CountryCode
	}
	if o.PhoneNrTypeName != nil {
		toSerialize["phone_nr_type_name"] = o.PhoneNrTypeName
	}
	if o.Nr != nil {
		toSerialize["nr"] = o.Nr
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Primary != nil {
		toSerialize["primary"] = o.Primary
	}
	return json.Marshal(toSerialize)
}

type NullablePhoneNrModel struct {
	value *PhoneNrModel
	isSet bool
}

func (v NullablePhoneNrModel) Get() *PhoneNrModel {
	return v.value
}

func (v *NullablePhoneNrModel) Set(val *PhoneNrModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePhoneNrModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePhoneNrModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhoneNrModel(val *PhoneNrModel) *NullablePhoneNrModel {
	return &NullablePhoneNrModel{value: val, isSet: true}
}

func (v NullablePhoneNrModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhoneNrModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


