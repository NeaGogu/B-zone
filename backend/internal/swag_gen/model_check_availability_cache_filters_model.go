/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CheckAvailabilityCacheFiltersModel struct for CheckAvailabilityCacheFiltersModel
type CheckAvailabilityCacheFiltersModel struct {
	// Availability check will continue to analyze days until there is no availability in the system anymore or the number of days with available time slots has reached the max_nr_of_days_with_availability
	MaxNrOfDaysWithAvailability *int32 `json:"max_nr_of_days_with_availability,omitempty"`
}

// NewCheckAvailabilityCacheFiltersModel instantiates a new CheckAvailabilityCacheFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckAvailabilityCacheFiltersModel() *CheckAvailabilityCacheFiltersModel {
	this := CheckAvailabilityCacheFiltersModel{}
	return &this
}

// NewCheckAvailabilityCacheFiltersModelWithDefaults instantiates a new CheckAvailabilityCacheFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckAvailabilityCacheFiltersModelWithDefaults() *CheckAvailabilityCacheFiltersModel {
	this := CheckAvailabilityCacheFiltersModel{}
	return &this
}

// GetMaxNrOfDaysWithAvailability returns the MaxNrOfDaysWithAvailability field value if set, zero value otherwise.
func (o *CheckAvailabilityCacheFiltersModel) GetMaxNrOfDaysWithAvailability() int32 {
	if o == nil || o.MaxNrOfDaysWithAvailability == nil {
		var ret int32
		return ret
	}
	return *o.MaxNrOfDaysWithAvailability
}

// GetMaxNrOfDaysWithAvailabilityOk returns a tuple with the MaxNrOfDaysWithAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckAvailabilityCacheFiltersModel) GetMaxNrOfDaysWithAvailabilityOk() (*int32, bool) {
	if o == nil || o.MaxNrOfDaysWithAvailability == nil {
		return nil, false
	}
	return o.MaxNrOfDaysWithAvailability, true
}

// HasMaxNrOfDaysWithAvailability returns a boolean if a field has been set.
func (o *CheckAvailabilityCacheFiltersModel) HasMaxNrOfDaysWithAvailability() bool {
	if o != nil && o.MaxNrOfDaysWithAvailability != nil {
		return true
	}

	return false
}

// SetMaxNrOfDaysWithAvailability gets a reference to the given int32 and assigns it to the MaxNrOfDaysWithAvailability field.
func (o *CheckAvailabilityCacheFiltersModel) SetMaxNrOfDaysWithAvailability(v int32) {
	o.MaxNrOfDaysWithAvailability = &v
}

func (o CheckAvailabilityCacheFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MaxNrOfDaysWithAvailability != nil {
		toSerialize["max_nr_of_days_with_availability"] = o.MaxNrOfDaysWithAvailability
	}
	return json.Marshal(toSerialize)
}

type NullableCheckAvailabilityCacheFiltersModel struct {
	value *CheckAvailabilityCacheFiltersModel
	isSet bool
}

func (v NullableCheckAvailabilityCacheFiltersModel) Get() *CheckAvailabilityCacheFiltersModel {
	return v.value
}

func (v *NullableCheckAvailabilityCacheFiltersModel) Set(val *CheckAvailabilityCacheFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckAvailabilityCacheFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckAvailabilityCacheFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckAvailabilityCacheFiltersModel(val *CheckAvailabilityCacheFiltersModel) *NullableCheckAvailabilityCacheFiltersModel {
	return &NullableCheckAvailabilityCacheFiltersModel{value: val, isSet: true}
}

func (v NullableCheckAvailabilityCacheFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckAvailabilityCacheFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


