/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ActivityTypeFiltersModel struct for ActivityTypeFiltersModel
type ActivityTypeFiltersModel struct {
	// ActivityType Unique Identifier(s)
	Id *[]int32 `json:"id,omitempty"`
	// ActivityType names
	Name *[]string `json:"name,omitempty"`
	// special activities are ones which are not planned but simly added by the driver during the route execution
	Special *[]bool `json:"special,omitempty"`
	// assignment_entry activity types are used for order entry forms
	AssignmentEntry *[]bool `json:"assignment_entry,omitempty"`
}

// NewActivityTypeFiltersModel instantiates a new ActivityTypeFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityTypeFiltersModel() *ActivityTypeFiltersModel {
	this := ActivityTypeFiltersModel{}
	return &this
}

// NewActivityTypeFiltersModelWithDefaults instantiates a new ActivityTypeFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityTypeFiltersModelWithDefaults() *ActivityTypeFiltersModel {
	this := ActivityTypeFiltersModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ActivityTypeFiltersModel) GetId() []int32 {
	if o == nil || o.Id == nil {
		var ret []int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityTypeFiltersModel) GetIdOk() (*[]int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ActivityTypeFiltersModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given []int32 and assigns it to the Id field.
func (o *ActivityTypeFiltersModel) SetId(v []int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ActivityTypeFiltersModel) GetName() []string {
	if o == nil || o.Name == nil {
		var ret []string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityTypeFiltersModel) GetNameOk() (*[]string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ActivityTypeFiltersModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given []string and assigns it to the Name field.
func (o *ActivityTypeFiltersModel) SetName(v []string) {
	o.Name = &v
}

// GetSpecial returns the Special field value if set, zero value otherwise.
func (o *ActivityTypeFiltersModel) GetSpecial() []bool {
	if o == nil || o.Special == nil {
		var ret []bool
		return ret
	}
	return *o.Special
}

// GetSpecialOk returns a tuple with the Special field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityTypeFiltersModel) GetSpecialOk() (*[]bool, bool) {
	if o == nil || o.Special == nil {
		return nil, false
	}
	return o.Special, true
}

// HasSpecial returns a boolean if a field has been set.
func (o *ActivityTypeFiltersModel) HasSpecial() bool {
	if o != nil && o.Special != nil {
		return true
	}

	return false
}

// SetSpecial gets a reference to the given []bool and assigns it to the Special field.
func (o *ActivityTypeFiltersModel) SetSpecial(v []bool) {
	o.Special = &v
}

// GetAssignmentEntry returns the AssignmentEntry field value if set, zero value otherwise.
func (o *ActivityTypeFiltersModel) GetAssignmentEntry() []bool {
	if o == nil || o.AssignmentEntry == nil {
		var ret []bool
		return ret
	}
	return *o.AssignmentEntry
}

// GetAssignmentEntryOk returns a tuple with the AssignmentEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityTypeFiltersModel) GetAssignmentEntryOk() (*[]bool, bool) {
	if o == nil || o.AssignmentEntry == nil {
		return nil, false
	}
	return o.AssignmentEntry, true
}

// HasAssignmentEntry returns a boolean if a field has been set.
func (o *ActivityTypeFiltersModel) HasAssignmentEntry() bool {
	if o != nil && o.AssignmentEntry != nil {
		return true
	}

	return false
}

// SetAssignmentEntry gets a reference to the given []bool and assigns it to the AssignmentEntry field.
func (o *ActivityTypeFiltersModel) SetAssignmentEntry(v []bool) {
	o.AssignmentEntry = &v
}

func (o ActivityTypeFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Special != nil {
		toSerialize["special"] = o.Special
	}
	if o.AssignmentEntry != nil {
		toSerialize["assignment_entry"] = o.AssignmentEntry
	}
	return json.Marshal(toSerialize)
}

type NullableActivityTypeFiltersModel struct {
	value *ActivityTypeFiltersModel
	isSet bool
}

func (v NullableActivityTypeFiltersModel) Get() *ActivityTypeFiltersModel {
	return v.value
}

func (v *NullableActivityTypeFiltersModel) Set(val *ActivityTypeFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityTypeFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityTypeFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityTypeFiltersModel(val *ActivityTypeFiltersModel) *NullableActivityTypeFiltersModel {
	return &NullableActivityTypeFiltersModel{value: val, isSet: true}
}

func (v NullableActivityTypeFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityTypeFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


