/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SettingsGetConstantsResponse struct for SettingsGetConstantsResponse
type SettingsGetConstantsResponse struct {
	// Irregularity Categories
	IrregularityCategory *map[string]string `json:"irregularity_category,omitempty"`
	// Irregularity Causes
	IrregularityCause *map[string]string `json:"irregularity_cause,omitempty"`
	// Instruction Types
	InstructionType *map[string]string `json:"instruction_type,omitempty"`
	// Reference Types
	ReferenceType *map[string]string `json:"reference_type,omitempty"`
	// Relation Types
	RelationType *map[string]string `json:"relation_type,omitempty"`
	// Names of the days in the week
	WeekDay *map[string]string `json:"week_day,omitempty"`
	// Action Types
	ActionType *map[string]string `json:"action_type,omitempty"`
	// Activity Types
	ActivityType *map[string]string `json:"activity_type,omitempty"`
	// Special Activities
	SpecialActivity *map[string]string `json:"special_activity,omitempty"`
	// EA Activity
	AeActivity *map[string]string `json:"ae_activity,omitempty"`
	// Address Types
	AddressType *map[string]string `json:"address_type,omitempty"`
	// EA Address Types
	AeAddressType *map[string]string `json:"ae_address_type,omitempty"`
	// Communication Delivery Methods
	CommunicationDeliveryMethod *map[string]string `json:"communication_delivery_method,omitempty"`
	// Communication Message Types
	CommunicationMessageType *map[string]string `json:"communication_message_type,omitempty"`
	// Counters
	Counter *map[string]string `json:"counter,omitempty"`
	// Equipment Types
	EquipmentType *map[string]string `json:"equipment_type,omitempty"`
	// File Types
	FileType *map[string]string `json:"file_type,omitempty"`
	// Incoterms
	Incoterm *map[string]string `json:"incoterm,omitempty"`
	// Log Types
	LogType *map[string]string `json:"log_type,omitempty"`
	// Object Types
	ObjectType *map[string]string `json:"object_type,omitempty"`
	// Optimisation Objectives
	OptimisationObjective *map[string]string `json:"optimisation_objective,omitempty"`
	// Party Types
	PartyType *map[string]string `json:"party_type,omitempty"`
	// Phone NR Types
	PhoneNrType *map[string]string `json:"phone_nr_type,omitempty"`
	// Recurrence Periods
	RecurrencePeriod *map[string]string `json:"recurrence_period,omitempty"`
	// Recurrence Types
	RecurrenceType *map[string]string `json:"recurrence_type,omitempty"`
	// Roles
	Role *map[string]string `json:"role,omitempty"`
	// SayWhen Statuses
	SaywhenStatus *map[string]string `json:"saywhen_status,omitempty"`
	// Settings
	Settings *map[string]string `json:"settings,omitempty"`
	// Settings Groups
	SettingsGroup *map[string]string `json:"settings_group,omitempty"`
	// Status Types
	StatusType *map[string]string `json:"status_type,omitempty"`
	// Route Statuses
	RouteStatus *map[string]string `json:"route_status,omitempty"`
	// Activity Statuses
	ActivityStatus *map[string]string `json:"activity_status,omitempty"`
	// Shipment Statuses
	ShipmentStatus *map[string]string `json:"shipment_status,omitempty"`
	// Package Line Statuses
	PackageLineStatus *map[string]string `json:"package_line_status,omitempty"`
	// Assignment Statuses
	AssignmentStatus *map[string]string `json:"assignment_status,omitempty"`
	// Message Statuses
	MessageStatus *map[string]string `json:"message_status,omitempty"`
	// User Statuses
	UserStatus *map[string]string `json:"user_status,omitempty"`
	// Job Statuses
	JobStatus *map[string]string `json:"job_status,omitempty"`
	// API Request Statuses
	ApiRequestStatus *map[string]string `json:"api_request_status,omitempty"`
	// System Providers
	SystemProvider *map[string]string `json:"system_provider,omitempty"`
	// Providers
	Provider *map[string]string `json:"provider,omitempty"`
	// Time Slot Types
	TimeSlotType *map[string]string `json:"time_slot_type,omitempty"`
	// Transaction Types
	TransactionType *map[string]string `json:"transaction_type,omitempty"`
	// UOM
	Uom *map[string]string `json:"uom,omitempty"`
	// UOM Groups
	UomGroup *map[string]string `json:"uom_group,omitempty"`
	// Vehicle Types
	VehicleType *map[string]string `json:"vehicle_type,omitempty"`
	// Package Types
	PackageType *map[string]string `json:"package_type,omitempty"`
}

// NewSettingsGetConstantsResponse instantiates a new SettingsGetConstantsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettingsGetConstantsResponse() *SettingsGetConstantsResponse {
	this := SettingsGetConstantsResponse{}
	return &this
}

// NewSettingsGetConstantsResponseWithDefaults instantiates a new SettingsGetConstantsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettingsGetConstantsResponseWithDefaults() *SettingsGetConstantsResponse {
	this := SettingsGetConstantsResponse{}
	return &this
}

// GetIrregularityCategory returns the IrregularityCategory field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetIrregularityCategory() map[string]string {
	if o == nil || o.IrregularityCategory == nil {
		var ret map[string]string
		return ret
	}
	return *o.IrregularityCategory
}

// GetIrregularityCategoryOk returns a tuple with the IrregularityCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetIrregularityCategoryOk() (*map[string]string, bool) {
	if o == nil || o.IrregularityCategory == nil {
		return nil, false
	}
	return o.IrregularityCategory, true
}

// HasIrregularityCategory returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasIrregularityCategory() bool {
	if o != nil && o.IrregularityCategory != nil {
		return true
	}

	return false
}

// SetIrregularityCategory gets a reference to the given map[string]string and assigns it to the IrregularityCategory field.
func (o *SettingsGetConstantsResponse) SetIrregularityCategory(v map[string]string) {
	o.IrregularityCategory = &v
}

// GetIrregularityCause returns the IrregularityCause field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetIrregularityCause() map[string]string {
	if o == nil || o.IrregularityCause == nil {
		var ret map[string]string
		return ret
	}
	return *o.IrregularityCause
}

// GetIrregularityCauseOk returns a tuple with the IrregularityCause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetIrregularityCauseOk() (*map[string]string, bool) {
	if o == nil || o.IrregularityCause == nil {
		return nil, false
	}
	return o.IrregularityCause, true
}

// HasIrregularityCause returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasIrregularityCause() bool {
	if o != nil && o.IrregularityCause != nil {
		return true
	}

	return false
}

// SetIrregularityCause gets a reference to the given map[string]string and assigns it to the IrregularityCause field.
func (o *SettingsGetConstantsResponse) SetIrregularityCause(v map[string]string) {
	o.IrregularityCause = &v
}

// GetInstructionType returns the InstructionType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetInstructionType() map[string]string {
	if o == nil || o.InstructionType == nil {
		var ret map[string]string
		return ret
	}
	return *o.InstructionType
}

// GetInstructionTypeOk returns a tuple with the InstructionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetInstructionTypeOk() (*map[string]string, bool) {
	if o == nil || o.InstructionType == nil {
		return nil, false
	}
	return o.InstructionType, true
}

// HasInstructionType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasInstructionType() bool {
	if o != nil && o.InstructionType != nil {
		return true
	}

	return false
}

// SetInstructionType gets a reference to the given map[string]string and assigns it to the InstructionType field.
func (o *SettingsGetConstantsResponse) SetInstructionType(v map[string]string) {
	o.InstructionType = &v
}

// GetReferenceType returns the ReferenceType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetReferenceType() map[string]string {
	if o == nil || o.ReferenceType == nil {
		var ret map[string]string
		return ret
	}
	return *o.ReferenceType
}

// GetReferenceTypeOk returns a tuple with the ReferenceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetReferenceTypeOk() (*map[string]string, bool) {
	if o == nil || o.ReferenceType == nil {
		return nil, false
	}
	return o.ReferenceType, true
}

// HasReferenceType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasReferenceType() bool {
	if o != nil && o.ReferenceType != nil {
		return true
	}

	return false
}

// SetReferenceType gets a reference to the given map[string]string and assigns it to the ReferenceType field.
func (o *SettingsGetConstantsResponse) SetReferenceType(v map[string]string) {
	o.ReferenceType = &v
}

// GetRelationType returns the RelationType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetRelationType() map[string]string {
	if o == nil || o.RelationType == nil {
		var ret map[string]string
		return ret
	}
	return *o.RelationType
}

// GetRelationTypeOk returns a tuple with the RelationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetRelationTypeOk() (*map[string]string, bool) {
	if o == nil || o.RelationType == nil {
		return nil, false
	}
	return o.RelationType, true
}

// HasRelationType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasRelationType() bool {
	if o != nil && o.RelationType != nil {
		return true
	}

	return false
}

// SetRelationType gets a reference to the given map[string]string and assigns it to the RelationType field.
func (o *SettingsGetConstantsResponse) SetRelationType(v map[string]string) {
	o.RelationType = &v
}

// GetWeekDay returns the WeekDay field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetWeekDay() map[string]string {
	if o == nil || o.WeekDay == nil {
		var ret map[string]string
		return ret
	}
	return *o.WeekDay
}

// GetWeekDayOk returns a tuple with the WeekDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetWeekDayOk() (*map[string]string, bool) {
	if o == nil || o.WeekDay == nil {
		return nil, false
	}
	return o.WeekDay, true
}

// HasWeekDay returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasWeekDay() bool {
	if o != nil && o.WeekDay != nil {
		return true
	}

	return false
}

// SetWeekDay gets a reference to the given map[string]string and assigns it to the WeekDay field.
func (o *SettingsGetConstantsResponse) SetWeekDay(v map[string]string) {
	o.WeekDay = &v
}

// GetActionType returns the ActionType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetActionType() map[string]string {
	if o == nil || o.ActionType == nil {
		var ret map[string]string
		return ret
	}
	return *o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetActionTypeOk() (*map[string]string, bool) {
	if o == nil || o.ActionType == nil {
		return nil, false
	}
	return o.ActionType, true
}

// HasActionType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasActionType() bool {
	if o != nil && o.ActionType != nil {
		return true
	}

	return false
}

// SetActionType gets a reference to the given map[string]string and assigns it to the ActionType field.
func (o *SettingsGetConstantsResponse) SetActionType(v map[string]string) {
	o.ActionType = &v
}

// GetActivityType returns the ActivityType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetActivityType() map[string]string {
	if o == nil || o.ActivityType == nil {
		var ret map[string]string
		return ret
	}
	return *o.ActivityType
}

// GetActivityTypeOk returns a tuple with the ActivityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetActivityTypeOk() (*map[string]string, bool) {
	if o == nil || o.ActivityType == nil {
		return nil, false
	}
	return o.ActivityType, true
}

// HasActivityType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasActivityType() bool {
	if o != nil && o.ActivityType != nil {
		return true
	}

	return false
}

// SetActivityType gets a reference to the given map[string]string and assigns it to the ActivityType field.
func (o *SettingsGetConstantsResponse) SetActivityType(v map[string]string) {
	o.ActivityType = &v
}

// GetSpecialActivity returns the SpecialActivity field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetSpecialActivity() map[string]string {
	if o == nil || o.SpecialActivity == nil {
		var ret map[string]string
		return ret
	}
	return *o.SpecialActivity
}

// GetSpecialActivityOk returns a tuple with the SpecialActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetSpecialActivityOk() (*map[string]string, bool) {
	if o == nil || o.SpecialActivity == nil {
		return nil, false
	}
	return o.SpecialActivity, true
}

// HasSpecialActivity returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasSpecialActivity() bool {
	if o != nil && o.SpecialActivity != nil {
		return true
	}

	return false
}

// SetSpecialActivity gets a reference to the given map[string]string and assigns it to the SpecialActivity field.
func (o *SettingsGetConstantsResponse) SetSpecialActivity(v map[string]string) {
	o.SpecialActivity = &v
}

// GetAeActivity returns the AeActivity field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetAeActivity() map[string]string {
	if o == nil || o.AeActivity == nil {
		var ret map[string]string
		return ret
	}
	return *o.AeActivity
}

// GetAeActivityOk returns a tuple with the AeActivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetAeActivityOk() (*map[string]string, bool) {
	if o == nil || o.AeActivity == nil {
		return nil, false
	}
	return o.AeActivity, true
}

// HasAeActivity returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasAeActivity() bool {
	if o != nil && o.AeActivity != nil {
		return true
	}

	return false
}

// SetAeActivity gets a reference to the given map[string]string and assigns it to the AeActivity field.
func (o *SettingsGetConstantsResponse) SetAeActivity(v map[string]string) {
	o.AeActivity = &v
}

// GetAddressType returns the AddressType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetAddressType() map[string]string {
	if o == nil || o.AddressType == nil {
		var ret map[string]string
		return ret
	}
	return *o.AddressType
}

// GetAddressTypeOk returns a tuple with the AddressType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetAddressTypeOk() (*map[string]string, bool) {
	if o == nil || o.AddressType == nil {
		return nil, false
	}
	return o.AddressType, true
}

// HasAddressType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasAddressType() bool {
	if o != nil && o.AddressType != nil {
		return true
	}

	return false
}

// SetAddressType gets a reference to the given map[string]string and assigns it to the AddressType field.
func (o *SettingsGetConstantsResponse) SetAddressType(v map[string]string) {
	o.AddressType = &v
}

// GetAeAddressType returns the AeAddressType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetAeAddressType() map[string]string {
	if o == nil || o.AeAddressType == nil {
		var ret map[string]string
		return ret
	}
	return *o.AeAddressType
}

// GetAeAddressTypeOk returns a tuple with the AeAddressType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetAeAddressTypeOk() (*map[string]string, bool) {
	if o == nil || o.AeAddressType == nil {
		return nil, false
	}
	return o.AeAddressType, true
}

// HasAeAddressType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasAeAddressType() bool {
	if o != nil && o.AeAddressType != nil {
		return true
	}

	return false
}

// SetAeAddressType gets a reference to the given map[string]string and assigns it to the AeAddressType field.
func (o *SettingsGetConstantsResponse) SetAeAddressType(v map[string]string) {
	o.AeAddressType = &v
}

// GetCommunicationDeliveryMethod returns the CommunicationDeliveryMethod field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetCommunicationDeliveryMethod() map[string]string {
	if o == nil || o.CommunicationDeliveryMethod == nil {
		var ret map[string]string
		return ret
	}
	return *o.CommunicationDeliveryMethod
}

// GetCommunicationDeliveryMethodOk returns a tuple with the CommunicationDeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetCommunicationDeliveryMethodOk() (*map[string]string, bool) {
	if o == nil || o.CommunicationDeliveryMethod == nil {
		return nil, false
	}
	return o.CommunicationDeliveryMethod, true
}

// HasCommunicationDeliveryMethod returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasCommunicationDeliveryMethod() bool {
	if o != nil && o.CommunicationDeliveryMethod != nil {
		return true
	}

	return false
}

// SetCommunicationDeliveryMethod gets a reference to the given map[string]string and assigns it to the CommunicationDeliveryMethod field.
func (o *SettingsGetConstantsResponse) SetCommunicationDeliveryMethod(v map[string]string) {
	o.CommunicationDeliveryMethod = &v
}

// GetCommunicationMessageType returns the CommunicationMessageType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetCommunicationMessageType() map[string]string {
	if o == nil || o.CommunicationMessageType == nil {
		var ret map[string]string
		return ret
	}
	return *o.CommunicationMessageType
}

// GetCommunicationMessageTypeOk returns a tuple with the CommunicationMessageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetCommunicationMessageTypeOk() (*map[string]string, bool) {
	if o == nil || o.CommunicationMessageType == nil {
		return nil, false
	}
	return o.CommunicationMessageType, true
}

// HasCommunicationMessageType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasCommunicationMessageType() bool {
	if o != nil && o.CommunicationMessageType != nil {
		return true
	}

	return false
}

// SetCommunicationMessageType gets a reference to the given map[string]string and assigns it to the CommunicationMessageType field.
func (o *SettingsGetConstantsResponse) SetCommunicationMessageType(v map[string]string) {
	o.CommunicationMessageType = &v
}

// GetCounter returns the Counter field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetCounter() map[string]string {
	if o == nil || o.Counter == nil {
		var ret map[string]string
		return ret
	}
	return *o.Counter
}

// GetCounterOk returns a tuple with the Counter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetCounterOk() (*map[string]string, bool) {
	if o == nil || o.Counter == nil {
		return nil, false
	}
	return o.Counter, true
}

// HasCounter returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasCounter() bool {
	if o != nil && o.Counter != nil {
		return true
	}

	return false
}

// SetCounter gets a reference to the given map[string]string and assigns it to the Counter field.
func (o *SettingsGetConstantsResponse) SetCounter(v map[string]string) {
	o.Counter = &v
}

// GetEquipmentType returns the EquipmentType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetEquipmentType() map[string]string {
	if o == nil || o.EquipmentType == nil {
		var ret map[string]string
		return ret
	}
	return *o.EquipmentType
}

// GetEquipmentTypeOk returns a tuple with the EquipmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetEquipmentTypeOk() (*map[string]string, bool) {
	if o == nil || o.EquipmentType == nil {
		return nil, false
	}
	return o.EquipmentType, true
}

// HasEquipmentType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasEquipmentType() bool {
	if o != nil && o.EquipmentType != nil {
		return true
	}

	return false
}

// SetEquipmentType gets a reference to the given map[string]string and assigns it to the EquipmentType field.
func (o *SettingsGetConstantsResponse) SetEquipmentType(v map[string]string) {
	o.EquipmentType = &v
}

// GetFileType returns the FileType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetFileType() map[string]string {
	if o == nil || o.FileType == nil {
		var ret map[string]string
		return ret
	}
	return *o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetFileTypeOk() (*map[string]string, bool) {
	if o == nil || o.FileType == nil {
		return nil, false
	}
	return o.FileType, true
}

// HasFileType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasFileType() bool {
	if o != nil && o.FileType != nil {
		return true
	}

	return false
}

// SetFileType gets a reference to the given map[string]string and assigns it to the FileType field.
func (o *SettingsGetConstantsResponse) SetFileType(v map[string]string) {
	o.FileType = &v
}

// GetIncoterm returns the Incoterm field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetIncoterm() map[string]string {
	if o == nil || o.Incoterm == nil {
		var ret map[string]string
		return ret
	}
	return *o.Incoterm
}

// GetIncotermOk returns a tuple with the Incoterm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetIncotermOk() (*map[string]string, bool) {
	if o == nil || o.Incoterm == nil {
		return nil, false
	}
	return o.Incoterm, true
}

// HasIncoterm returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasIncoterm() bool {
	if o != nil && o.Incoterm != nil {
		return true
	}

	return false
}

// SetIncoterm gets a reference to the given map[string]string and assigns it to the Incoterm field.
func (o *SettingsGetConstantsResponse) SetIncoterm(v map[string]string) {
	o.Incoterm = &v
}

// GetLogType returns the LogType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetLogType() map[string]string {
	if o == nil || o.LogType == nil {
		var ret map[string]string
		return ret
	}
	return *o.LogType
}

// GetLogTypeOk returns a tuple with the LogType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetLogTypeOk() (*map[string]string, bool) {
	if o == nil || o.LogType == nil {
		return nil, false
	}
	return o.LogType, true
}

// HasLogType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasLogType() bool {
	if o != nil && o.LogType != nil {
		return true
	}

	return false
}

// SetLogType gets a reference to the given map[string]string and assigns it to the LogType field.
func (o *SettingsGetConstantsResponse) SetLogType(v map[string]string) {
	o.LogType = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetObjectType() map[string]string {
	if o == nil || o.ObjectType == nil {
		var ret map[string]string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetObjectTypeOk() (*map[string]string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given map[string]string and assigns it to the ObjectType field.
func (o *SettingsGetConstantsResponse) SetObjectType(v map[string]string) {
	o.ObjectType = &v
}

// GetOptimisationObjective returns the OptimisationObjective field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetOptimisationObjective() map[string]string {
	if o == nil || o.OptimisationObjective == nil {
		var ret map[string]string
		return ret
	}
	return *o.OptimisationObjective
}

// GetOptimisationObjectiveOk returns a tuple with the OptimisationObjective field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetOptimisationObjectiveOk() (*map[string]string, bool) {
	if o == nil || o.OptimisationObjective == nil {
		return nil, false
	}
	return o.OptimisationObjective, true
}

// HasOptimisationObjective returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasOptimisationObjective() bool {
	if o != nil && o.OptimisationObjective != nil {
		return true
	}

	return false
}

// SetOptimisationObjective gets a reference to the given map[string]string and assigns it to the OptimisationObjective field.
func (o *SettingsGetConstantsResponse) SetOptimisationObjective(v map[string]string) {
	o.OptimisationObjective = &v
}

// GetPartyType returns the PartyType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetPartyType() map[string]string {
	if o == nil || o.PartyType == nil {
		var ret map[string]string
		return ret
	}
	return *o.PartyType
}

// GetPartyTypeOk returns a tuple with the PartyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetPartyTypeOk() (*map[string]string, bool) {
	if o == nil || o.PartyType == nil {
		return nil, false
	}
	return o.PartyType, true
}

// HasPartyType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasPartyType() bool {
	if o != nil && o.PartyType != nil {
		return true
	}

	return false
}

// SetPartyType gets a reference to the given map[string]string and assigns it to the PartyType field.
func (o *SettingsGetConstantsResponse) SetPartyType(v map[string]string) {
	o.PartyType = &v
}

// GetPhoneNrType returns the PhoneNrType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetPhoneNrType() map[string]string {
	if o == nil || o.PhoneNrType == nil {
		var ret map[string]string
		return ret
	}
	return *o.PhoneNrType
}

// GetPhoneNrTypeOk returns a tuple with the PhoneNrType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetPhoneNrTypeOk() (*map[string]string, bool) {
	if o == nil || o.PhoneNrType == nil {
		return nil, false
	}
	return o.PhoneNrType, true
}

// HasPhoneNrType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasPhoneNrType() bool {
	if o != nil && o.PhoneNrType != nil {
		return true
	}

	return false
}

// SetPhoneNrType gets a reference to the given map[string]string and assigns it to the PhoneNrType field.
func (o *SettingsGetConstantsResponse) SetPhoneNrType(v map[string]string) {
	o.PhoneNrType = &v
}

// GetRecurrencePeriod returns the RecurrencePeriod field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetRecurrencePeriod() map[string]string {
	if o == nil || o.RecurrencePeriod == nil {
		var ret map[string]string
		return ret
	}
	return *o.RecurrencePeriod
}

// GetRecurrencePeriodOk returns a tuple with the RecurrencePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetRecurrencePeriodOk() (*map[string]string, bool) {
	if o == nil || o.RecurrencePeriod == nil {
		return nil, false
	}
	return o.RecurrencePeriod, true
}

// HasRecurrencePeriod returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasRecurrencePeriod() bool {
	if o != nil && o.RecurrencePeriod != nil {
		return true
	}

	return false
}

// SetRecurrencePeriod gets a reference to the given map[string]string and assigns it to the RecurrencePeriod field.
func (o *SettingsGetConstantsResponse) SetRecurrencePeriod(v map[string]string) {
	o.RecurrencePeriod = &v
}

// GetRecurrenceType returns the RecurrenceType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetRecurrenceType() map[string]string {
	if o == nil || o.RecurrenceType == nil {
		var ret map[string]string
		return ret
	}
	return *o.RecurrenceType
}

// GetRecurrenceTypeOk returns a tuple with the RecurrenceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetRecurrenceTypeOk() (*map[string]string, bool) {
	if o == nil || o.RecurrenceType == nil {
		return nil, false
	}
	return o.RecurrenceType, true
}

// HasRecurrenceType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasRecurrenceType() bool {
	if o != nil && o.RecurrenceType != nil {
		return true
	}

	return false
}

// SetRecurrenceType gets a reference to the given map[string]string and assigns it to the RecurrenceType field.
func (o *SettingsGetConstantsResponse) SetRecurrenceType(v map[string]string) {
	o.RecurrenceType = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetRole() map[string]string {
	if o == nil || o.Role == nil {
		var ret map[string]string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetRoleOk() (*map[string]string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given map[string]string and assigns it to the Role field.
func (o *SettingsGetConstantsResponse) SetRole(v map[string]string) {
	o.Role = &v
}

// GetSaywhenStatus returns the SaywhenStatus field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetSaywhenStatus() map[string]string {
	if o == nil || o.SaywhenStatus == nil {
		var ret map[string]string
		return ret
	}
	return *o.SaywhenStatus
}

// GetSaywhenStatusOk returns a tuple with the SaywhenStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetSaywhenStatusOk() (*map[string]string, bool) {
	if o == nil || o.SaywhenStatus == nil {
		return nil, false
	}
	return o.SaywhenStatus, true
}

// HasSaywhenStatus returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasSaywhenStatus() bool {
	if o != nil && o.SaywhenStatus != nil {
		return true
	}

	return false
}

// SetSaywhenStatus gets a reference to the given map[string]string and assigns it to the SaywhenStatus field.
func (o *SettingsGetConstantsResponse) SetSaywhenStatus(v map[string]string) {
	o.SaywhenStatus = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetSettings() map[string]string {
	if o == nil || o.Settings == nil {
		var ret map[string]string
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetSettingsOk() (*map[string]string, bool) {
	if o == nil || o.Settings == nil {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasSettings() bool {
	if o != nil && o.Settings != nil {
		return true
	}

	return false
}

// SetSettings gets a reference to the given map[string]string and assigns it to the Settings field.
func (o *SettingsGetConstantsResponse) SetSettings(v map[string]string) {
	o.Settings = &v
}

// GetSettingsGroup returns the SettingsGroup field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetSettingsGroup() map[string]string {
	if o == nil || o.SettingsGroup == nil {
		var ret map[string]string
		return ret
	}
	return *o.SettingsGroup
}

// GetSettingsGroupOk returns a tuple with the SettingsGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetSettingsGroupOk() (*map[string]string, bool) {
	if o == nil || o.SettingsGroup == nil {
		return nil, false
	}
	return o.SettingsGroup, true
}

// HasSettingsGroup returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasSettingsGroup() bool {
	if o != nil && o.SettingsGroup != nil {
		return true
	}

	return false
}

// SetSettingsGroup gets a reference to the given map[string]string and assigns it to the SettingsGroup field.
func (o *SettingsGetConstantsResponse) SetSettingsGroup(v map[string]string) {
	o.SettingsGroup = &v
}

// GetStatusType returns the StatusType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetStatusType() map[string]string {
	if o == nil || o.StatusType == nil {
		var ret map[string]string
		return ret
	}
	return *o.StatusType
}

// GetStatusTypeOk returns a tuple with the StatusType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetStatusTypeOk() (*map[string]string, bool) {
	if o == nil || o.StatusType == nil {
		return nil, false
	}
	return o.StatusType, true
}

// HasStatusType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasStatusType() bool {
	if o != nil && o.StatusType != nil {
		return true
	}

	return false
}

// SetStatusType gets a reference to the given map[string]string and assigns it to the StatusType field.
func (o *SettingsGetConstantsResponse) SetStatusType(v map[string]string) {
	o.StatusType = &v
}

// GetRouteStatus returns the RouteStatus field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetRouteStatus() map[string]string {
	if o == nil || o.RouteStatus == nil {
		var ret map[string]string
		return ret
	}
	return *o.RouteStatus
}

// GetRouteStatusOk returns a tuple with the RouteStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetRouteStatusOk() (*map[string]string, bool) {
	if o == nil || o.RouteStatus == nil {
		return nil, false
	}
	return o.RouteStatus, true
}

// HasRouteStatus returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasRouteStatus() bool {
	if o != nil && o.RouteStatus != nil {
		return true
	}

	return false
}

// SetRouteStatus gets a reference to the given map[string]string and assigns it to the RouteStatus field.
func (o *SettingsGetConstantsResponse) SetRouteStatus(v map[string]string) {
	o.RouteStatus = &v
}

// GetActivityStatus returns the ActivityStatus field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetActivityStatus() map[string]string {
	if o == nil || o.ActivityStatus == nil {
		var ret map[string]string
		return ret
	}
	return *o.ActivityStatus
}

// GetActivityStatusOk returns a tuple with the ActivityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetActivityStatusOk() (*map[string]string, bool) {
	if o == nil || o.ActivityStatus == nil {
		return nil, false
	}
	return o.ActivityStatus, true
}

// HasActivityStatus returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasActivityStatus() bool {
	if o != nil && o.ActivityStatus != nil {
		return true
	}

	return false
}

// SetActivityStatus gets a reference to the given map[string]string and assigns it to the ActivityStatus field.
func (o *SettingsGetConstantsResponse) SetActivityStatus(v map[string]string) {
	o.ActivityStatus = &v
}

// GetShipmentStatus returns the ShipmentStatus field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetShipmentStatus() map[string]string {
	if o == nil || o.ShipmentStatus == nil {
		var ret map[string]string
		return ret
	}
	return *o.ShipmentStatus
}

// GetShipmentStatusOk returns a tuple with the ShipmentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetShipmentStatusOk() (*map[string]string, bool) {
	if o == nil || o.ShipmentStatus == nil {
		return nil, false
	}
	return o.ShipmentStatus, true
}

// HasShipmentStatus returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasShipmentStatus() bool {
	if o != nil && o.ShipmentStatus != nil {
		return true
	}

	return false
}

// SetShipmentStatus gets a reference to the given map[string]string and assigns it to the ShipmentStatus field.
func (o *SettingsGetConstantsResponse) SetShipmentStatus(v map[string]string) {
	o.ShipmentStatus = &v
}

// GetPackageLineStatus returns the PackageLineStatus field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetPackageLineStatus() map[string]string {
	if o == nil || o.PackageLineStatus == nil {
		var ret map[string]string
		return ret
	}
	return *o.PackageLineStatus
}

// GetPackageLineStatusOk returns a tuple with the PackageLineStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetPackageLineStatusOk() (*map[string]string, bool) {
	if o == nil || o.PackageLineStatus == nil {
		return nil, false
	}
	return o.PackageLineStatus, true
}

// HasPackageLineStatus returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasPackageLineStatus() bool {
	if o != nil && o.PackageLineStatus != nil {
		return true
	}

	return false
}

// SetPackageLineStatus gets a reference to the given map[string]string and assigns it to the PackageLineStatus field.
func (o *SettingsGetConstantsResponse) SetPackageLineStatus(v map[string]string) {
	o.PackageLineStatus = &v
}

// GetAssignmentStatus returns the AssignmentStatus field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetAssignmentStatus() map[string]string {
	if o == nil || o.AssignmentStatus == nil {
		var ret map[string]string
		return ret
	}
	return *o.AssignmentStatus
}

// GetAssignmentStatusOk returns a tuple with the AssignmentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetAssignmentStatusOk() (*map[string]string, bool) {
	if o == nil || o.AssignmentStatus == nil {
		return nil, false
	}
	return o.AssignmentStatus, true
}

// HasAssignmentStatus returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasAssignmentStatus() bool {
	if o != nil && o.AssignmentStatus != nil {
		return true
	}

	return false
}

// SetAssignmentStatus gets a reference to the given map[string]string and assigns it to the AssignmentStatus field.
func (o *SettingsGetConstantsResponse) SetAssignmentStatus(v map[string]string) {
	o.AssignmentStatus = &v
}

// GetMessageStatus returns the MessageStatus field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetMessageStatus() map[string]string {
	if o == nil || o.MessageStatus == nil {
		var ret map[string]string
		return ret
	}
	return *o.MessageStatus
}

// GetMessageStatusOk returns a tuple with the MessageStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetMessageStatusOk() (*map[string]string, bool) {
	if o == nil || o.MessageStatus == nil {
		return nil, false
	}
	return o.MessageStatus, true
}

// HasMessageStatus returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasMessageStatus() bool {
	if o != nil && o.MessageStatus != nil {
		return true
	}

	return false
}

// SetMessageStatus gets a reference to the given map[string]string and assigns it to the MessageStatus field.
func (o *SettingsGetConstantsResponse) SetMessageStatus(v map[string]string) {
	o.MessageStatus = &v
}

// GetUserStatus returns the UserStatus field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetUserStatus() map[string]string {
	if o == nil || o.UserStatus == nil {
		var ret map[string]string
		return ret
	}
	return *o.UserStatus
}

// GetUserStatusOk returns a tuple with the UserStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetUserStatusOk() (*map[string]string, bool) {
	if o == nil || o.UserStatus == nil {
		return nil, false
	}
	return o.UserStatus, true
}

// HasUserStatus returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasUserStatus() bool {
	if o != nil && o.UserStatus != nil {
		return true
	}

	return false
}

// SetUserStatus gets a reference to the given map[string]string and assigns it to the UserStatus field.
func (o *SettingsGetConstantsResponse) SetUserStatus(v map[string]string) {
	o.UserStatus = &v
}

// GetJobStatus returns the JobStatus field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetJobStatus() map[string]string {
	if o == nil || o.JobStatus == nil {
		var ret map[string]string
		return ret
	}
	return *o.JobStatus
}

// GetJobStatusOk returns a tuple with the JobStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetJobStatusOk() (*map[string]string, bool) {
	if o == nil || o.JobStatus == nil {
		return nil, false
	}
	return o.JobStatus, true
}

// HasJobStatus returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasJobStatus() bool {
	if o != nil && o.JobStatus != nil {
		return true
	}

	return false
}

// SetJobStatus gets a reference to the given map[string]string and assigns it to the JobStatus field.
func (o *SettingsGetConstantsResponse) SetJobStatus(v map[string]string) {
	o.JobStatus = &v
}

// GetApiRequestStatus returns the ApiRequestStatus field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetApiRequestStatus() map[string]string {
	if o == nil || o.ApiRequestStatus == nil {
		var ret map[string]string
		return ret
	}
	return *o.ApiRequestStatus
}

// GetApiRequestStatusOk returns a tuple with the ApiRequestStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetApiRequestStatusOk() (*map[string]string, bool) {
	if o == nil || o.ApiRequestStatus == nil {
		return nil, false
	}
	return o.ApiRequestStatus, true
}

// HasApiRequestStatus returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasApiRequestStatus() bool {
	if o != nil && o.ApiRequestStatus != nil {
		return true
	}

	return false
}

// SetApiRequestStatus gets a reference to the given map[string]string and assigns it to the ApiRequestStatus field.
func (o *SettingsGetConstantsResponse) SetApiRequestStatus(v map[string]string) {
	o.ApiRequestStatus = &v
}

// GetSystemProvider returns the SystemProvider field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetSystemProvider() map[string]string {
	if o == nil || o.SystemProvider == nil {
		var ret map[string]string
		return ret
	}
	return *o.SystemProvider
}

// GetSystemProviderOk returns a tuple with the SystemProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetSystemProviderOk() (*map[string]string, bool) {
	if o == nil || o.SystemProvider == nil {
		return nil, false
	}
	return o.SystemProvider, true
}

// HasSystemProvider returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasSystemProvider() bool {
	if o != nil && o.SystemProvider != nil {
		return true
	}

	return false
}

// SetSystemProvider gets a reference to the given map[string]string and assigns it to the SystemProvider field.
func (o *SettingsGetConstantsResponse) SetSystemProvider(v map[string]string) {
	o.SystemProvider = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetProvider() map[string]string {
	if o == nil || o.Provider == nil {
		var ret map[string]string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetProviderOk() (*map[string]string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given map[string]string and assigns it to the Provider field.
func (o *SettingsGetConstantsResponse) SetProvider(v map[string]string) {
	o.Provider = &v
}

// GetTimeSlotType returns the TimeSlotType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetTimeSlotType() map[string]string {
	if o == nil || o.TimeSlotType == nil {
		var ret map[string]string
		return ret
	}
	return *o.TimeSlotType
}

// GetTimeSlotTypeOk returns a tuple with the TimeSlotType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetTimeSlotTypeOk() (*map[string]string, bool) {
	if o == nil || o.TimeSlotType == nil {
		return nil, false
	}
	return o.TimeSlotType, true
}

// HasTimeSlotType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasTimeSlotType() bool {
	if o != nil && o.TimeSlotType != nil {
		return true
	}

	return false
}

// SetTimeSlotType gets a reference to the given map[string]string and assigns it to the TimeSlotType field.
func (o *SettingsGetConstantsResponse) SetTimeSlotType(v map[string]string) {
	o.TimeSlotType = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetTransactionType() map[string]string {
	if o == nil || o.TransactionType == nil {
		var ret map[string]string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetTransactionTypeOk() (*map[string]string, bool) {
	if o == nil || o.TransactionType == nil {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasTransactionType() bool {
	if o != nil && o.TransactionType != nil {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given map[string]string and assigns it to the TransactionType field.
func (o *SettingsGetConstantsResponse) SetTransactionType(v map[string]string) {
	o.TransactionType = &v
}

// GetUom returns the Uom field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetUom() map[string]string {
	if o == nil || o.Uom == nil {
		var ret map[string]string
		return ret
	}
	return *o.Uom
}

// GetUomOk returns a tuple with the Uom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetUomOk() (*map[string]string, bool) {
	if o == nil || o.Uom == nil {
		return nil, false
	}
	return o.Uom, true
}

// HasUom returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasUom() bool {
	if o != nil && o.Uom != nil {
		return true
	}

	return false
}

// SetUom gets a reference to the given map[string]string and assigns it to the Uom field.
func (o *SettingsGetConstantsResponse) SetUom(v map[string]string) {
	o.Uom = &v
}

// GetUomGroup returns the UomGroup field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetUomGroup() map[string]string {
	if o == nil || o.UomGroup == nil {
		var ret map[string]string
		return ret
	}
	return *o.UomGroup
}

// GetUomGroupOk returns a tuple with the UomGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetUomGroupOk() (*map[string]string, bool) {
	if o == nil || o.UomGroup == nil {
		return nil, false
	}
	return o.UomGroup, true
}

// HasUomGroup returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasUomGroup() bool {
	if o != nil && o.UomGroup != nil {
		return true
	}

	return false
}

// SetUomGroup gets a reference to the given map[string]string and assigns it to the UomGroup field.
func (o *SettingsGetConstantsResponse) SetUomGroup(v map[string]string) {
	o.UomGroup = &v
}

// GetVehicleType returns the VehicleType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetVehicleType() map[string]string {
	if o == nil || o.VehicleType == nil {
		var ret map[string]string
		return ret
	}
	return *o.VehicleType
}

// GetVehicleTypeOk returns a tuple with the VehicleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetVehicleTypeOk() (*map[string]string, bool) {
	if o == nil || o.VehicleType == nil {
		return nil, false
	}
	return o.VehicleType, true
}

// HasVehicleType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasVehicleType() bool {
	if o != nil && o.VehicleType != nil {
		return true
	}

	return false
}

// SetVehicleType gets a reference to the given map[string]string and assigns it to the VehicleType field.
func (o *SettingsGetConstantsResponse) SetVehicleType(v map[string]string) {
	o.VehicleType = &v
}

// GetPackageType returns the PackageType field value if set, zero value otherwise.
func (o *SettingsGetConstantsResponse) GetPackageType() map[string]string {
	if o == nil || o.PackageType == nil {
		var ret map[string]string
		return ret
	}
	return *o.PackageType
}

// GetPackageTypeOk returns a tuple with the PackageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsGetConstantsResponse) GetPackageTypeOk() (*map[string]string, bool) {
	if o == nil || o.PackageType == nil {
		return nil, false
	}
	return o.PackageType, true
}

// HasPackageType returns a boolean if a field has been set.
func (o *SettingsGetConstantsResponse) HasPackageType() bool {
	if o != nil && o.PackageType != nil {
		return true
	}

	return false
}

// SetPackageType gets a reference to the given map[string]string and assigns it to the PackageType field.
func (o *SettingsGetConstantsResponse) SetPackageType(v map[string]string) {
	o.PackageType = &v
}

func (o SettingsGetConstantsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IrregularityCategory != nil {
		toSerialize["irregularity_category"] = o.IrregularityCategory
	}
	if o.IrregularityCause != nil {
		toSerialize["irregularity_cause"] = o.IrregularityCause
	}
	if o.InstructionType != nil {
		toSerialize["instruction_type"] = o.InstructionType
	}
	if o.ReferenceType != nil {
		toSerialize["reference_type"] = o.ReferenceType
	}
	if o.RelationType != nil {
		toSerialize["relation_type"] = o.RelationType
	}
	if o.WeekDay != nil {
		toSerialize["week_day"] = o.WeekDay
	}
	if o.ActionType != nil {
		toSerialize["action_type"] = o.ActionType
	}
	if o.ActivityType != nil {
		toSerialize["activity_type"] = o.ActivityType
	}
	if o.SpecialActivity != nil {
		toSerialize["special_activity"] = o.SpecialActivity
	}
	if o.AeActivity != nil {
		toSerialize["ae_activity"] = o.AeActivity
	}
	if o.AddressType != nil {
		toSerialize["address_type"] = o.AddressType
	}
	if o.AeAddressType != nil {
		toSerialize["ae_address_type"] = o.AeAddressType
	}
	if o.CommunicationDeliveryMethod != nil {
		toSerialize["communication_delivery_method"] = o.CommunicationDeliveryMethod
	}
	if o.CommunicationMessageType != nil {
		toSerialize["communication_message_type"] = o.CommunicationMessageType
	}
	if o.Counter != nil {
		toSerialize["counter"] = o.Counter
	}
	if o.EquipmentType != nil {
		toSerialize["equipment_type"] = o.EquipmentType
	}
	if o.FileType != nil {
		toSerialize["file_type"] = o.FileType
	}
	if o.Incoterm != nil {
		toSerialize["incoterm"] = o.Incoterm
	}
	if o.LogType != nil {
		toSerialize["log_type"] = o.LogType
	}
	if o.ObjectType != nil {
		toSerialize["object_type"] = o.ObjectType
	}
	if o.OptimisationObjective != nil {
		toSerialize["optimisation_objective"] = o.OptimisationObjective
	}
	if o.PartyType != nil {
		toSerialize["party_type"] = o.PartyType
	}
	if o.PhoneNrType != nil {
		toSerialize["phone_nr_type"] = o.PhoneNrType
	}
	if o.RecurrencePeriod != nil {
		toSerialize["recurrence_period"] = o.RecurrencePeriod
	}
	if o.RecurrenceType != nil {
		toSerialize["recurrence_type"] = o.RecurrenceType
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.SaywhenStatus != nil {
		toSerialize["saywhen_status"] = o.SaywhenStatus
	}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	if o.SettingsGroup != nil {
		toSerialize["settings_group"] = o.SettingsGroup
	}
	if o.StatusType != nil {
		toSerialize["status_type"] = o.StatusType
	}
	if o.RouteStatus != nil {
		toSerialize["route_status"] = o.RouteStatus
	}
	if o.ActivityStatus != nil {
		toSerialize["activity_status"] = o.ActivityStatus
	}
	if o.ShipmentStatus != nil {
		toSerialize["shipment_status"] = o.ShipmentStatus
	}
	if o.PackageLineStatus != nil {
		toSerialize["package_line_status"] = o.PackageLineStatus
	}
	if o.AssignmentStatus != nil {
		toSerialize["assignment_status"] = o.AssignmentStatus
	}
	if o.MessageStatus != nil {
		toSerialize["message_status"] = o.MessageStatus
	}
	if o.UserStatus != nil {
		toSerialize["user_status"] = o.UserStatus
	}
	if o.JobStatus != nil {
		toSerialize["job_status"] = o.JobStatus
	}
	if o.ApiRequestStatus != nil {
		toSerialize["api_request_status"] = o.ApiRequestStatus
	}
	if o.SystemProvider != nil {
		toSerialize["system_provider"] = o.SystemProvider
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.TimeSlotType != nil {
		toSerialize["time_slot_type"] = o.TimeSlotType
	}
	if o.TransactionType != nil {
		toSerialize["transaction_type"] = o.TransactionType
	}
	if o.Uom != nil {
		toSerialize["uom"] = o.Uom
	}
	if o.UomGroup != nil {
		toSerialize["uom_group"] = o.UomGroup
	}
	if o.VehicleType != nil {
		toSerialize["vehicle_type"] = o.VehicleType
	}
	if o.PackageType != nil {
		toSerialize["package_type"] = o.PackageType
	}
	return json.Marshal(toSerialize)
}

type NullableSettingsGetConstantsResponse struct {
	value *SettingsGetConstantsResponse
	isSet bool
}

func (v NullableSettingsGetConstantsResponse) Get() *SettingsGetConstantsResponse {
	return v.value
}

func (v *NullableSettingsGetConstantsResponse) Set(val *SettingsGetConstantsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSettingsGetConstantsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSettingsGetConstantsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettingsGetConstantsResponse(val *SettingsGetConstantsResponse) *NullableSettingsGetConstantsResponse {
	return &NullableSettingsGetConstantsResponse{value: val, isSet: true}
}

func (v NullableSettingsGetConstantsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettingsGetConstantsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


