/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UomOptionsModel struct for UomOptionsModel
type UomOptionsModel struct {
	// 
	IncludeUomGroup *bool `json:"include_uom_group,omitempty"`
}

// NewUomOptionsModel instantiates a new UomOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUomOptionsModel() *UomOptionsModel {
	this := UomOptionsModel{}
	return &this
}

// NewUomOptionsModelWithDefaults instantiates a new UomOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUomOptionsModelWithDefaults() *UomOptionsModel {
	this := UomOptionsModel{}
	return &this
}

// GetIncludeUomGroup returns the IncludeUomGroup field value if set, zero value otherwise.
func (o *UomOptionsModel) GetIncludeUomGroup() bool {
	if o == nil || o.IncludeUomGroup == nil {
		var ret bool
		return ret
	}
	return *o.IncludeUomGroup
}

// GetIncludeUomGroupOk returns a tuple with the IncludeUomGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UomOptionsModel) GetIncludeUomGroupOk() (*bool, bool) {
	if o == nil || o.IncludeUomGroup == nil {
		return nil, false
	}
	return o.IncludeUomGroup, true
}

// HasIncludeUomGroup returns a boolean if a field has been set.
func (o *UomOptionsModel) HasIncludeUomGroup() bool {
	if o != nil && o.IncludeUomGroup != nil {
		return true
	}

	return false
}

// SetIncludeUomGroup gets a reference to the given bool and assigns it to the IncludeUomGroup field.
func (o *UomOptionsModel) SetIncludeUomGroup(v bool) {
	o.IncludeUomGroup = &v
}

func (o UomOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeUomGroup != nil {
		toSerialize["include_uom_group"] = o.IncludeUomGroup
	}
	return json.Marshal(toSerialize)
}

type NullableUomOptionsModel struct {
	value *UomOptionsModel
	isSet bool
}

func (v NullableUomOptionsModel) Get() *UomOptionsModel {
	return v.value
}

func (v *NullableUomOptionsModel) Set(val *UomOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUomOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUomOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUomOptionsModel(val *UomOptionsModel) *NullableUomOptionsModel {
	return &NullableUomOptionsModel{value: val, isSet: true}
}

func (v NullableUomOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUomOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


