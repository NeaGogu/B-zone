/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddTagToObjectDataModel struct for AddTagToObjectDataModel
type AddTagToObjectDataModel struct {
	// The id of the tag which should be added to the object
	Id *int64 `json:"id,omitempty"`
	// The name of the tag which should be added to the object
	Name *string `json:"name,omitempty"`
	// link to the tag which should be added to the object
	Links *[]LinkModel `json:"links,omitempty"`
}

// NewAddTagToObjectDataModel instantiates a new AddTagToObjectDataModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddTagToObjectDataModel() *AddTagToObjectDataModel {
	this := AddTagToObjectDataModel{}
	return &this
}

// NewAddTagToObjectDataModelWithDefaults instantiates a new AddTagToObjectDataModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddTagToObjectDataModelWithDefaults() *AddTagToObjectDataModel {
	this := AddTagToObjectDataModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddTagToObjectDataModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddTagToObjectDataModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AddTagToObjectDataModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AddTagToObjectDataModel) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddTagToObjectDataModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddTagToObjectDataModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AddTagToObjectDataModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddTagToObjectDataModel) SetName(v string) {
	o.Name = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AddTagToObjectDataModel) GetLinks() []LinkModel {
	if o == nil || o.Links == nil {
		var ret []LinkModel
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddTagToObjectDataModel) GetLinksOk() (*[]LinkModel, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AddTagToObjectDataModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkModel and assigns it to the Links field.
func (o *AddTagToObjectDataModel) SetLinks(v []LinkModel) {
	o.Links = &v
}

func (o AddTagToObjectDataModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableAddTagToObjectDataModel struct {
	value *AddTagToObjectDataModel
	isSet bool
}

func (v NullableAddTagToObjectDataModel) Get() *AddTagToObjectDataModel {
	return v.value
}

func (v *NullableAddTagToObjectDataModel) Set(val *AddTagToObjectDataModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddTagToObjectDataModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddTagToObjectDataModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddTagToObjectDataModel(val *AddTagToObjectDataModel) *NullableAddTagToObjectDataModel {
	return &NullableAddTagToObjectDataModel{value: val, isSet: true}
}

func (v NullableAddTagToObjectDataModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddTagToObjectDataModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


