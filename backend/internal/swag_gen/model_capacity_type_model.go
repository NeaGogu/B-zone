/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CapacityTypeModel struct for CapacityTypeModel
type CapacityTypeModel struct {
	// Unique ID
	Id *int64 `json:"id,omitempty"`
	// name of capacity type
	Name *string `json:"name,omitempty"`
	// extra properties of capacity type
	Properties *[]string `json:"properties,omitempty"`
	// Unit of Measurement ID
	UomId *string `json:"uom_id,omitempty"`
	// Unit of Measurement Name
	UomName *string `json:"uom_name,omitempty"`
	Uom *UomModel `json:"uom,omitempty"`
	ValuesUom *UomModel `json:"values_uom,omitempty"`
	// created by system boolean
	Sys *bool `json:"sys,omitempty"`
}

// NewCapacityTypeModel instantiates a new CapacityTypeModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapacityTypeModel() *CapacityTypeModel {
	this := CapacityTypeModel{}
	return &this
}

// NewCapacityTypeModelWithDefaults instantiates a new CapacityTypeModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapacityTypeModelWithDefaults() *CapacityTypeModel {
	this := CapacityTypeModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CapacityTypeModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityTypeModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CapacityTypeModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *CapacityTypeModel) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CapacityTypeModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityTypeModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CapacityTypeModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CapacityTypeModel) SetName(v string) {
	o.Name = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *CapacityTypeModel) GetProperties() []string {
	if o == nil || o.Properties == nil {
		var ret []string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityTypeModel) GetPropertiesOk() (*[]string, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *CapacityTypeModel) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []string and assigns it to the Properties field.
func (o *CapacityTypeModel) SetProperties(v []string) {
	o.Properties = &v
}

// GetUomId returns the UomId field value if set, zero value otherwise.
func (o *CapacityTypeModel) GetUomId() string {
	if o == nil || o.UomId == nil {
		var ret string
		return ret
	}
	return *o.UomId
}

// GetUomIdOk returns a tuple with the UomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityTypeModel) GetUomIdOk() (*string, bool) {
	if o == nil || o.UomId == nil {
		return nil, false
	}
	return o.UomId, true
}

// HasUomId returns a boolean if a field has been set.
func (o *CapacityTypeModel) HasUomId() bool {
	if o != nil && o.UomId != nil {
		return true
	}

	return false
}

// SetUomId gets a reference to the given string and assigns it to the UomId field.
func (o *CapacityTypeModel) SetUomId(v string) {
	o.UomId = &v
}

// GetUomName returns the UomName field value if set, zero value otherwise.
func (o *CapacityTypeModel) GetUomName() string {
	if o == nil || o.UomName == nil {
		var ret string
		return ret
	}
	return *o.UomName
}

// GetUomNameOk returns a tuple with the UomName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityTypeModel) GetUomNameOk() (*string, bool) {
	if o == nil || o.UomName == nil {
		return nil, false
	}
	return o.UomName, true
}

// HasUomName returns a boolean if a field has been set.
func (o *CapacityTypeModel) HasUomName() bool {
	if o != nil && o.UomName != nil {
		return true
	}

	return false
}

// SetUomName gets a reference to the given string and assigns it to the UomName field.
func (o *CapacityTypeModel) SetUomName(v string) {
	o.UomName = &v
}

// GetUom returns the Uom field value if set, zero value otherwise.
func (o *CapacityTypeModel) GetUom() UomModel {
	if o == nil || o.Uom == nil {
		var ret UomModel
		return ret
	}
	return *o.Uom
}

// GetUomOk returns a tuple with the Uom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityTypeModel) GetUomOk() (*UomModel, bool) {
	if o == nil || o.Uom == nil {
		return nil, false
	}
	return o.Uom, true
}

// HasUom returns a boolean if a field has been set.
func (o *CapacityTypeModel) HasUom() bool {
	if o != nil && o.Uom != nil {
		return true
	}

	return false
}

// SetUom gets a reference to the given UomModel and assigns it to the Uom field.
func (o *CapacityTypeModel) SetUom(v UomModel) {
	o.Uom = &v
}

// GetValuesUom returns the ValuesUom field value if set, zero value otherwise.
func (o *CapacityTypeModel) GetValuesUom() UomModel {
	if o == nil || o.ValuesUom == nil {
		var ret UomModel
		return ret
	}
	return *o.ValuesUom
}

// GetValuesUomOk returns a tuple with the ValuesUom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityTypeModel) GetValuesUomOk() (*UomModel, bool) {
	if o == nil || o.ValuesUom == nil {
		return nil, false
	}
	return o.ValuesUom, true
}

// HasValuesUom returns a boolean if a field has been set.
func (o *CapacityTypeModel) HasValuesUom() bool {
	if o != nil && o.ValuesUom != nil {
		return true
	}

	return false
}

// SetValuesUom gets a reference to the given UomModel and assigns it to the ValuesUom field.
func (o *CapacityTypeModel) SetValuesUom(v UomModel) {
	o.ValuesUom = &v
}

// GetSys returns the Sys field value if set, zero value otherwise.
func (o *CapacityTypeModel) GetSys() bool {
	if o == nil || o.Sys == nil {
		var ret bool
		return ret
	}
	return *o.Sys
}

// GetSysOk returns a tuple with the Sys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityTypeModel) GetSysOk() (*bool, bool) {
	if o == nil || o.Sys == nil {
		return nil, false
	}
	return o.Sys, true
}

// HasSys returns a boolean if a field has been set.
func (o *CapacityTypeModel) HasSys() bool {
	if o != nil && o.Sys != nil {
		return true
	}

	return false
}

// SetSys gets a reference to the given bool and assigns it to the Sys field.
func (o *CapacityTypeModel) SetSys(v bool) {
	o.Sys = &v
}

func (o CapacityTypeModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.UomId != nil {
		toSerialize["uom_id"] = o.UomId
	}
	if o.UomName != nil {
		toSerialize["uom_name"] = o.UomName
	}
	if o.Uom != nil {
		toSerialize["uom"] = o.Uom
	}
	if o.ValuesUom != nil {
		toSerialize["values_uom"] = o.ValuesUom
	}
	if o.Sys != nil {
		toSerialize["sys"] = o.Sys
	}
	return json.Marshal(toSerialize)
}

type NullableCapacityTypeModel struct {
	value *CapacityTypeModel
	isSet bool
}

func (v NullableCapacityTypeModel) Get() *CapacityTypeModel {
	return v.value
}

func (v *NullableCapacityTypeModel) Set(val *CapacityTypeModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCapacityTypeModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCapacityTypeModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapacityTypeModel(val *CapacityTypeModel) *NullableCapacityTypeModel {
	return &NullableCapacityTypeModel{value: val, isSet: true}
}

func (v NullableCapacityTypeModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapacityTypeModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


