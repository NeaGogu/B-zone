/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UsersOptionsModel struct for UsersOptionsModel
type UsersOptionsModel struct {
	// 
	IncludeAddresses *bool `json:"include_addresses,omitempty"`
	// 
	IncludeUserMetaData *bool `json:"include_user_meta_data,omitempty"`
	// 
	IncludeUserTags *bool `json:"include_user_tags,omitempty"`
	// 
	IncludePartyName *bool `json:"include_party_name,omitempty"`
	// 
	IncludePause *bool `json:"include_pause,omitempty"`
	// 
	IncludeZones *bool `json:"include_zones,omitempty"`
	// 
	IncludeDriverUnavailabilities *bool `json:"include_driver_unavailabilities,omitempty"`
	// 
	IncludeLinks *bool `json:"include_links,omitempty"`
}

// NewUsersOptionsModel instantiates a new UsersOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersOptionsModel() *UsersOptionsModel {
	this := UsersOptionsModel{}
	return &this
}

// NewUsersOptionsModelWithDefaults instantiates a new UsersOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersOptionsModelWithDefaults() *UsersOptionsModel {
	this := UsersOptionsModel{}
	return &this
}

// GetIncludeAddresses returns the IncludeAddresses field value if set, zero value otherwise.
func (o *UsersOptionsModel) GetIncludeAddresses() bool {
	if o == nil || o.IncludeAddresses == nil {
		var ret bool
		return ret
	}
	return *o.IncludeAddresses
}

// GetIncludeAddressesOk returns a tuple with the IncludeAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersOptionsModel) GetIncludeAddressesOk() (*bool, bool) {
	if o == nil || o.IncludeAddresses == nil {
		return nil, false
	}
	return o.IncludeAddresses, true
}

// HasIncludeAddresses returns a boolean if a field has been set.
func (o *UsersOptionsModel) HasIncludeAddresses() bool {
	if o != nil && o.IncludeAddresses != nil {
		return true
	}

	return false
}

// SetIncludeAddresses gets a reference to the given bool and assigns it to the IncludeAddresses field.
func (o *UsersOptionsModel) SetIncludeAddresses(v bool) {
	o.IncludeAddresses = &v
}

// GetIncludeUserMetaData returns the IncludeUserMetaData field value if set, zero value otherwise.
func (o *UsersOptionsModel) GetIncludeUserMetaData() bool {
	if o == nil || o.IncludeUserMetaData == nil {
		var ret bool
		return ret
	}
	return *o.IncludeUserMetaData
}

// GetIncludeUserMetaDataOk returns a tuple with the IncludeUserMetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersOptionsModel) GetIncludeUserMetaDataOk() (*bool, bool) {
	if o == nil || o.IncludeUserMetaData == nil {
		return nil, false
	}
	return o.IncludeUserMetaData, true
}

// HasIncludeUserMetaData returns a boolean if a field has been set.
func (o *UsersOptionsModel) HasIncludeUserMetaData() bool {
	if o != nil && o.IncludeUserMetaData != nil {
		return true
	}

	return false
}

// SetIncludeUserMetaData gets a reference to the given bool and assigns it to the IncludeUserMetaData field.
func (o *UsersOptionsModel) SetIncludeUserMetaData(v bool) {
	o.IncludeUserMetaData = &v
}

// GetIncludeUserTags returns the IncludeUserTags field value if set, zero value otherwise.
func (o *UsersOptionsModel) GetIncludeUserTags() bool {
	if o == nil || o.IncludeUserTags == nil {
		var ret bool
		return ret
	}
	return *o.IncludeUserTags
}

// GetIncludeUserTagsOk returns a tuple with the IncludeUserTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersOptionsModel) GetIncludeUserTagsOk() (*bool, bool) {
	if o == nil || o.IncludeUserTags == nil {
		return nil, false
	}
	return o.IncludeUserTags, true
}

// HasIncludeUserTags returns a boolean if a field has been set.
func (o *UsersOptionsModel) HasIncludeUserTags() bool {
	if o != nil && o.IncludeUserTags != nil {
		return true
	}

	return false
}

// SetIncludeUserTags gets a reference to the given bool and assigns it to the IncludeUserTags field.
func (o *UsersOptionsModel) SetIncludeUserTags(v bool) {
	o.IncludeUserTags = &v
}

// GetIncludePartyName returns the IncludePartyName field value if set, zero value otherwise.
func (o *UsersOptionsModel) GetIncludePartyName() bool {
	if o == nil || o.IncludePartyName == nil {
		var ret bool
		return ret
	}
	return *o.IncludePartyName
}

// GetIncludePartyNameOk returns a tuple with the IncludePartyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersOptionsModel) GetIncludePartyNameOk() (*bool, bool) {
	if o == nil || o.IncludePartyName == nil {
		return nil, false
	}
	return o.IncludePartyName, true
}

// HasIncludePartyName returns a boolean if a field has been set.
func (o *UsersOptionsModel) HasIncludePartyName() bool {
	if o != nil && o.IncludePartyName != nil {
		return true
	}

	return false
}

// SetIncludePartyName gets a reference to the given bool and assigns it to the IncludePartyName field.
func (o *UsersOptionsModel) SetIncludePartyName(v bool) {
	o.IncludePartyName = &v
}

// GetIncludePause returns the IncludePause field value if set, zero value otherwise.
func (o *UsersOptionsModel) GetIncludePause() bool {
	if o == nil || o.IncludePause == nil {
		var ret bool
		return ret
	}
	return *o.IncludePause
}

// GetIncludePauseOk returns a tuple with the IncludePause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersOptionsModel) GetIncludePauseOk() (*bool, bool) {
	if o == nil || o.IncludePause == nil {
		return nil, false
	}
	return o.IncludePause, true
}

// HasIncludePause returns a boolean if a field has been set.
func (o *UsersOptionsModel) HasIncludePause() bool {
	if o != nil && o.IncludePause != nil {
		return true
	}

	return false
}

// SetIncludePause gets a reference to the given bool and assigns it to the IncludePause field.
func (o *UsersOptionsModel) SetIncludePause(v bool) {
	o.IncludePause = &v
}

// GetIncludeZones returns the IncludeZones field value if set, zero value otherwise.
func (o *UsersOptionsModel) GetIncludeZones() bool {
	if o == nil || o.IncludeZones == nil {
		var ret bool
		return ret
	}
	return *o.IncludeZones
}

// GetIncludeZonesOk returns a tuple with the IncludeZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersOptionsModel) GetIncludeZonesOk() (*bool, bool) {
	if o == nil || o.IncludeZones == nil {
		return nil, false
	}
	return o.IncludeZones, true
}

// HasIncludeZones returns a boolean if a field has been set.
func (o *UsersOptionsModel) HasIncludeZones() bool {
	if o != nil && o.IncludeZones != nil {
		return true
	}

	return false
}

// SetIncludeZones gets a reference to the given bool and assigns it to the IncludeZones field.
func (o *UsersOptionsModel) SetIncludeZones(v bool) {
	o.IncludeZones = &v
}

// GetIncludeDriverUnavailabilities returns the IncludeDriverUnavailabilities field value if set, zero value otherwise.
func (o *UsersOptionsModel) GetIncludeDriverUnavailabilities() bool {
	if o == nil || o.IncludeDriverUnavailabilities == nil {
		var ret bool
		return ret
	}
	return *o.IncludeDriverUnavailabilities
}

// GetIncludeDriverUnavailabilitiesOk returns a tuple with the IncludeDriverUnavailabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersOptionsModel) GetIncludeDriverUnavailabilitiesOk() (*bool, bool) {
	if o == nil || o.IncludeDriverUnavailabilities == nil {
		return nil, false
	}
	return o.IncludeDriverUnavailabilities, true
}

// HasIncludeDriverUnavailabilities returns a boolean if a field has been set.
func (o *UsersOptionsModel) HasIncludeDriverUnavailabilities() bool {
	if o != nil && o.IncludeDriverUnavailabilities != nil {
		return true
	}

	return false
}

// SetIncludeDriverUnavailabilities gets a reference to the given bool and assigns it to the IncludeDriverUnavailabilities field.
func (o *UsersOptionsModel) SetIncludeDriverUnavailabilities(v bool) {
	o.IncludeDriverUnavailabilities = &v
}

// GetIncludeLinks returns the IncludeLinks field value if set, zero value otherwise.
func (o *UsersOptionsModel) GetIncludeLinks() bool {
	if o == nil || o.IncludeLinks == nil {
		var ret bool
		return ret
	}
	return *o.IncludeLinks
}

// GetIncludeLinksOk returns a tuple with the IncludeLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersOptionsModel) GetIncludeLinksOk() (*bool, bool) {
	if o == nil || o.IncludeLinks == nil {
		return nil, false
	}
	return o.IncludeLinks, true
}

// HasIncludeLinks returns a boolean if a field has been set.
func (o *UsersOptionsModel) HasIncludeLinks() bool {
	if o != nil && o.IncludeLinks != nil {
		return true
	}

	return false
}

// SetIncludeLinks gets a reference to the given bool and assigns it to the IncludeLinks field.
func (o *UsersOptionsModel) SetIncludeLinks(v bool) {
	o.IncludeLinks = &v
}

func (o UsersOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeAddresses != nil {
		toSerialize["include_addresses"] = o.IncludeAddresses
	}
	if o.IncludeUserMetaData != nil {
		toSerialize["include_user_meta_data"] = o.IncludeUserMetaData
	}
	if o.IncludeUserTags != nil {
		toSerialize["include_user_tags"] = o.IncludeUserTags
	}
	if o.IncludePartyName != nil {
		toSerialize["include_party_name"] = o.IncludePartyName
	}
	if o.IncludePause != nil {
		toSerialize["include_pause"] = o.IncludePause
	}
	if o.IncludeZones != nil {
		toSerialize["include_zones"] = o.IncludeZones
	}
	if o.IncludeDriverUnavailabilities != nil {
		toSerialize["include_driver_unavailabilities"] = o.IncludeDriverUnavailabilities
	}
	if o.IncludeLinks != nil {
		toSerialize["include_links"] = o.IncludeLinks
	}
	return json.Marshal(toSerialize)
}

type NullableUsersOptionsModel struct {
	value *UsersOptionsModel
	isSet bool
}

func (v NullableUsersOptionsModel) Get() *UsersOptionsModel {
	return v.value
}

func (v *NullableUsersOptionsModel) Set(val *UsersOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersOptionsModel(val *UsersOptionsModel) *NullableUsersOptionsModel {
	return &NullableUsersOptionsModel{value: val, isSet: true}
}

func (v NullableUsersOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


