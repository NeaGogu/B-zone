/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NoteCategoryModel struct for NoteCategoryModel
type NoteCategoryModel struct {
	// Unique ID
	Id *int64 `json:"id,omitempty"`
	// name of note category
	Name *string `json:"name,omitempty"`
	// system type categories can not be edited or deleted
	Sys *bool `json:"sys,omitempty"`
	// Whether the note category notes should be visible for teh drivers usign the bumbal mobile app
	ShowInApp *bool `json:"show_in_app,omitempty"`
}

// NewNoteCategoryModel instantiates a new NoteCategoryModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNoteCategoryModel() *NoteCategoryModel {
	this := NoteCategoryModel{}
	return &this
}

// NewNoteCategoryModelWithDefaults instantiates a new NoteCategoryModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNoteCategoryModelWithDefaults() *NoteCategoryModel {
	this := NoteCategoryModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NoteCategoryModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteCategoryModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NoteCategoryModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *NoteCategoryModel) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NoteCategoryModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteCategoryModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NoteCategoryModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NoteCategoryModel) SetName(v string) {
	o.Name = &v
}

// GetSys returns the Sys field value if set, zero value otherwise.
func (o *NoteCategoryModel) GetSys() bool {
	if o == nil || o.Sys == nil {
		var ret bool
		return ret
	}
	return *o.Sys
}

// GetSysOk returns a tuple with the Sys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteCategoryModel) GetSysOk() (*bool, bool) {
	if o == nil || o.Sys == nil {
		return nil, false
	}
	return o.Sys, true
}

// HasSys returns a boolean if a field has been set.
func (o *NoteCategoryModel) HasSys() bool {
	if o != nil && o.Sys != nil {
		return true
	}

	return false
}

// SetSys gets a reference to the given bool and assigns it to the Sys field.
func (o *NoteCategoryModel) SetSys(v bool) {
	o.Sys = &v
}

// GetShowInApp returns the ShowInApp field value if set, zero value otherwise.
func (o *NoteCategoryModel) GetShowInApp() bool {
	if o == nil || o.ShowInApp == nil {
		var ret bool
		return ret
	}
	return *o.ShowInApp
}

// GetShowInAppOk returns a tuple with the ShowInApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteCategoryModel) GetShowInAppOk() (*bool, bool) {
	if o == nil || o.ShowInApp == nil {
		return nil, false
	}
	return o.ShowInApp, true
}

// HasShowInApp returns a boolean if a field has been set.
func (o *NoteCategoryModel) HasShowInApp() bool {
	if o != nil && o.ShowInApp != nil {
		return true
	}

	return false
}

// SetShowInApp gets a reference to the given bool and assigns it to the ShowInApp field.
func (o *NoteCategoryModel) SetShowInApp(v bool) {
	o.ShowInApp = &v
}

func (o NoteCategoryModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Sys != nil {
		toSerialize["sys"] = o.Sys
	}
	if o.ShowInApp != nil {
		toSerialize["show_in_app"] = o.ShowInApp
	}
	return json.Marshal(toSerialize)
}

type NullableNoteCategoryModel struct {
	value *NoteCategoryModel
	isSet bool
}

func (v NullableNoteCategoryModel) Get() *NoteCategoryModel {
	return v.value
}

func (v *NullableNoteCategoryModel) Set(val *NoteCategoryModel) {
	v.value = val
	v.isSet = true
}

func (v NullableNoteCategoryModel) IsSet() bool {
	return v.isSet
}

func (v *NullableNoteCategoryModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNoteCategoryModel(val *NoteCategoryModel) *NullableNoteCategoryModel {
	return &NullableNoteCategoryModel{value: val, isSet: true}
}

func (v NullableNoteCategoryModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNoteCategoryModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


