/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QuestionnaireTemplateQuestionOptionsModel struct for QuestionnaireTemplateQuestionOptionsModel
type QuestionnaireTemplateQuestionOptionsModel struct {
	// 
	IncludeRecordInfo *bool `json:"include_record_info,omitempty"`
	// 
	IncludeOptions *bool `json:"include_options,omitempty"`
	// 
	IncludeTexts *bool `json:"include_texts,omitempty"`
	// 
	IncludeQuestionTypeName *bool `json:"include_question_type_name,omitempty"`
}

// NewQuestionnaireTemplateQuestionOptionsModel instantiates a new QuestionnaireTemplateQuestionOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuestionnaireTemplateQuestionOptionsModel() *QuestionnaireTemplateQuestionOptionsModel {
	this := QuestionnaireTemplateQuestionOptionsModel{}
	return &this
}

// NewQuestionnaireTemplateQuestionOptionsModelWithDefaults instantiates a new QuestionnaireTemplateQuestionOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuestionnaireTemplateQuestionOptionsModelWithDefaults() *QuestionnaireTemplateQuestionOptionsModel {
	this := QuestionnaireTemplateQuestionOptionsModel{}
	return &this
}

// GetIncludeRecordInfo returns the IncludeRecordInfo field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionsModel) GetIncludeRecordInfo() bool {
	if o == nil || o.IncludeRecordInfo == nil {
		var ret bool
		return ret
	}
	return *o.IncludeRecordInfo
}

// GetIncludeRecordInfoOk returns a tuple with the IncludeRecordInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionsModel) GetIncludeRecordInfoOk() (*bool, bool) {
	if o == nil || o.IncludeRecordInfo == nil {
		return nil, false
	}
	return o.IncludeRecordInfo, true
}

// HasIncludeRecordInfo returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionsModel) HasIncludeRecordInfo() bool {
	if o != nil && o.IncludeRecordInfo != nil {
		return true
	}

	return false
}

// SetIncludeRecordInfo gets a reference to the given bool and assigns it to the IncludeRecordInfo field.
func (o *QuestionnaireTemplateQuestionOptionsModel) SetIncludeRecordInfo(v bool) {
	o.IncludeRecordInfo = &v
}

// GetIncludeOptions returns the IncludeOptions field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionsModel) GetIncludeOptions() bool {
	if o == nil || o.IncludeOptions == nil {
		var ret bool
		return ret
	}
	return *o.IncludeOptions
}

// GetIncludeOptionsOk returns a tuple with the IncludeOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionsModel) GetIncludeOptionsOk() (*bool, bool) {
	if o == nil || o.IncludeOptions == nil {
		return nil, false
	}
	return o.IncludeOptions, true
}

// HasIncludeOptions returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionsModel) HasIncludeOptions() bool {
	if o != nil && o.IncludeOptions != nil {
		return true
	}

	return false
}

// SetIncludeOptions gets a reference to the given bool and assigns it to the IncludeOptions field.
func (o *QuestionnaireTemplateQuestionOptionsModel) SetIncludeOptions(v bool) {
	o.IncludeOptions = &v
}

// GetIncludeTexts returns the IncludeTexts field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionsModel) GetIncludeTexts() bool {
	if o == nil || o.IncludeTexts == nil {
		var ret bool
		return ret
	}
	return *o.IncludeTexts
}

// GetIncludeTextsOk returns a tuple with the IncludeTexts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionsModel) GetIncludeTextsOk() (*bool, bool) {
	if o == nil || o.IncludeTexts == nil {
		return nil, false
	}
	return o.IncludeTexts, true
}

// HasIncludeTexts returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionsModel) HasIncludeTexts() bool {
	if o != nil && o.IncludeTexts != nil {
		return true
	}

	return false
}

// SetIncludeTexts gets a reference to the given bool and assigns it to the IncludeTexts field.
func (o *QuestionnaireTemplateQuestionOptionsModel) SetIncludeTexts(v bool) {
	o.IncludeTexts = &v
}

// GetIncludeQuestionTypeName returns the IncludeQuestionTypeName field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionsModel) GetIncludeQuestionTypeName() bool {
	if o == nil || o.IncludeQuestionTypeName == nil {
		var ret bool
		return ret
	}
	return *o.IncludeQuestionTypeName
}

// GetIncludeQuestionTypeNameOk returns a tuple with the IncludeQuestionTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionsModel) GetIncludeQuestionTypeNameOk() (*bool, bool) {
	if o == nil || o.IncludeQuestionTypeName == nil {
		return nil, false
	}
	return o.IncludeQuestionTypeName, true
}

// HasIncludeQuestionTypeName returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionsModel) HasIncludeQuestionTypeName() bool {
	if o != nil && o.IncludeQuestionTypeName != nil {
		return true
	}

	return false
}

// SetIncludeQuestionTypeName gets a reference to the given bool and assigns it to the IncludeQuestionTypeName field.
func (o *QuestionnaireTemplateQuestionOptionsModel) SetIncludeQuestionTypeName(v bool) {
	o.IncludeQuestionTypeName = &v
}

func (o QuestionnaireTemplateQuestionOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeRecordInfo != nil {
		toSerialize["include_record_info"] = o.IncludeRecordInfo
	}
	if o.IncludeOptions != nil {
		toSerialize["include_options"] = o.IncludeOptions
	}
	if o.IncludeTexts != nil {
		toSerialize["include_texts"] = o.IncludeTexts
	}
	if o.IncludeQuestionTypeName != nil {
		toSerialize["include_question_type_name"] = o.IncludeQuestionTypeName
	}
	return json.Marshal(toSerialize)
}

type NullableQuestionnaireTemplateQuestionOptionsModel struct {
	value *QuestionnaireTemplateQuestionOptionsModel
	isSet bool
}

func (v NullableQuestionnaireTemplateQuestionOptionsModel) Get() *QuestionnaireTemplateQuestionOptionsModel {
	return v.value
}

func (v *NullableQuestionnaireTemplateQuestionOptionsModel) Set(val *QuestionnaireTemplateQuestionOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableQuestionnaireTemplateQuestionOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableQuestionnaireTemplateQuestionOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuestionnaireTemplateQuestionOptionsModel(val *QuestionnaireTemplateQuestionOptionsModel) *NullableQuestionnaireTemplateQuestionOptionsModel {
	return &NullableQuestionnaireTemplateQuestionOptionsModel{value: val, isSet: true}
}

func (v NullableQuestionnaireTemplateQuestionOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuestionnaireTemplateQuestionOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


