/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QuestionnaireTemplateModel struct for QuestionnaireTemplateModel
type QuestionnaireTemplateModel struct {
	// Unique Identifier
	Id *int64 `json:"id,omitempty"`
	// if active=0: QuestionnaireTemplate has been removed and is no longer visible in any bumbal interface
	Active *bool `json:"active,omitempty"`
	// 
	Brands *[]BrandModel `json:"brands,omitempty"`
	// Brand ids
	BrandIds *[]int32 `json:"brand_ids,omitempty"`
	// Brand names
	BrandNames *[]string `json:"brand_names,omitempty"`
	// 
	Zones *[]ZoneModel `json:"zones,omitempty"`
	// Zone ids
	ZoneIds *[]int32 `json:"zone_ids,omitempty"`
	// Zone names
	ZoneNames *[]string `json:"zone_names,omitempty"`
	// 
	Tags *[]TagModel `json:"tags,omitempty"`
	// Tag ids
	TagIds *[]int32 `json:"tag_ids,omitempty"`
	// Tag names
	TagNames *[]string `json:"tag_names,omitempty"`
	// Name of the questionnaire template
	Name *string `json:"name,omitempty"`
	// Questionnaire type id
	QuestionnaireTypeId *int64 `json:"questionnaire_type_id,omitempty"`
	// Name of the questionnaire type
	QuestionnaireTypeName *string `json:"questionnaire_type_name,omitempty"`
	// if no_tags=1: no tags are used for matching
	NoTags *bool `json:"no_tags,omitempty"`
	// if no_zones=1: no zones are used for matching
	NoZones *bool `json:"no_zones,omitempty"`
	// 
	Questions *[]QuestionnaireTemplateQuestionModel `json:"questions,omitempty"`
}

// NewQuestionnaireTemplateModel instantiates a new QuestionnaireTemplateModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuestionnaireTemplateModel() *QuestionnaireTemplateModel {
	this := QuestionnaireTemplateModel{}
	return &this
}

// NewQuestionnaireTemplateModelWithDefaults instantiates a new QuestionnaireTemplateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuestionnaireTemplateModelWithDefaults() *QuestionnaireTemplateModel {
	this := QuestionnaireTemplateModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *QuestionnaireTemplateModel) SetId(v int64) {
	o.Id = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *QuestionnaireTemplateModel) SetActive(v bool) {
	o.Active = &v
}

// GetBrands returns the Brands field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetBrands() []BrandModel {
	if o == nil || o.Brands == nil {
		var ret []BrandModel
		return ret
	}
	return *o.Brands
}

// GetBrandsOk returns a tuple with the Brands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetBrandsOk() (*[]BrandModel, bool) {
	if o == nil || o.Brands == nil {
		return nil, false
	}
	return o.Brands, true
}

// HasBrands returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasBrands() bool {
	if o != nil && o.Brands != nil {
		return true
	}

	return false
}

// SetBrands gets a reference to the given []BrandModel and assigns it to the Brands field.
func (o *QuestionnaireTemplateModel) SetBrands(v []BrandModel) {
	o.Brands = &v
}

// GetBrandIds returns the BrandIds field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetBrandIds() []int32 {
	if o == nil || o.BrandIds == nil {
		var ret []int32
		return ret
	}
	return *o.BrandIds
}

// GetBrandIdsOk returns a tuple with the BrandIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetBrandIdsOk() (*[]int32, bool) {
	if o == nil || o.BrandIds == nil {
		return nil, false
	}
	return o.BrandIds, true
}

// HasBrandIds returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasBrandIds() bool {
	if o != nil && o.BrandIds != nil {
		return true
	}

	return false
}

// SetBrandIds gets a reference to the given []int32 and assigns it to the BrandIds field.
func (o *QuestionnaireTemplateModel) SetBrandIds(v []int32) {
	o.BrandIds = &v
}

// GetBrandNames returns the BrandNames field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetBrandNames() []string {
	if o == nil || o.BrandNames == nil {
		var ret []string
		return ret
	}
	return *o.BrandNames
}

// GetBrandNamesOk returns a tuple with the BrandNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetBrandNamesOk() (*[]string, bool) {
	if o == nil || o.BrandNames == nil {
		return nil, false
	}
	return o.BrandNames, true
}

// HasBrandNames returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasBrandNames() bool {
	if o != nil && o.BrandNames != nil {
		return true
	}

	return false
}

// SetBrandNames gets a reference to the given []string and assigns it to the BrandNames field.
func (o *QuestionnaireTemplateModel) SetBrandNames(v []string) {
	o.BrandNames = &v
}

// GetZones returns the Zones field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetZones() []ZoneModel {
	if o == nil || o.Zones == nil {
		var ret []ZoneModel
		return ret
	}
	return *o.Zones
}

// GetZonesOk returns a tuple with the Zones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetZonesOk() (*[]ZoneModel, bool) {
	if o == nil || o.Zones == nil {
		return nil, false
	}
	return o.Zones, true
}

// HasZones returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasZones() bool {
	if o != nil && o.Zones != nil {
		return true
	}

	return false
}

// SetZones gets a reference to the given []ZoneModel and assigns it to the Zones field.
func (o *QuestionnaireTemplateModel) SetZones(v []ZoneModel) {
	o.Zones = &v
}

// GetZoneIds returns the ZoneIds field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetZoneIds() []int32 {
	if o == nil || o.ZoneIds == nil {
		var ret []int32
		return ret
	}
	return *o.ZoneIds
}

// GetZoneIdsOk returns a tuple with the ZoneIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetZoneIdsOk() (*[]int32, bool) {
	if o == nil || o.ZoneIds == nil {
		return nil, false
	}
	return o.ZoneIds, true
}

// HasZoneIds returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasZoneIds() bool {
	if o != nil && o.ZoneIds != nil {
		return true
	}

	return false
}

// SetZoneIds gets a reference to the given []int32 and assigns it to the ZoneIds field.
func (o *QuestionnaireTemplateModel) SetZoneIds(v []int32) {
	o.ZoneIds = &v
}

// GetZoneNames returns the ZoneNames field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetZoneNames() []string {
	if o == nil || o.ZoneNames == nil {
		var ret []string
		return ret
	}
	return *o.ZoneNames
}

// GetZoneNamesOk returns a tuple with the ZoneNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetZoneNamesOk() (*[]string, bool) {
	if o == nil || o.ZoneNames == nil {
		return nil, false
	}
	return o.ZoneNames, true
}

// HasZoneNames returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasZoneNames() bool {
	if o != nil && o.ZoneNames != nil {
		return true
	}

	return false
}

// SetZoneNames gets a reference to the given []string and assigns it to the ZoneNames field.
func (o *QuestionnaireTemplateModel) SetZoneNames(v []string) {
	o.ZoneNames = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetTags() []TagModel {
	if o == nil || o.Tags == nil {
		var ret []TagModel
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetTagsOk() (*[]TagModel, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagModel and assigns it to the Tags field.
func (o *QuestionnaireTemplateModel) SetTags(v []TagModel) {
	o.Tags = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetTagIds() []int32 {
	if o == nil || o.TagIds == nil {
		var ret []int32
		return ret
	}
	return *o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetTagIdsOk() (*[]int32, bool) {
	if o == nil || o.TagIds == nil {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasTagIds() bool {
	if o != nil && o.TagIds != nil {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []int32 and assigns it to the TagIds field.
func (o *QuestionnaireTemplateModel) SetTagIds(v []int32) {
	o.TagIds = &v
}

// GetTagNames returns the TagNames field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetTagNames() []string {
	if o == nil || o.TagNames == nil {
		var ret []string
		return ret
	}
	return *o.TagNames
}

// GetTagNamesOk returns a tuple with the TagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetTagNamesOk() (*[]string, bool) {
	if o == nil || o.TagNames == nil {
		return nil, false
	}
	return o.TagNames, true
}

// HasTagNames returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasTagNames() bool {
	if o != nil && o.TagNames != nil {
		return true
	}

	return false
}

// SetTagNames gets a reference to the given []string and assigns it to the TagNames field.
func (o *QuestionnaireTemplateModel) SetTagNames(v []string) {
	o.TagNames = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *QuestionnaireTemplateModel) SetName(v string) {
	o.Name = &v
}

// GetQuestionnaireTypeId returns the QuestionnaireTypeId field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetQuestionnaireTypeId() int64 {
	if o == nil || o.QuestionnaireTypeId == nil {
		var ret int64
		return ret
	}
	return *o.QuestionnaireTypeId
}

// GetQuestionnaireTypeIdOk returns a tuple with the QuestionnaireTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetQuestionnaireTypeIdOk() (*int64, bool) {
	if o == nil || o.QuestionnaireTypeId == nil {
		return nil, false
	}
	return o.QuestionnaireTypeId, true
}

// HasQuestionnaireTypeId returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasQuestionnaireTypeId() bool {
	if o != nil && o.QuestionnaireTypeId != nil {
		return true
	}

	return false
}

// SetQuestionnaireTypeId gets a reference to the given int64 and assigns it to the QuestionnaireTypeId field.
func (o *QuestionnaireTemplateModel) SetQuestionnaireTypeId(v int64) {
	o.QuestionnaireTypeId = &v
}

// GetQuestionnaireTypeName returns the QuestionnaireTypeName field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetQuestionnaireTypeName() string {
	if o == nil || o.QuestionnaireTypeName == nil {
		var ret string
		return ret
	}
	return *o.QuestionnaireTypeName
}

// GetQuestionnaireTypeNameOk returns a tuple with the QuestionnaireTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetQuestionnaireTypeNameOk() (*string, bool) {
	if o == nil || o.QuestionnaireTypeName == nil {
		return nil, false
	}
	return o.QuestionnaireTypeName, true
}

// HasQuestionnaireTypeName returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasQuestionnaireTypeName() bool {
	if o != nil && o.QuestionnaireTypeName != nil {
		return true
	}

	return false
}

// SetQuestionnaireTypeName gets a reference to the given string and assigns it to the QuestionnaireTypeName field.
func (o *QuestionnaireTemplateModel) SetQuestionnaireTypeName(v string) {
	o.QuestionnaireTypeName = &v
}

// GetNoTags returns the NoTags field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetNoTags() bool {
	if o == nil || o.NoTags == nil {
		var ret bool
		return ret
	}
	return *o.NoTags
}

// GetNoTagsOk returns a tuple with the NoTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetNoTagsOk() (*bool, bool) {
	if o == nil || o.NoTags == nil {
		return nil, false
	}
	return o.NoTags, true
}

// HasNoTags returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasNoTags() bool {
	if o != nil && o.NoTags != nil {
		return true
	}

	return false
}

// SetNoTags gets a reference to the given bool and assigns it to the NoTags field.
func (o *QuestionnaireTemplateModel) SetNoTags(v bool) {
	o.NoTags = &v
}

// GetNoZones returns the NoZones field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetNoZones() bool {
	if o == nil || o.NoZones == nil {
		var ret bool
		return ret
	}
	return *o.NoZones
}

// GetNoZonesOk returns a tuple with the NoZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetNoZonesOk() (*bool, bool) {
	if o == nil || o.NoZones == nil {
		return nil, false
	}
	return o.NoZones, true
}

// HasNoZones returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasNoZones() bool {
	if o != nil && o.NoZones != nil {
		return true
	}

	return false
}

// SetNoZones gets a reference to the given bool and assigns it to the NoZones field.
func (o *QuestionnaireTemplateModel) SetNoZones(v bool) {
	o.NoZones = &v
}

// GetQuestions returns the Questions field value if set, zero value otherwise.
func (o *QuestionnaireTemplateModel) GetQuestions() []QuestionnaireTemplateQuestionModel {
	if o == nil || o.Questions == nil {
		var ret []QuestionnaireTemplateQuestionModel
		return ret
	}
	return *o.Questions
}

// GetQuestionsOk returns a tuple with the Questions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateModel) GetQuestionsOk() (*[]QuestionnaireTemplateQuestionModel, bool) {
	if o == nil || o.Questions == nil {
		return nil, false
	}
	return o.Questions, true
}

// HasQuestions returns a boolean if a field has been set.
func (o *QuestionnaireTemplateModel) HasQuestions() bool {
	if o != nil && o.Questions != nil {
		return true
	}

	return false
}

// SetQuestions gets a reference to the given []QuestionnaireTemplateQuestionModel and assigns it to the Questions field.
func (o *QuestionnaireTemplateModel) SetQuestions(v []QuestionnaireTemplateQuestionModel) {
	o.Questions = &v
}

func (o QuestionnaireTemplateModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Brands != nil {
		toSerialize["brands"] = o.Brands
	}
	if o.BrandIds != nil {
		toSerialize["brand_ids"] = o.BrandIds
	}
	if o.BrandNames != nil {
		toSerialize["brand_names"] = o.BrandNames
	}
	if o.Zones != nil {
		toSerialize["zones"] = o.Zones
	}
	if o.ZoneIds != nil {
		toSerialize["zone_ids"] = o.ZoneIds
	}
	if o.ZoneNames != nil {
		toSerialize["zone_names"] = o.ZoneNames
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TagIds != nil {
		toSerialize["tag_ids"] = o.TagIds
	}
	if o.TagNames != nil {
		toSerialize["tag_names"] = o.TagNames
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.QuestionnaireTypeId != nil {
		toSerialize["questionnaire_type_id"] = o.QuestionnaireTypeId
	}
	if o.QuestionnaireTypeName != nil {
		toSerialize["questionnaire_type_name"] = o.QuestionnaireTypeName
	}
	if o.NoTags != nil {
		toSerialize["no_tags"] = o.NoTags
	}
	if o.NoZones != nil {
		toSerialize["no_zones"] = o.NoZones
	}
	if o.Questions != nil {
		toSerialize["questions"] = o.Questions
	}
	return json.Marshal(toSerialize)
}

type NullableQuestionnaireTemplateModel struct {
	value *QuestionnaireTemplateModel
	isSet bool
}

func (v NullableQuestionnaireTemplateModel) Get() *QuestionnaireTemplateModel {
	return v.value
}

func (v *NullableQuestionnaireTemplateModel) Set(val *QuestionnaireTemplateModel) {
	v.value = val
	v.isSet = true
}

func (v NullableQuestionnaireTemplateModel) IsSet() bool {
	return v.isSet
}

func (v *NullableQuestionnaireTemplateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuestionnaireTemplateModel(val *QuestionnaireTemplateModel) *NullableQuestionnaireTemplateModel {
	return &NullableQuestionnaireTemplateModel{value: val, isSet: true}
}

func (v NullableQuestionnaireTemplateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuestionnaireTemplateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


