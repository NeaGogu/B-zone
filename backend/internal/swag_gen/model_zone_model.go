/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ZoneModel struct for ZoneModel
type ZoneModel struct {
	// Unique ID
	Id *int64 `json:"id,omitempty"`
	// Zone Name
	Name *string `json:"name,omitempty"`
	// Tag names
	FilterTagNames *[]string `json:"filter_tag_names,omitempty"`
	// 
	FilterTags *map[string]interface{} `json:"filter_tags,omitempty"`
	// 
	Links *[]LinkModel `json:"links,omitempty"`
	// 
	MetaData *[]MetaDataModel `json:"meta_data,omitempty"`
	// 
	ZoneRanges *[]ZoneRangeModel `json:"zone_ranges,omitempty"`
	// 
	Brands *[]BrandModel `json:"brands,omitempty"`
	// Brand ID's
	BrandIds *[]int32 `json:"brand_ids,omitempty"`
	// created_at date time
	ZoneCreatedAt *time.Time `json:"zone_created_at,omitempty"`
	// updated_at date time
	ZoneUpdatedAt *time.Time `json:"zone_updated_at,omitempty"`
	// created_by user id
	ZoneCreatedBy *int32 `json:"zone_created_by,omitempty"`
	// created_by user id
	ZoneUpdatedBy *int32 `json:"zone_updated_by,omitempty"`
}

// NewZoneModel instantiates a new ZoneModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneModel() *ZoneModel {
	this := ZoneModel{}
	return &this
}

// NewZoneModelWithDefaults instantiates a new ZoneModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneModelWithDefaults() *ZoneModel {
	this := ZoneModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ZoneModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ZoneModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ZoneModel) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ZoneModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ZoneModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ZoneModel) SetName(v string) {
	o.Name = &v
}

// GetFilterTagNames returns the FilterTagNames field value if set, zero value otherwise.
func (o *ZoneModel) GetFilterTagNames() []string {
	if o == nil || o.FilterTagNames == nil {
		var ret []string
		return ret
	}
	return *o.FilterTagNames
}

// GetFilterTagNamesOk returns a tuple with the FilterTagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetFilterTagNamesOk() (*[]string, bool) {
	if o == nil || o.FilterTagNames == nil {
		return nil, false
	}
	return o.FilterTagNames, true
}

// HasFilterTagNames returns a boolean if a field has been set.
func (o *ZoneModel) HasFilterTagNames() bool {
	if o != nil && o.FilterTagNames != nil {
		return true
	}

	return false
}

// SetFilterTagNames gets a reference to the given []string and assigns it to the FilterTagNames field.
func (o *ZoneModel) SetFilterTagNames(v []string) {
	o.FilterTagNames = &v
}

// GetFilterTags returns the FilterTags field value if set, zero value otherwise.
func (o *ZoneModel) GetFilterTags() map[string]interface{} {
	if o == nil || o.FilterTags == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.FilterTags
}

// GetFilterTagsOk returns a tuple with the FilterTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetFilterTagsOk() (*map[string]interface{}, bool) {
	if o == nil || o.FilterTags == nil {
		return nil, false
	}
	return o.FilterTags, true
}

// HasFilterTags returns a boolean if a field has been set.
func (o *ZoneModel) HasFilterTags() bool {
	if o != nil && o.FilterTags != nil {
		return true
	}

	return false
}

// SetFilterTags gets a reference to the given map[string]interface{} and assigns it to the FilterTags field.
func (o *ZoneModel) SetFilterTags(v map[string]interface{}) {
	o.FilterTags = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ZoneModel) GetLinks() []LinkModel {
	if o == nil || o.Links == nil {
		var ret []LinkModel
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetLinksOk() (*[]LinkModel, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ZoneModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkModel and assigns it to the Links field.
func (o *ZoneModel) SetLinks(v []LinkModel) {
	o.Links = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *ZoneModel) GetMetaData() []MetaDataModel {
	if o == nil || o.MetaData == nil {
		var ret []MetaDataModel
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetMetaDataOk() (*[]MetaDataModel, bool) {
	if o == nil || o.MetaData == nil {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *ZoneModel) HasMetaData() bool {
	if o != nil && o.MetaData != nil {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given []MetaDataModel and assigns it to the MetaData field.
func (o *ZoneModel) SetMetaData(v []MetaDataModel) {
	o.MetaData = &v
}

// GetZoneRanges returns the ZoneRanges field value if set, zero value otherwise.
func (o *ZoneModel) GetZoneRanges() []ZoneRangeModel {
	if o == nil || o.ZoneRanges == nil {
		var ret []ZoneRangeModel
		return ret
	}
	return *o.ZoneRanges
}

// GetZoneRangesOk returns a tuple with the ZoneRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetZoneRangesOk() (*[]ZoneRangeModel, bool) {
	if o == nil || o.ZoneRanges == nil {
		return nil, false
	}
	return o.ZoneRanges, true
}

// HasZoneRanges returns a boolean if a field has been set.
func (o *ZoneModel) HasZoneRanges() bool {
	if o != nil && o.ZoneRanges != nil {
		return true
	}

	return false
}

// SetZoneRanges gets a reference to the given []ZoneRangeModel and assigns it to the ZoneRanges field.
func (o *ZoneModel) SetZoneRanges(v []ZoneRangeModel) {
	o.ZoneRanges = &v
}

// GetBrands returns the Brands field value if set, zero value otherwise.
func (o *ZoneModel) GetBrands() []BrandModel {
	if o == nil || o.Brands == nil {
		var ret []BrandModel
		return ret
	}
	return *o.Brands
}

// GetBrandsOk returns a tuple with the Brands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetBrandsOk() (*[]BrandModel, bool) {
	if o == nil || o.Brands == nil {
		return nil, false
	}
	return o.Brands, true
}

// HasBrands returns a boolean if a field has been set.
func (o *ZoneModel) HasBrands() bool {
	if o != nil && o.Brands != nil {
		return true
	}

	return false
}

// SetBrands gets a reference to the given []BrandModel and assigns it to the Brands field.
func (o *ZoneModel) SetBrands(v []BrandModel) {
	o.Brands = &v
}

// GetBrandIds returns the BrandIds field value if set, zero value otherwise.
func (o *ZoneModel) GetBrandIds() []int32 {
	if o == nil || o.BrandIds == nil {
		var ret []int32
		return ret
	}
	return *o.BrandIds
}

// GetBrandIdsOk returns a tuple with the BrandIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetBrandIdsOk() (*[]int32, bool) {
	if o == nil || o.BrandIds == nil {
		return nil, false
	}
	return o.BrandIds, true
}

// HasBrandIds returns a boolean if a field has been set.
func (o *ZoneModel) HasBrandIds() bool {
	if o != nil && o.BrandIds != nil {
		return true
	}

	return false
}

// SetBrandIds gets a reference to the given []int32 and assigns it to the BrandIds field.
func (o *ZoneModel) SetBrandIds(v []int32) {
	o.BrandIds = &v
}

// GetZoneCreatedAt returns the ZoneCreatedAt field value if set, zero value otherwise.
func (o *ZoneModel) GetZoneCreatedAt() time.Time {
	if o == nil || o.ZoneCreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ZoneCreatedAt
}

// GetZoneCreatedAtOk returns a tuple with the ZoneCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetZoneCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.ZoneCreatedAt == nil {
		return nil, false
	}
	return o.ZoneCreatedAt, true
}

// HasZoneCreatedAt returns a boolean if a field has been set.
func (o *ZoneModel) HasZoneCreatedAt() bool {
	if o != nil && o.ZoneCreatedAt != nil {
		return true
	}

	return false
}

// SetZoneCreatedAt gets a reference to the given time.Time and assigns it to the ZoneCreatedAt field.
func (o *ZoneModel) SetZoneCreatedAt(v time.Time) {
	o.ZoneCreatedAt = &v
}

// GetZoneUpdatedAt returns the ZoneUpdatedAt field value if set, zero value otherwise.
func (o *ZoneModel) GetZoneUpdatedAt() time.Time {
	if o == nil || o.ZoneUpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ZoneUpdatedAt
}

// GetZoneUpdatedAtOk returns a tuple with the ZoneUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetZoneUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.ZoneUpdatedAt == nil {
		return nil, false
	}
	return o.ZoneUpdatedAt, true
}

// HasZoneUpdatedAt returns a boolean if a field has been set.
func (o *ZoneModel) HasZoneUpdatedAt() bool {
	if o != nil && o.ZoneUpdatedAt != nil {
		return true
	}

	return false
}

// SetZoneUpdatedAt gets a reference to the given time.Time and assigns it to the ZoneUpdatedAt field.
func (o *ZoneModel) SetZoneUpdatedAt(v time.Time) {
	o.ZoneUpdatedAt = &v
}

// GetZoneCreatedBy returns the ZoneCreatedBy field value if set, zero value otherwise.
func (o *ZoneModel) GetZoneCreatedBy() int32 {
	if o == nil || o.ZoneCreatedBy == nil {
		var ret int32
		return ret
	}
	return *o.ZoneCreatedBy
}

// GetZoneCreatedByOk returns a tuple with the ZoneCreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetZoneCreatedByOk() (*int32, bool) {
	if o == nil || o.ZoneCreatedBy == nil {
		return nil, false
	}
	return o.ZoneCreatedBy, true
}

// HasZoneCreatedBy returns a boolean if a field has been set.
func (o *ZoneModel) HasZoneCreatedBy() bool {
	if o != nil && o.ZoneCreatedBy != nil {
		return true
	}

	return false
}

// SetZoneCreatedBy gets a reference to the given int32 and assigns it to the ZoneCreatedBy field.
func (o *ZoneModel) SetZoneCreatedBy(v int32) {
	o.ZoneCreatedBy = &v
}

// GetZoneUpdatedBy returns the ZoneUpdatedBy field value if set, zero value otherwise.
func (o *ZoneModel) GetZoneUpdatedBy() int32 {
	if o == nil || o.ZoneUpdatedBy == nil {
		var ret int32
		return ret
	}
	return *o.ZoneUpdatedBy
}

// GetZoneUpdatedByOk returns a tuple with the ZoneUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneModel) GetZoneUpdatedByOk() (*int32, bool) {
	if o == nil || o.ZoneUpdatedBy == nil {
		return nil, false
	}
	return o.ZoneUpdatedBy, true
}

// HasZoneUpdatedBy returns a boolean if a field has been set.
func (o *ZoneModel) HasZoneUpdatedBy() bool {
	if o != nil && o.ZoneUpdatedBy != nil {
		return true
	}

	return false
}

// SetZoneUpdatedBy gets a reference to the given int32 and assigns it to the ZoneUpdatedBy field.
func (o *ZoneModel) SetZoneUpdatedBy(v int32) {
	o.ZoneUpdatedBy = &v
}

func (o ZoneModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.FilterTagNames != nil {
		toSerialize["filter_tag_names"] = o.FilterTagNames
	}
	if o.FilterTags != nil {
		toSerialize["filter_tags"] = o.FilterTags
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.MetaData != nil {
		toSerialize["meta_data"] = o.MetaData
	}
	if o.ZoneRanges != nil {
		toSerialize["zone_ranges"] = o.ZoneRanges
	}
	if o.Brands != nil {
		toSerialize["brands"] = o.Brands
	}
	if o.BrandIds != nil {
		toSerialize["brand_ids"] = o.BrandIds
	}
	if o.ZoneCreatedAt != nil {
		toSerialize["zone_created_at"] = o.ZoneCreatedAt
	}
	if o.ZoneUpdatedAt != nil {
		toSerialize["zone_updated_at"] = o.ZoneUpdatedAt
	}
	if o.ZoneCreatedBy != nil {
		toSerialize["zone_created_by"] = o.ZoneCreatedBy
	}
	if o.ZoneUpdatedBy != nil {
		toSerialize["zone_updated_by"] = o.ZoneUpdatedBy
	}
	return json.Marshal(toSerialize)
}

type NullableZoneModel struct {
	value *ZoneModel
	isSet bool
}

func (v NullableZoneModel) Get() *ZoneModel {
	return v.value
}

func (v *NullableZoneModel) Set(val *ZoneModel) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneModel) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneModel(val *ZoneModel) *NullableZoneModel {
	return &NullableZoneModel{value: val, isSet: true}
}

func (v NullableZoneModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


