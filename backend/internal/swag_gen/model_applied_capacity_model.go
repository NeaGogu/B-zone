/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AppliedCapacityModel struct for AppliedCapacityModel
type AppliedCapacityModel struct {
	// Capacity type ID
	CapacityTypeId *int64 `json:"capacity_type_id,omitempty"`
	// Capacity type name
	CapacityTypeName *string `json:"capacity_type_name,omitempty"`
	// Unit of measurement ID
	UomId *int64 `json:"uom_id,omitempty"`
	// Unit of measurement name
	UomName *string `json:"uom_name,omitempty"`
	// Capacity value
	CapacityValue *int64 `json:"capacity_value,omitempty"`
}

// NewAppliedCapacityModel instantiates a new AppliedCapacityModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppliedCapacityModel() *AppliedCapacityModel {
	this := AppliedCapacityModel{}
	return &this
}

// NewAppliedCapacityModelWithDefaults instantiates a new AppliedCapacityModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppliedCapacityModelWithDefaults() *AppliedCapacityModel {
	this := AppliedCapacityModel{}
	return &this
}

// GetCapacityTypeId returns the CapacityTypeId field value if set, zero value otherwise.
func (o *AppliedCapacityModel) GetCapacityTypeId() int64 {
	if o == nil || o.CapacityTypeId == nil {
		var ret int64
		return ret
	}
	return *o.CapacityTypeId
}

// GetCapacityTypeIdOk returns a tuple with the CapacityTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppliedCapacityModel) GetCapacityTypeIdOk() (*int64, bool) {
	if o == nil || o.CapacityTypeId == nil {
		return nil, false
	}
	return o.CapacityTypeId, true
}

// HasCapacityTypeId returns a boolean if a field has been set.
func (o *AppliedCapacityModel) HasCapacityTypeId() bool {
	if o != nil && o.CapacityTypeId != nil {
		return true
	}

	return false
}

// SetCapacityTypeId gets a reference to the given int64 and assigns it to the CapacityTypeId field.
func (o *AppliedCapacityModel) SetCapacityTypeId(v int64) {
	o.CapacityTypeId = &v
}

// GetCapacityTypeName returns the CapacityTypeName field value if set, zero value otherwise.
func (o *AppliedCapacityModel) GetCapacityTypeName() string {
	if o == nil || o.CapacityTypeName == nil {
		var ret string
		return ret
	}
	return *o.CapacityTypeName
}

// GetCapacityTypeNameOk returns a tuple with the CapacityTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppliedCapacityModel) GetCapacityTypeNameOk() (*string, bool) {
	if o == nil || o.CapacityTypeName == nil {
		return nil, false
	}
	return o.CapacityTypeName, true
}

// HasCapacityTypeName returns a boolean if a field has been set.
func (o *AppliedCapacityModel) HasCapacityTypeName() bool {
	if o != nil && o.CapacityTypeName != nil {
		return true
	}

	return false
}

// SetCapacityTypeName gets a reference to the given string and assigns it to the CapacityTypeName field.
func (o *AppliedCapacityModel) SetCapacityTypeName(v string) {
	o.CapacityTypeName = &v
}

// GetUomId returns the UomId field value if set, zero value otherwise.
func (o *AppliedCapacityModel) GetUomId() int64 {
	if o == nil || o.UomId == nil {
		var ret int64
		return ret
	}
	return *o.UomId
}

// GetUomIdOk returns a tuple with the UomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppliedCapacityModel) GetUomIdOk() (*int64, bool) {
	if o == nil || o.UomId == nil {
		return nil, false
	}
	return o.UomId, true
}

// HasUomId returns a boolean if a field has been set.
func (o *AppliedCapacityModel) HasUomId() bool {
	if o != nil && o.UomId != nil {
		return true
	}

	return false
}

// SetUomId gets a reference to the given int64 and assigns it to the UomId field.
func (o *AppliedCapacityModel) SetUomId(v int64) {
	o.UomId = &v
}

// GetUomName returns the UomName field value if set, zero value otherwise.
func (o *AppliedCapacityModel) GetUomName() string {
	if o == nil || o.UomName == nil {
		var ret string
		return ret
	}
	return *o.UomName
}

// GetUomNameOk returns a tuple with the UomName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppliedCapacityModel) GetUomNameOk() (*string, bool) {
	if o == nil || o.UomName == nil {
		return nil, false
	}
	return o.UomName, true
}

// HasUomName returns a boolean if a field has been set.
func (o *AppliedCapacityModel) HasUomName() bool {
	if o != nil && o.UomName != nil {
		return true
	}

	return false
}

// SetUomName gets a reference to the given string and assigns it to the UomName field.
func (o *AppliedCapacityModel) SetUomName(v string) {
	o.UomName = &v
}

// GetCapacityValue returns the CapacityValue field value if set, zero value otherwise.
func (o *AppliedCapacityModel) GetCapacityValue() int64 {
	if o == nil || o.CapacityValue == nil {
		var ret int64
		return ret
	}
	return *o.CapacityValue
}

// GetCapacityValueOk returns a tuple with the CapacityValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppliedCapacityModel) GetCapacityValueOk() (*int64, bool) {
	if o == nil || o.CapacityValue == nil {
		return nil, false
	}
	return o.CapacityValue, true
}

// HasCapacityValue returns a boolean if a field has been set.
func (o *AppliedCapacityModel) HasCapacityValue() bool {
	if o != nil && o.CapacityValue != nil {
		return true
	}

	return false
}

// SetCapacityValue gets a reference to the given int64 and assigns it to the CapacityValue field.
func (o *AppliedCapacityModel) SetCapacityValue(v int64) {
	o.CapacityValue = &v
}

func (o AppliedCapacityModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CapacityTypeId != nil {
		toSerialize["capacity_type_id"] = o.CapacityTypeId
	}
	if o.CapacityTypeName != nil {
		toSerialize["capacity_type_name"] = o.CapacityTypeName
	}
	if o.UomId != nil {
		toSerialize["uom_id"] = o.UomId
	}
	if o.UomName != nil {
		toSerialize["uom_name"] = o.UomName
	}
	if o.CapacityValue != nil {
		toSerialize["capacity_value"] = o.CapacityValue
	}
	return json.Marshal(toSerialize)
}

type NullableAppliedCapacityModel struct {
	value *AppliedCapacityModel
	isSet bool
}

func (v NullableAppliedCapacityModel) Get() *AppliedCapacityModel {
	return v.value
}

func (v *NullableAppliedCapacityModel) Set(val *AppliedCapacityModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAppliedCapacityModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAppliedCapacityModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppliedCapacityModel(val *AppliedCapacityModel) *NullableAppliedCapacityModel {
	return &NullableAppliedCapacityModel{value: val, isSet: true}
}

func (v NullableAppliedCapacityModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppliedCapacityModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


