/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddressReverseGeoCodeResponse struct for AddressReverseGeoCodeResponse
type AddressReverseGeoCodeResponse struct {
	// 
	Addresses *[]AddressModel `json:"addresses,omitempty"`
}

// NewAddressReverseGeoCodeResponse instantiates a new AddressReverseGeoCodeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressReverseGeoCodeResponse() *AddressReverseGeoCodeResponse {
	this := AddressReverseGeoCodeResponse{}
	return &this
}

// NewAddressReverseGeoCodeResponseWithDefaults instantiates a new AddressReverseGeoCodeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressReverseGeoCodeResponseWithDefaults() *AddressReverseGeoCodeResponse {
	this := AddressReverseGeoCodeResponse{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *AddressReverseGeoCodeResponse) GetAddresses() []AddressModel {
	if o == nil || o.Addresses == nil {
		var ret []AddressModel
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressReverseGeoCodeResponse) GetAddressesOk() (*[]AddressModel, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *AddressReverseGeoCodeResponse) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []AddressModel and assigns it to the Addresses field.
func (o *AddressReverseGeoCodeResponse) SetAddresses(v []AddressModel) {
	o.Addresses = &v
}

func (o AddressReverseGeoCodeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	return json.Marshal(toSerialize)
}

type NullableAddressReverseGeoCodeResponse struct {
	value *AddressReverseGeoCodeResponse
	isSet bool
}

func (v NullableAddressReverseGeoCodeResponse) Get() *AddressReverseGeoCodeResponse {
	return v.value
}

func (v *NullableAddressReverseGeoCodeResponse) Set(val *AddressReverseGeoCodeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressReverseGeoCodeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressReverseGeoCodeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressReverseGeoCodeResponse(val *AddressReverseGeoCodeResponse) *NullableAddressReverseGeoCodeResponse {
	return &NullableAddressReverseGeoCodeResponse{value: val, isSet: true}
}

func (v NullableAddressReverseGeoCodeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressReverseGeoCodeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


