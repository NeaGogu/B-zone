/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AutoPlanOptionsModel struct for AutoPlanOptionsModel
type AutoPlanOptionsModel struct {
	// 
	Synchronous *bool `json:"synchronous,omitempty"`
	// 
	RespondAfterApplyPlanning *bool `json:"respond_after_apply_planning,omitempty"`
	// 
	AllowUnplannedActivities *bool `json:"allow_unplanned_activities,omitempty"`
	// 
	ConsiderHistoricTrafficInfo *bool `json:"consider_historic_traffic_info,omitempty"`
	// 
	InSequence *bool `json:"in_sequence,omitempty"`
	// 
	DoNotApplyPlanning *bool `json:"do_not_apply_planning,omitempty"`
}

// NewAutoPlanOptionsModel instantiates a new AutoPlanOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoPlanOptionsModel() *AutoPlanOptionsModel {
	this := AutoPlanOptionsModel{}
	return &this
}

// NewAutoPlanOptionsModelWithDefaults instantiates a new AutoPlanOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoPlanOptionsModelWithDefaults() *AutoPlanOptionsModel {
	this := AutoPlanOptionsModel{}
	return &this
}

// GetSynchronous returns the Synchronous field value if set, zero value otherwise.
func (o *AutoPlanOptionsModel) GetSynchronous() bool {
	if o == nil || o.Synchronous == nil {
		var ret bool
		return ret
	}
	return *o.Synchronous
}

// GetSynchronousOk returns a tuple with the Synchronous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoPlanOptionsModel) GetSynchronousOk() (*bool, bool) {
	if o == nil || o.Synchronous == nil {
		return nil, false
	}
	return o.Synchronous, true
}

// HasSynchronous returns a boolean if a field has been set.
func (o *AutoPlanOptionsModel) HasSynchronous() bool {
	if o != nil && o.Synchronous != nil {
		return true
	}

	return false
}

// SetSynchronous gets a reference to the given bool and assigns it to the Synchronous field.
func (o *AutoPlanOptionsModel) SetSynchronous(v bool) {
	o.Synchronous = &v
}

// GetRespondAfterApplyPlanning returns the RespondAfterApplyPlanning field value if set, zero value otherwise.
func (o *AutoPlanOptionsModel) GetRespondAfterApplyPlanning() bool {
	if o == nil || o.RespondAfterApplyPlanning == nil {
		var ret bool
		return ret
	}
	return *o.RespondAfterApplyPlanning
}

// GetRespondAfterApplyPlanningOk returns a tuple with the RespondAfterApplyPlanning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoPlanOptionsModel) GetRespondAfterApplyPlanningOk() (*bool, bool) {
	if o == nil || o.RespondAfterApplyPlanning == nil {
		return nil, false
	}
	return o.RespondAfterApplyPlanning, true
}

// HasRespondAfterApplyPlanning returns a boolean if a field has been set.
func (o *AutoPlanOptionsModel) HasRespondAfterApplyPlanning() bool {
	if o != nil && o.RespondAfterApplyPlanning != nil {
		return true
	}

	return false
}

// SetRespondAfterApplyPlanning gets a reference to the given bool and assigns it to the RespondAfterApplyPlanning field.
func (o *AutoPlanOptionsModel) SetRespondAfterApplyPlanning(v bool) {
	o.RespondAfterApplyPlanning = &v
}

// GetAllowUnplannedActivities returns the AllowUnplannedActivities field value if set, zero value otherwise.
func (o *AutoPlanOptionsModel) GetAllowUnplannedActivities() bool {
	if o == nil || o.AllowUnplannedActivities == nil {
		var ret bool
		return ret
	}
	return *o.AllowUnplannedActivities
}

// GetAllowUnplannedActivitiesOk returns a tuple with the AllowUnplannedActivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoPlanOptionsModel) GetAllowUnplannedActivitiesOk() (*bool, bool) {
	if o == nil || o.AllowUnplannedActivities == nil {
		return nil, false
	}
	return o.AllowUnplannedActivities, true
}

// HasAllowUnplannedActivities returns a boolean if a field has been set.
func (o *AutoPlanOptionsModel) HasAllowUnplannedActivities() bool {
	if o != nil && o.AllowUnplannedActivities != nil {
		return true
	}

	return false
}

// SetAllowUnplannedActivities gets a reference to the given bool and assigns it to the AllowUnplannedActivities field.
func (o *AutoPlanOptionsModel) SetAllowUnplannedActivities(v bool) {
	o.AllowUnplannedActivities = &v
}

// GetConsiderHistoricTrafficInfo returns the ConsiderHistoricTrafficInfo field value if set, zero value otherwise.
func (o *AutoPlanOptionsModel) GetConsiderHistoricTrafficInfo() bool {
	if o == nil || o.ConsiderHistoricTrafficInfo == nil {
		var ret bool
		return ret
	}
	return *o.ConsiderHistoricTrafficInfo
}

// GetConsiderHistoricTrafficInfoOk returns a tuple with the ConsiderHistoricTrafficInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoPlanOptionsModel) GetConsiderHistoricTrafficInfoOk() (*bool, bool) {
	if o == nil || o.ConsiderHistoricTrafficInfo == nil {
		return nil, false
	}
	return o.ConsiderHistoricTrafficInfo, true
}

// HasConsiderHistoricTrafficInfo returns a boolean if a field has been set.
func (o *AutoPlanOptionsModel) HasConsiderHistoricTrafficInfo() bool {
	if o != nil && o.ConsiderHistoricTrafficInfo != nil {
		return true
	}

	return false
}

// SetConsiderHistoricTrafficInfo gets a reference to the given bool and assigns it to the ConsiderHistoricTrafficInfo field.
func (o *AutoPlanOptionsModel) SetConsiderHistoricTrafficInfo(v bool) {
	o.ConsiderHistoricTrafficInfo = &v
}

// GetInSequence returns the InSequence field value if set, zero value otherwise.
func (o *AutoPlanOptionsModel) GetInSequence() bool {
	if o == nil || o.InSequence == nil {
		var ret bool
		return ret
	}
	return *o.InSequence
}

// GetInSequenceOk returns a tuple with the InSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoPlanOptionsModel) GetInSequenceOk() (*bool, bool) {
	if o == nil || o.InSequence == nil {
		return nil, false
	}
	return o.InSequence, true
}

// HasInSequence returns a boolean if a field has been set.
func (o *AutoPlanOptionsModel) HasInSequence() bool {
	if o != nil && o.InSequence != nil {
		return true
	}

	return false
}

// SetInSequence gets a reference to the given bool and assigns it to the InSequence field.
func (o *AutoPlanOptionsModel) SetInSequence(v bool) {
	o.InSequence = &v
}

// GetDoNotApplyPlanning returns the DoNotApplyPlanning field value if set, zero value otherwise.
func (o *AutoPlanOptionsModel) GetDoNotApplyPlanning() bool {
	if o == nil || o.DoNotApplyPlanning == nil {
		var ret bool
		return ret
	}
	return *o.DoNotApplyPlanning
}

// GetDoNotApplyPlanningOk returns a tuple with the DoNotApplyPlanning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoPlanOptionsModel) GetDoNotApplyPlanningOk() (*bool, bool) {
	if o == nil || o.DoNotApplyPlanning == nil {
		return nil, false
	}
	return o.DoNotApplyPlanning, true
}

// HasDoNotApplyPlanning returns a boolean if a field has been set.
func (o *AutoPlanOptionsModel) HasDoNotApplyPlanning() bool {
	if o != nil && o.DoNotApplyPlanning != nil {
		return true
	}

	return false
}

// SetDoNotApplyPlanning gets a reference to the given bool and assigns it to the DoNotApplyPlanning field.
func (o *AutoPlanOptionsModel) SetDoNotApplyPlanning(v bool) {
	o.DoNotApplyPlanning = &v
}

func (o AutoPlanOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Synchronous != nil {
		toSerialize["synchronous"] = o.Synchronous
	}
	if o.RespondAfterApplyPlanning != nil {
		toSerialize["respond_after_apply_planning"] = o.RespondAfterApplyPlanning
	}
	if o.AllowUnplannedActivities != nil {
		toSerialize["allow_unplanned_activities"] = o.AllowUnplannedActivities
	}
	if o.ConsiderHistoricTrafficInfo != nil {
		toSerialize["consider_historic_traffic_info"] = o.ConsiderHistoricTrafficInfo
	}
	if o.InSequence != nil {
		toSerialize["in_sequence"] = o.InSequence
	}
	if o.DoNotApplyPlanning != nil {
		toSerialize["do_not_apply_planning"] = o.DoNotApplyPlanning
	}
	return json.Marshal(toSerialize)
}

type NullableAutoPlanOptionsModel struct {
	value *AutoPlanOptionsModel
	isSet bool
}

func (v NullableAutoPlanOptionsModel) Get() *AutoPlanOptionsModel {
	return v.value
}

func (v *NullableAutoPlanOptionsModel) Set(val *AutoPlanOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoPlanOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoPlanOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoPlanOptionsModel(val *AutoPlanOptionsModel) *NullableAutoPlanOptionsModel {
	return &NullableAutoPlanOptionsModel{value: val, isSet: true}
}

func (v NullableAutoPlanOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoPlanOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


