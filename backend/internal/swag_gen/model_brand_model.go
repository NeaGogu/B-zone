/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// BrandModel struct for BrandModel
type BrandModel struct {
	// Unique Identifier
	Id *int64 `json:"id,omitempty"`
	// Name of brand
	Name *string `json:"name,omitempty"`
	// 
	Tags *[]TagModel `json:"tags,omitempty"`
	// 
	Links *[]LinkModel `json:"links,omitempty"`
	// 
	MetaData *[]MetaDataModel `json:"meta_data,omitempty"`
	// 
	BrandColours *[]BrandColourModel `json:"brand_colours,omitempty"`
	// 
	Files *[]FileModel `json:"files,omitempty"`
	// 
	PortalSettings *[]PortalSettingModel `json:"portal_settings,omitempty"`
	BrandCreatedBy *UsersModel `json:"brand_created_by,omitempty"`
	BrandUpdatedBy *UsersModel `json:"brand_updated_by,omitempty"`
	// created_at date time
	BrandCreatedAt *time.Time `json:"brand_created_at,omitempty"`
	// updated_at date time
	BrandUpdatedAt *time.Time `json:"brand_updated_at,omitempty"`
}

// NewBrandModel instantiates a new BrandModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandModel() *BrandModel {
	this := BrandModel{}
	return &this
}

// NewBrandModelWithDefaults instantiates a new BrandModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandModelWithDefaults() *BrandModel {
	this := BrandModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BrandModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BrandModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *BrandModel) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BrandModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BrandModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BrandModel) SetName(v string) {
	o.Name = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *BrandModel) GetTags() []TagModel {
	if o == nil || o.Tags == nil {
		var ret []TagModel
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandModel) GetTagsOk() (*[]TagModel, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *BrandModel) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagModel and assigns it to the Tags field.
func (o *BrandModel) SetTags(v []TagModel) {
	o.Tags = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *BrandModel) GetLinks() []LinkModel {
	if o == nil || o.Links == nil {
		var ret []LinkModel
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandModel) GetLinksOk() (*[]LinkModel, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *BrandModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkModel and assigns it to the Links field.
func (o *BrandModel) SetLinks(v []LinkModel) {
	o.Links = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *BrandModel) GetMetaData() []MetaDataModel {
	if o == nil || o.MetaData == nil {
		var ret []MetaDataModel
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandModel) GetMetaDataOk() (*[]MetaDataModel, bool) {
	if o == nil || o.MetaData == nil {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *BrandModel) HasMetaData() bool {
	if o != nil && o.MetaData != nil {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given []MetaDataModel and assigns it to the MetaData field.
func (o *BrandModel) SetMetaData(v []MetaDataModel) {
	o.MetaData = &v
}

// GetBrandColours returns the BrandColours field value if set, zero value otherwise.
func (o *BrandModel) GetBrandColours() []BrandColourModel {
	if o == nil || o.BrandColours == nil {
		var ret []BrandColourModel
		return ret
	}
	return *o.BrandColours
}

// GetBrandColoursOk returns a tuple with the BrandColours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandModel) GetBrandColoursOk() (*[]BrandColourModel, bool) {
	if o == nil || o.BrandColours == nil {
		return nil, false
	}
	return o.BrandColours, true
}

// HasBrandColours returns a boolean if a field has been set.
func (o *BrandModel) HasBrandColours() bool {
	if o != nil && o.BrandColours != nil {
		return true
	}

	return false
}

// SetBrandColours gets a reference to the given []BrandColourModel and assigns it to the BrandColours field.
func (o *BrandModel) SetBrandColours(v []BrandColourModel) {
	o.BrandColours = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *BrandModel) GetFiles() []FileModel {
	if o == nil || o.Files == nil {
		var ret []FileModel
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandModel) GetFilesOk() (*[]FileModel, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *BrandModel) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []FileModel and assigns it to the Files field.
func (o *BrandModel) SetFiles(v []FileModel) {
	o.Files = &v
}

// GetPortalSettings returns the PortalSettings field value if set, zero value otherwise.
func (o *BrandModel) GetPortalSettings() []PortalSettingModel {
	if o == nil || o.PortalSettings == nil {
		var ret []PortalSettingModel
		return ret
	}
	return *o.PortalSettings
}

// GetPortalSettingsOk returns a tuple with the PortalSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandModel) GetPortalSettingsOk() (*[]PortalSettingModel, bool) {
	if o == nil || o.PortalSettings == nil {
		return nil, false
	}
	return o.PortalSettings, true
}

// HasPortalSettings returns a boolean if a field has been set.
func (o *BrandModel) HasPortalSettings() bool {
	if o != nil && o.PortalSettings != nil {
		return true
	}

	return false
}

// SetPortalSettings gets a reference to the given []PortalSettingModel and assigns it to the PortalSettings field.
func (o *BrandModel) SetPortalSettings(v []PortalSettingModel) {
	o.PortalSettings = &v
}

// GetBrandCreatedBy returns the BrandCreatedBy field value if set, zero value otherwise.
func (o *BrandModel) GetBrandCreatedBy() UsersModel {
	if o == nil || o.BrandCreatedBy == nil {
		var ret UsersModel
		return ret
	}
	return *o.BrandCreatedBy
}

// GetBrandCreatedByOk returns a tuple with the BrandCreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandModel) GetBrandCreatedByOk() (*UsersModel, bool) {
	if o == nil || o.BrandCreatedBy == nil {
		return nil, false
	}
	return o.BrandCreatedBy, true
}

// HasBrandCreatedBy returns a boolean if a field has been set.
func (o *BrandModel) HasBrandCreatedBy() bool {
	if o != nil && o.BrandCreatedBy != nil {
		return true
	}

	return false
}

// SetBrandCreatedBy gets a reference to the given UsersModel and assigns it to the BrandCreatedBy field.
func (o *BrandModel) SetBrandCreatedBy(v UsersModel) {
	o.BrandCreatedBy = &v
}

// GetBrandUpdatedBy returns the BrandUpdatedBy field value if set, zero value otherwise.
func (o *BrandModel) GetBrandUpdatedBy() UsersModel {
	if o == nil || o.BrandUpdatedBy == nil {
		var ret UsersModel
		return ret
	}
	return *o.BrandUpdatedBy
}

// GetBrandUpdatedByOk returns a tuple with the BrandUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandModel) GetBrandUpdatedByOk() (*UsersModel, bool) {
	if o == nil || o.BrandUpdatedBy == nil {
		return nil, false
	}
	return o.BrandUpdatedBy, true
}

// HasBrandUpdatedBy returns a boolean if a field has been set.
func (o *BrandModel) HasBrandUpdatedBy() bool {
	if o != nil && o.BrandUpdatedBy != nil {
		return true
	}

	return false
}

// SetBrandUpdatedBy gets a reference to the given UsersModel and assigns it to the BrandUpdatedBy field.
func (o *BrandModel) SetBrandUpdatedBy(v UsersModel) {
	o.BrandUpdatedBy = &v
}

// GetBrandCreatedAt returns the BrandCreatedAt field value if set, zero value otherwise.
func (o *BrandModel) GetBrandCreatedAt() time.Time {
	if o == nil || o.BrandCreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.BrandCreatedAt
}

// GetBrandCreatedAtOk returns a tuple with the BrandCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandModel) GetBrandCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.BrandCreatedAt == nil {
		return nil, false
	}
	return o.BrandCreatedAt, true
}

// HasBrandCreatedAt returns a boolean if a field has been set.
func (o *BrandModel) HasBrandCreatedAt() bool {
	if o != nil && o.BrandCreatedAt != nil {
		return true
	}

	return false
}

// SetBrandCreatedAt gets a reference to the given time.Time and assigns it to the BrandCreatedAt field.
func (o *BrandModel) SetBrandCreatedAt(v time.Time) {
	o.BrandCreatedAt = &v
}

// GetBrandUpdatedAt returns the BrandUpdatedAt field value if set, zero value otherwise.
func (o *BrandModel) GetBrandUpdatedAt() time.Time {
	if o == nil || o.BrandUpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.BrandUpdatedAt
}

// GetBrandUpdatedAtOk returns a tuple with the BrandUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandModel) GetBrandUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.BrandUpdatedAt == nil {
		return nil, false
	}
	return o.BrandUpdatedAt, true
}

// HasBrandUpdatedAt returns a boolean if a field has been set.
func (o *BrandModel) HasBrandUpdatedAt() bool {
	if o != nil && o.BrandUpdatedAt != nil {
		return true
	}

	return false
}

// SetBrandUpdatedAt gets a reference to the given time.Time and assigns it to the BrandUpdatedAt field.
func (o *BrandModel) SetBrandUpdatedAt(v time.Time) {
	o.BrandUpdatedAt = &v
}

func (o BrandModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.MetaData != nil {
		toSerialize["meta_data"] = o.MetaData
	}
	if o.BrandColours != nil {
		toSerialize["brand_colours"] = o.BrandColours
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if o.PortalSettings != nil {
		toSerialize["portal_settings"] = o.PortalSettings
	}
	if o.BrandCreatedBy != nil {
		toSerialize["brand_created_by"] = o.BrandCreatedBy
	}
	if o.BrandUpdatedBy != nil {
		toSerialize["brand_updated_by"] = o.BrandUpdatedBy
	}
	if o.BrandCreatedAt != nil {
		toSerialize["brand_created_at"] = o.BrandCreatedAt
	}
	if o.BrandUpdatedAt != nil {
		toSerialize["brand_updated_at"] = o.BrandUpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableBrandModel struct {
	value *BrandModel
	isSet bool
}

func (v NullableBrandModel) Get() *BrandModel {
	return v.value
}

func (v *NullableBrandModel) Set(val *BrandModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandModel(val *BrandModel) *NullableBrandModel {
	return &NullableBrandModel{value: val, isSet: true}
}

func (v NullableBrandModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


