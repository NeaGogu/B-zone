/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StatusHistoryListModel struct for StatusHistoryListModel
type StatusHistoryListModel struct {
	// 
	Data *[]StatusHistoryModel `json:"data,omitempty"`
}

// NewStatusHistoryListModel instantiates a new StatusHistoryListModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusHistoryListModel() *StatusHistoryListModel {
	this := StatusHistoryListModel{}
	return &this
}

// NewStatusHistoryListModelWithDefaults instantiates a new StatusHistoryListModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusHistoryListModelWithDefaults() *StatusHistoryListModel {
	this := StatusHistoryListModel{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *StatusHistoryListModel) GetData() []StatusHistoryModel {
	if o == nil || o.Data == nil {
		var ret []StatusHistoryModel
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryListModel) GetDataOk() (*[]StatusHistoryModel, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *StatusHistoryListModel) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []StatusHistoryModel and assigns it to the Data field.
func (o *StatusHistoryListModel) SetData(v []StatusHistoryModel) {
	o.Data = &v
}

func (o StatusHistoryListModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableStatusHistoryListModel struct {
	value *StatusHistoryListModel
	isSet bool
}

func (v NullableStatusHistoryListModel) Get() *StatusHistoryListModel {
	return v.value
}

func (v *NullableStatusHistoryListModel) Set(val *StatusHistoryListModel) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusHistoryListModel) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusHistoryListModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusHistoryListModel(val *StatusHistoryListModel) *NullableStatusHistoryListModel {
	return &NullableStatusHistoryListModel{value: val, isSet: true}
}

func (v NullableStatusHistoryListModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusHistoryListModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


