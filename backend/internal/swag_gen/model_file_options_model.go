/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FileOptionsModel struct for FileOptionsModel
type FileOptionsModel struct {
	// 
	IncludeMetaData *bool `json:"include_meta_data,omitempty"`
	// 
	IncludeTagTypeName *bool `json:"include_tag_type_name,omitempty"`
	// 
	IncludeFileTags *bool `json:"include_file_tags,omitempty"`
	// 
	IncludeFileRecordInfo *bool `json:"include_file_record_info,omitempty"`
	// 
	IncludeFileBase64 *bool `json:"include_file_base64,omitempty"`
	// 
	IncludeLinks *bool `json:"include_links,omitempty"`
}

// NewFileOptionsModel instantiates a new FileOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileOptionsModel() *FileOptionsModel {
	this := FileOptionsModel{}
	return &this
}

// NewFileOptionsModelWithDefaults instantiates a new FileOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileOptionsModelWithDefaults() *FileOptionsModel {
	this := FileOptionsModel{}
	return &this
}

// GetIncludeMetaData returns the IncludeMetaData field value if set, zero value otherwise.
func (o *FileOptionsModel) GetIncludeMetaData() bool {
	if o == nil || o.IncludeMetaData == nil {
		var ret bool
		return ret
	}
	return *o.IncludeMetaData
}

// GetIncludeMetaDataOk returns a tuple with the IncludeMetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileOptionsModel) GetIncludeMetaDataOk() (*bool, bool) {
	if o == nil || o.IncludeMetaData == nil {
		return nil, false
	}
	return o.IncludeMetaData, true
}

// HasIncludeMetaData returns a boolean if a field has been set.
func (o *FileOptionsModel) HasIncludeMetaData() bool {
	if o != nil && o.IncludeMetaData != nil {
		return true
	}

	return false
}

// SetIncludeMetaData gets a reference to the given bool and assigns it to the IncludeMetaData field.
func (o *FileOptionsModel) SetIncludeMetaData(v bool) {
	o.IncludeMetaData = &v
}

// GetIncludeTagTypeName returns the IncludeTagTypeName field value if set, zero value otherwise.
func (o *FileOptionsModel) GetIncludeTagTypeName() bool {
	if o == nil || o.IncludeTagTypeName == nil {
		var ret bool
		return ret
	}
	return *o.IncludeTagTypeName
}

// GetIncludeTagTypeNameOk returns a tuple with the IncludeTagTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileOptionsModel) GetIncludeTagTypeNameOk() (*bool, bool) {
	if o == nil || o.IncludeTagTypeName == nil {
		return nil, false
	}
	return o.IncludeTagTypeName, true
}

// HasIncludeTagTypeName returns a boolean if a field has been set.
func (o *FileOptionsModel) HasIncludeTagTypeName() bool {
	if o != nil && o.IncludeTagTypeName != nil {
		return true
	}

	return false
}

// SetIncludeTagTypeName gets a reference to the given bool and assigns it to the IncludeTagTypeName field.
func (o *FileOptionsModel) SetIncludeTagTypeName(v bool) {
	o.IncludeTagTypeName = &v
}

// GetIncludeFileTags returns the IncludeFileTags field value if set, zero value otherwise.
func (o *FileOptionsModel) GetIncludeFileTags() bool {
	if o == nil || o.IncludeFileTags == nil {
		var ret bool
		return ret
	}
	return *o.IncludeFileTags
}

// GetIncludeFileTagsOk returns a tuple with the IncludeFileTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileOptionsModel) GetIncludeFileTagsOk() (*bool, bool) {
	if o == nil || o.IncludeFileTags == nil {
		return nil, false
	}
	return o.IncludeFileTags, true
}

// HasIncludeFileTags returns a boolean if a field has been set.
func (o *FileOptionsModel) HasIncludeFileTags() bool {
	if o != nil && o.IncludeFileTags != nil {
		return true
	}

	return false
}

// SetIncludeFileTags gets a reference to the given bool and assigns it to the IncludeFileTags field.
func (o *FileOptionsModel) SetIncludeFileTags(v bool) {
	o.IncludeFileTags = &v
}

// GetIncludeFileRecordInfo returns the IncludeFileRecordInfo field value if set, zero value otherwise.
func (o *FileOptionsModel) GetIncludeFileRecordInfo() bool {
	if o == nil || o.IncludeFileRecordInfo == nil {
		var ret bool
		return ret
	}
	return *o.IncludeFileRecordInfo
}

// GetIncludeFileRecordInfoOk returns a tuple with the IncludeFileRecordInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileOptionsModel) GetIncludeFileRecordInfoOk() (*bool, bool) {
	if o == nil || o.IncludeFileRecordInfo == nil {
		return nil, false
	}
	return o.IncludeFileRecordInfo, true
}

// HasIncludeFileRecordInfo returns a boolean if a field has been set.
func (o *FileOptionsModel) HasIncludeFileRecordInfo() bool {
	if o != nil && o.IncludeFileRecordInfo != nil {
		return true
	}

	return false
}

// SetIncludeFileRecordInfo gets a reference to the given bool and assigns it to the IncludeFileRecordInfo field.
func (o *FileOptionsModel) SetIncludeFileRecordInfo(v bool) {
	o.IncludeFileRecordInfo = &v
}

// GetIncludeFileBase64 returns the IncludeFileBase64 field value if set, zero value otherwise.
func (o *FileOptionsModel) GetIncludeFileBase64() bool {
	if o == nil || o.IncludeFileBase64 == nil {
		var ret bool
		return ret
	}
	return *o.IncludeFileBase64
}

// GetIncludeFileBase64Ok returns a tuple with the IncludeFileBase64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileOptionsModel) GetIncludeFileBase64Ok() (*bool, bool) {
	if o == nil || o.IncludeFileBase64 == nil {
		return nil, false
	}
	return o.IncludeFileBase64, true
}

// HasIncludeFileBase64 returns a boolean if a field has been set.
func (o *FileOptionsModel) HasIncludeFileBase64() bool {
	if o != nil && o.IncludeFileBase64 != nil {
		return true
	}

	return false
}

// SetIncludeFileBase64 gets a reference to the given bool and assigns it to the IncludeFileBase64 field.
func (o *FileOptionsModel) SetIncludeFileBase64(v bool) {
	o.IncludeFileBase64 = &v
}

// GetIncludeLinks returns the IncludeLinks field value if set, zero value otherwise.
func (o *FileOptionsModel) GetIncludeLinks() bool {
	if o == nil || o.IncludeLinks == nil {
		var ret bool
		return ret
	}
	return *o.IncludeLinks
}

// GetIncludeLinksOk returns a tuple with the IncludeLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileOptionsModel) GetIncludeLinksOk() (*bool, bool) {
	if o == nil || o.IncludeLinks == nil {
		return nil, false
	}
	return o.IncludeLinks, true
}

// HasIncludeLinks returns a boolean if a field has been set.
func (o *FileOptionsModel) HasIncludeLinks() bool {
	if o != nil && o.IncludeLinks != nil {
		return true
	}

	return false
}

// SetIncludeLinks gets a reference to the given bool and assigns it to the IncludeLinks field.
func (o *FileOptionsModel) SetIncludeLinks(v bool) {
	o.IncludeLinks = &v
}

func (o FileOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeMetaData != nil {
		toSerialize["include_meta_data"] = o.IncludeMetaData
	}
	if o.IncludeTagTypeName != nil {
		toSerialize["include_tag_type_name"] = o.IncludeTagTypeName
	}
	if o.IncludeFileTags != nil {
		toSerialize["include_file_tags"] = o.IncludeFileTags
	}
	if o.IncludeFileRecordInfo != nil {
		toSerialize["include_file_record_info"] = o.IncludeFileRecordInfo
	}
	if o.IncludeFileBase64 != nil {
		toSerialize["include_file_base64"] = o.IncludeFileBase64
	}
	if o.IncludeLinks != nil {
		toSerialize["include_links"] = o.IncludeLinks
	}
	return json.Marshal(toSerialize)
}

type NullableFileOptionsModel struct {
	value *FileOptionsModel
	isSet bool
}

func (v NullableFileOptionsModel) Get() *FileOptionsModel {
	return v.value
}

func (v *NullableFileOptionsModel) Set(val *FileOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableFileOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableFileOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileOptionsModel(val *FileOptionsModel) *NullableFileOptionsModel {
	return &NullableFileOptionsModel{value: val, isSet: true}
}

func (v NullableFileOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


