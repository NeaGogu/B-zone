/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AutoPlanFiltersModel struct for AutoPlanFiltersModel
type AutoPlanFiltersModel struct {
	Activity *ActivityFiltersModel `json:"activity,omitempty"`
	Route *RouteFiltersModel `json:"route,omitempty"`
	RouteGeneral *RouteFiltersModel `json:"route_general,omitempty"`
}

// NewAutoPlanFiltersModel instantiates a new AutoPlanFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoPlanFiltersModel() *AutoPlanFiltersModel {
	this := AutoPlanFiltersModel{}
	return &this
}

// NewAutoPlanFiltersModelWithDefaults instantiates a new AutoPlanFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoPlanFiltersModelWithDefaults() *AutoPlanFiltersModel {
	this := AutoPlanFiltersModel{}
	return &this
}

// GetActivity returns the Activity field value if set, zero value otherwise.
func (o *AutoPlanFiltersModel) GetActivity() ActivityFiltersModel {
	if o == nil || o.Activity == nil {
		var ret ActivityFiltersModel
		return ret
	}
	return *o.Activity
}

// GetActivityOk returns a tuple with the Activity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoPlanFiltersModel) GetActivityOk() (*ActivityFiltersModel, bool) {
	if o == nil || o.Activity == nil {
		return nil, false
	}
	return o.Activity, true
}

// HasActivity returns a boolean if a field has been set.
func (o *AutoPlanFiltersModel) HasActivity() bool {
	if o != nil && o.Activity != nil {
		return true
	}

	return false
}

// SetActivity gets a reference to the given ActivityFiltersModel and assigns it to the Activity field.
func (o *AutoPlanFiltersModel) SetActivity(v ActivityFiltersModel) {
	o.Activity = &v
}

// GetRoute returns the Route field value if set, zero value otherwise.
func (o *AutoPlanFiltersModel) GetRoute() RouteFiltersModel {
	if o == nil || o.Route == nil {
		var ret RouteFiltersModel
		return ret
	}
	return *o.Route
}

// GetRouteOk returns a tuple with the Route field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoPlanFiltersModel) GetRouteOk() (*RouteFiltersModel, bool) {
	if o == nil || o.Route == nil {
		return nil, false
	}
	return o.Route, true
}

// HasRoute returns a boolean if a field has been set.
func (o *AutoPlanFiltersModel) HasRoute() bool {
	if o != nil && o.Route != nil {
		return true
	}

	return false
}

// SetRoute gets a reference to the given RouteFiltersModel and assigns it to the Route field.
func (o *AutoPlanFiltersModel) SetRoute(v RouteFiltersModel) {
	o.Route = &v
}

// GetRouteGeneral returns the RouteGeneral field value if set, zero value otherwise.
func (o *AutoPlanFiltersModel) GetRouteGeneral() RouteFiltersModel {
	if o == nil || o.RouteGeneral == nil {
		var ret RouteFiltersModel
		return ret
	}
	return *o.RouteGeneral
}

// GetRouteGeneralOk returns a tuple with the RouteGeneral field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoPlanFiltersModel) GetRouteGeneralOk() (*RouteFiltersModel, bool) {
	if o == nil || o.RouteGeneral == nil {
		return nil, false
	}
	return o.RouteGeneral, true
}

// HasRouteGeneral returns a boolean if a field has been set.
func (o *AutoPlanFiltersModel) HasRouteGeneral() bool {
	if o != nil && o.RouteGeneral != nil {
		return true
	}

	return false
}

// SetRouteGeneral gets a reference to the given RouteFiltersModel and assigns it to the RouteGeneral field.
func (o *AutoPlanFiltersModel) SetRouteGeneral(v RouteFiltersModel) {
	o.RouteGeneral = &v
}

func (o AutoPlanFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Activity != nil {
		toSerialize["activity"] = o.Activity
	}
	if o.Route != nil {
		toSerialize["route"] = o.Route
	}
	if o.RouteGeneral != nil {
		toSerialize["route_general"] = o.RouteGeneral
	}
	return json.Marshal(toSerialize)
}

type NullableAutoPlanFiltersModel struct {
	value *AutoPlanFiltersModel
	isSet bool
}

func (v NullableAutoPlanFiltersModel) Get() *AutoPlanFiltersModel {
	return v.value
}

func (v *NullableAutoPlanFiltersModel) Set(val *AutoPlanFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoPlanFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoPlanFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoPlanFiltersModel(val *AutoPlanFiltersModel) *NullableAutoPlanFiltersModel {
	return &NullableAutoPlanFiltersModel{value: val, isSet: true}
}

func (v NullableAutoPlanFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoPlanFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


