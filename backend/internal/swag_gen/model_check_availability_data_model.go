/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CheckAvailabilityDataModel struct for CheckAvailabilityDataModel
type CheckAvailabilityDataModel struct {
	Activity ActivityModel `json:"activity"`
	// 
	RouteFilters *map[string]interface{} `json:"route_filters,omitempty"`
	// unique per api request
	Token *string `json:"token,omitempty"`
}

// NewCheckAvailabilityDataModel instantiates a new CheckAvailabilityDataModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckAvailabilityDataModel(activity ActivityModel, ) *CheckAvailabilityDataModel {
	this := CheckAvailabilityDataModel{}
	this.Activity = activity
	return &this
}

// NewCheckAvailabilityDataModelWithDefaults instantiates a new CheckAvailabilityDataModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckAvailabilityDataModelWithDefaults() *CheckAvailabilityDataModel {
	this := CheckAvailabilityDataModel{}
	return &this
}

// GetActivity returns the Activity field value
func (o *CheckAvailabilityDataModel) GetActivity() ActivityModel {
	if o == nil  {
		var ret ActivityModel
		return ret
	}

	return o.Activity
}

// GetActivityOk returns a tuple with the Activity field value
// and a boolean to check if the value has been set.
func (o *CheckAvailabilityDataModel) GetActivityOk() (*ActivityModel, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Activity, true
}

// SetActivity sets field value
func (o *CheckAvailabilityDataModel) SetActivity(v ActivityModel) {
	o.Activity = v
}

// GetRouteFilters returns the RouteFilters field value if set, zero value otherwise.
func (o *CheckAvailabilityDataModel) GetRouteFilters() map[string]interface{} {
	if o == nil || o.RouteFilters == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.RouteFilters
}

// GetRouteFiltersOk returns a tuple with the RouteFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckAvailabilityDataModel) GetRouteFiltersOk() (*map[string]interface{}, bool) {
	if o == nil || o.RouteFilters == nil {
		return nil, false
	}
	return o.RouteFilters, true
}

// HasRouteFilters returns a boolean if a field has been set.
func (o *CheckAvailabilityDataModel) HasRouteFilters() bool {
	if o != nil && o.RouteFilters != nil {
		return true
	}

	return false
}

// SetRouteFilters gets a reference to the given map[string]interface{} and assigns it to the RouteFilters field.
func (o *CheckAvailabilityDataModel) SetRouteFilters(v map[string]interface{}) {
	o.RouteFilters = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CheckAvailabilityDataModel) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckAvailabilityDataModel) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CheckAvailabilityDataModel) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CheckAvailabilityDataModel) SetToken(v string) {
	o.Token = &v
}

func (o CheckAvailabilityDataModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["activity"] = o.Activity
	}
	if o.RouteFilters != nil {
		toSerialize["route_filters"] = o.RouteFilters
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableCheckAvailabilityDataModel struct {
	value *CheckAvailabilityDataModel
	isSet bool
}

func (v NullableCheckAvailabilityDataModel) Get() *CheckAvailabilityDataModel {
	return v.value
}

func (v *NullableCheckAvailabilityDataModel) Set(val *CheckAvailabilityDataModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckAvailabilityDataModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckAvailabilityDataModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckAvailabilityDataModel(val *CheckAvailabilityDataModel) *NullableCheckAvailabilityDataModel {
	return &NullableCheckAvailabilityDataModel{value: val, isSet: true}
}

func (v NullableCheckAvailabilityDataModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckAvailabilityDataModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


