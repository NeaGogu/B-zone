/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TagsFiltersModel struct for TagsFiltersModel
type TagsFiltersModel struct {
	// Object id
	ObjectId *[]int32 `json:"object_id,omitempty"`
	// Object type
	ObjectType *[]int32 `json:"object_type,omitempty"`
	// Tag type id
	TagTypeId *[]int32 `json:"tag_type_id,omitempty"`
	// Tag names
	TagNames *[]string `json:"tag_names,omitempty"`
}

// NewTagsFiltersModel instantiates a new TagsFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagsFiltersModel() *TagsFiltersModel {
	this := TagsFiltersModel{}
	return &this
}

// NewTagsFiltersModelWithDefaults instantiates a new TagsFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagsFiltersModelWithDefaults() *TagsFiltersModel {
	this := TagsFiltersModel{}
	return &this
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *TagsFiltersModel) GetObjectId() []int32 {
	if o == nil || o.ObjectId == nil {
		var ret []int32
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagsFiltersModel) GetObjectIdOk() (*[]int32, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *TagsFiltersModel) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given []int32 and assigns it to the ObjectId field.
func (o *TagsFiltersModel) SetObjectId(v []int32) {
	o.ObjectId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *TagsFiltersModel) GetObjectType() []int32 {
	if o == nil || o.ObjectType == nil {
		var ret []int32
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagsFiltersModel) GetObjectTypeOk() (*[]int32, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *TagsFiltersModel) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given []int32 and assigns it to the ObjectType field.
func (o *TagsFiltersModel) SetObjectType(v []int32) {
	o.ObjectType = &v
}

// GetTagTypeId returns the TagTypeId field value if set, zero value otherwise.
func (o *TagsFiltersModel) GetTagTypeId() []int32 {
	if o == nil || o.TagTypeId == nil {
		var ret []int32
		return ret
	}
	return *o.TagTypeId
}

// GetTagTypeIdOk returns a tuple with the TagTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagsFiltersModel) GetTagTypeIdOk() (*[]int32, bool) {
	if o == nil || o.TagTypeId == nil {
		return nil, false
	}
	return o.TagTypeId, true
}

// HasTagTypeId returns a boolean if a field has been set.
func (o *TagsFiltersModel) HasTagTypeId() bool {
	if o != nil && o.TagTypeId != nil {
		return true
	}

	return false
}

// SetTagTypeId gets a reference to the given []int32 and assigns it to the TagTypeId field.
func (o *TagsFiltersModel) SetTagTypeId(v []int32) {
	o.TagTypeId = &v
}

// GetTagNames returns the TagNames field value if set, zero value otherwise.
func (o *TagsFiltersModel) GetTagNames() []string {
	if o == nil || o.TagNames == nil {
		var ret []string
		return ret
	}
	return *o.TagNames
}

// GetTagNamesOk returns a tuple with the TagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagsFiltersModel) GetTagNamesOk() (*[]string, bool) {
	if o == nil || o.TagNames == nil {
		return nil, false
	}
	return o.TagNames, true
}

// HasTagNames returns a boolean if a field has been set.
func (o *TagsFiltersModel) HasTagNames() bool {
	if o != nil && o.TagNames != nil {
		return true
	}

	return false
}

// SetTagNames gets a reference to the given []string and assigns it to the TagNames field.
func (o *TagsFiltersModel) SetTagNames(v []string) {
	o.TagNames = &v
}

func (o TagsFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ObjectId != nil {
		toSerialize["object_id"] = o.ObjectId
	}
	if o.ObjectType != nil {
		toSerialize["object_type"] = o.ObjectType
	}
	if o.TagTypeId != nil {
		toSerialize["tag_type_id"] = o.TagTypeId
	}
	if o.TagNames != nil {
		toSerialize["tag_names"] = o.TagNames
	}
	return json.Marshal(toSerialize)
}

type NullableTagsFiltersModel struct {
	value *TagsFiltersModel
	isSet bool
}

func (v NullableTagsFiltersModel) Get() *TagsFiltersModel {
	return v.value
}

func (v *NullableTagsFiltersModel) Set(val *TagsFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTagsFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTagsFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagsFiltersModel(val *TagsFiltersModel) *NullableTagsFiltersModel {
	return &NullableTagsFiltersModel{value: val, isSet: true}
}

func (v NullableTagsFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagsFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


