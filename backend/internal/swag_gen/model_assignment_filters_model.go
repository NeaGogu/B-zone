/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AssignmentFiltersModel struct for AssignmentFiltersModel
type AssignmentFiltersModel struct {
	// Unique Identifier
	Id *[]int32 `json:"id,omitempty"`
	// Number of this assignment
	Nr *[]string `json:"nr,omitempty"`
	// DateTime From
	DateTimeFrom *time.Time `json:"date_time_from,omitempty"`
	// DateTime To
	DateTimeTo *time.Time `json:"date_time_to,omitempty"`
	// filter assignments with a DateTime From since this input
	DateTimeFromSince *time.Time `json:"date_time_from_since,omitempty"`
	// filter assignments with a DateTime From till this input
	DateTimeFromTill *time.Time `json:"date_time_from_till,omitempty"`
	// filter assignments with a DateTime To since this input
	DateTimeToSince *time.Time `json:"date_time_to_since,omitempty"`
	// filter assignments with a DateTime To till this input
	DateTimeToTill *time.Time `json:"date_time_to_till,omitempty"`
	// Activity Link ids
	Links *[]map[string]interface{} `json:"links,omitempty"`
	// Show updated since
	UpdatedAtSince *time.Time `json:"updated_at_since,omitempty"`
	// Show updated till
	UpdatedAtTill *time.Time `json:"updated_at_till,omitempty"`
}

// NewAssignmentFiltersModel instantiates a new AssignmentFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignmentFiltersModel() *AssignmentFiltersModel {
	this := AssignmentFiltersModel{}
	return &this
}

// NewAssignmentFiltersModelWithDefaults instantiates a new AssignmentFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignmentFiltersModelWithDefaults() *AssignmentFiltersModel {
	this := AssignmentFiltersModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AssignmentFiltersModel) GetId() []int32 {
	if o == nil || o.Id == nil {
		var ret []int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentFiltersModel) GetIdOk() (*[]int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AssignmentFiltersModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given []int32 and assigns it to the Id field.
func (o *AssignmentFiltersModel) SetId(v []int32) {
	o.Id = &v
}

// GetNr returns the Nr field value if set, zero value otherwise.
func (o *AssignmentFiltersModel) GetNr() []string {
	if o == nil || o.Nr == nil {
		var ret []string
		return ret
	}
	return *o.Nr
}

// GetNrOk returns a tuple with the Nr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentFiltersModel) GetNrOk() (*[]string, bool) {
	if o == nil || o.Nr == nil {
		return nil, false
	}
	return o.Nr, true
}

// HasNr returns a boolean if a field has been set.
func (o *AssignmentFiltersModel) HasNr() bool {
	if o != nil && o.Nr != nil {
		return true
	}

	return false
}

// SetNr gets a reference to the given []string and assigns it to the Nr field.
func (o *AssignmentFiltersModel) SetNr(v []string) {
	o.Nr = &v
}

// GetDateTimeFrom returns the DateTimeFrom field value if set, zero value otherwise.
func (o *AssignmentFiltersModel) GetDateTimeFrom() time.Time {
	if o == nil || o.DateTimeFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeFrom
}

// GetDateTimeFromOk returns a tuple with the DateTimeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentFiltersModel) GetDateTimeFromOk() (*time.Time, bool) {
	if o == nil || o.DateTimeFrom == nil {
		return nil, false
	}
	return o.DateTimeFrom, true
}

// HasDateTimeFrom returns a boolean if a field has been set.
func (o *AssignmentFiltersModel) HasDateTimeFrom() bool {
	if o != nil && o.DateTimeFrom != nil {
		return true
	}

	return false
}

// SetDateTimeFrom gets a reference to the given time.Time and assigns it to the DateTimeFrom field.
func (o *AssignmentFiltersModel) SetDateTimeFrom(v time.Time) {
	o.DateTimeFrom = &v
}

// GetDateTimeTo returns the DateTimeTo field value if set, zero value otherwise.
func (o *AssignmentFiltersModel) GetDateTimeTo() time.Time {
	if o == nil || o.DateTimeTo == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeTo
}

// GetDateTimeToOk returns a tuple with the DateTimeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentFiltersModel) GetDateTimeToOk() (*time.Time, bool) {
	if o == nil || o.DateTimeTo == nil {
		return nil, false
	}
	return o.DateTimeTo, true
}

// HasDateTimeTo returns a boolean if a field has been set.
func (o *AssignmentFiltersModel) HasDateTimeTo() bool {
	if o != nil && o.DateTimeTo != nil {
		return true
	}

	return false
}

// SetDateTimeTo gets a reference to the given time.Time and assigns it to the DateTimeTo field.
func (o *AssignmentFiltersModel) SetDateTimeTo(v time.Time) {
	o.DateTimeTo = &v
}

// GetDateTimeFromSince returns the DateTimeFromSince field value if set, zero value otherwise.
func (o *AssignmentFiltersModel) GetDateTimeFromSince() time.Time {
	if o == nil || o.DateTimeFromSince == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeFromSince
}

// GetDateTimeFromSinceOk returns a tuple with the DateTimeFromSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentFiltersModel) GetDateTimeFromSinceOk() (*time.Time, bool) {
	if o == nil || o.DateTimeFromSince == nil {
		return nil, false
	}
	return o.DateTimeFromSince, true
}

// HasDateTimeFromSince returns a boolean if a field has been set.
func (o *AssignmentFiltersModel) HasDateTimeFromSince() bool {
	if o != nil && o.DateTimeFromSince != nil {
		return true
	}

	return false
}

// SetDateTimeFromSince gets a reference to the given time.Time and assigns it to the DateTimeFromSince field.
func (o *AssignmentFiltersModel) SetDateTimeFromSince(v time.Time) {
	o.DateTimeFromSince = &v
}

// GetDateTimeFromTill returns the DateTimeFromTill field value if set, zero value otherwise.
func (o *AssignmentFiltersModel) GetDateTimeFromTill() time.Time {
	if o == nil || o.DateTimeFromTill == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeFromTill
}

// GetDateTimeFromTillOk returns a tuple with the DateTimeFromTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentFiltersModel) GetDateTimeFromTillOk() (*time.Time, bool) {
	if o == nil || o.DateTimeFromTill == nil {
		return nil, false
	}
	return o.DateTimeFromTill, true
}

// HasDateTimeFromTill returns a boolean if a field has been set.
func (o *AssignmentFiltersModel) HasDateTimeFromTill() bool {
	if o != nil && o.DateTimeFromTill != nil {
		return true
	}

	return false
}

// SetDateTimeFromTill gets a reference to the given time.Time and assigns it to the DateTimeFromTill field.
func (o *AssignmentFiltersModel) SetDateTimeFromTill(v time.Time) {
	o.DateTimeFromTill = &v
}

// GetDateTimeToSince returns the DateTimeToSince field value if set, zero value otherwise.
func (o *AssignmentFiltersModel) GetDateTimeToSince() time.Time {
	if o == nil || o.DateTimeToSince == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeToSince
}

// GetDateTimeToSinceOk returns a tuple with the DateTimeToSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentFiltersModel) GetDateTimeToSinceOk() (*time.Time, bool) {
	if o == nil || o.DateTimeToSince == nil {
		return nil, false
	}
	return o.DateTimeToSince, true
}

// HasDateTimeToSince returns a boolean if a field has been set.
func (o *AssignmentFiltersModel) HasDateTimeToSince() bool {
	if o != nil && o.DateTimeToSince != nil {
		return true
	}

	return false
}

// SetDateTimeToSince gets a reference to the given time.Time and assigns it to the DateTimeToSince field.
func (o *AssignmentFiltersModel) SetDateTimeToSince(v time.Time) {
	o.DateTimeToSince = &v
}

// GetDateTimeToTill returns the DateTimeToTill field value if set, zero value otherwise.
func (o *AssignmentFiltersModel) GetDateTimeToTill() time.Time {
	if o == nil || o.DateTimeToTill == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeToTill
}

// GetDateTimeToTillOk returns a tuple with the DateTimeToTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentFiltersModel) GetDateTimeToTillOk() (*time.Time, bool) {
	if o == nil || o.DateTimeToTill == nil {
		return nil, false
	}
	return o.DateTimeToTill, true
}

// HasDateTimeToTill returns a boolean if a field has been set.
func (o *AssignmentFiltersModel) HasDateTimeToTill() bool {
	if o != nil && o.DateTimeToTill != nil {
		return true
	}

	return false
}

// SetDateTimeToTill gets a reference to the given time.Time and assigns it to the DateTimeToTill field.
func (o *AssignmentFiltersModel) SetDateTimeToTill(v time.Time) {
	o.DateTimeToTill = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AssignmentFiltersModel) GetLinks() []map[string]interface{} {
	if o == nil || o.Links == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentFiltersModel) GetLinksOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AssignmentFiltersModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []map[string]interface{} and assigns it to the Links field.
func (o *AssignmentFiltersModel) SetLinks(v []map[string]interface{}) {
	o.Links = &v
}

// GetUpdatedAtSince returns the UpdatedAtSince field value if set, zero value otherwise.
func (o *AssignmentFiltersModel) GetUpdatedAtSince() time.Time {
	if o == nil || o.UpdatedAtSince == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAtSince
}

// GetUpdatedAtSinceOk returns a tuple with the UpdatedAtSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentFiltersModel) GetUpdatedAtSinceOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAtSince == nil {
		return nil, false
	}
	return o.UpdatedAtSince, true
}

// HasUpdatedAtSince returns a boolean if a field has been set.
func (o *AssignmentFiltersModel) HasUpdatedAtSince() bool {
	if o != nil && o.UpdatedAtSince != nil {
		return true
	}

	return false
}

// SetUpdatedAtSince gets a reference to the given time.Time and assigns it to the UpdatedAtSince field.
func (o *AssignmentFiltersModel) SetUpdatedAtSince(v time.Time) {
	o.UpdatedAtSince = &v
}

// GetUpdatedAtTill returns the UpdatedAtTill field value if set, zero value otherwise.
func (o *AssignmentFiltersModel) GetUpdatedAtTill() time.Time {
	if o == nil || o.UpdatedAtTill == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAtTill
}

// GetUpdatedAtTillOk returns a tuple with the UpdatedAtTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentFiltersModel) GetUpdatedAtTillOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAtTill == nil {
		return nil, false
	}
	return o.UpdatedAtTill, true
}

// HasUpdatedAtTill returns a boolean if a field has been set.
func (o *AssignmentFiltersModel) HasUpdatedAtTill() bool {
	if o != nil && o.UpdatedAtTill != nil {
		return true
	}

	return false
}

// SetUpdatedAtTill gets a reference to the given time.Time and assigns it to the UpdatedAtTill field.
func (o *AssignmentFiltersModel) SetUpdatedAtTill(v time.Time) {
	o.UpdatedAtTill = &v
}

func (o AssignmentFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Nr != nil {
		toSerialize["nr"] = o.Nr
	}
	if o.DateTimeFrom != nil {
		toSerialize["date_time_from"] = o.DateTimeFrom
	}
	if o.DateTimeTo != nil {
		toSerialize["date_time_to"] = o.DateTimeTo
	}
	if o.DateTimeFromSince != nil {
		toSerialize["date_time_from_since"] = o.DateTimeFromSince
	}
	if o.DateTimeFromTill != nil {
		toSerialize["date_time_from_till"] = o.DateTimeFromTill
	}
	if o.DateTimeToSince != nil {
		toSerialize["date_time_to_since"] = o.DateTimeToSince
	}
	if o.DateTimeToTill != nil {
		toSerialize["date_time_to_till"] = o.DateTimeToTill
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.UpdatedAtSince != nil {
		toSerialize["updated_at_since"] = o.UpdatedAtSince
	}
	if o.UpdatedAtTill != nil {
		toSerialize["updated_at_till"] = o.UpdatedAtTill
	}
	return json.Marshal(toSerialize)
}

type NullableAssignmentFiltersModel struct {
	value *AssignmentFiltersModel
	isSet bool
}

func (v NullableAssignmentFiltersModel) Get() *AssignmentFiltersModel {
	return v.value
}

func (v *NullableAssignmentFiltersModel) Set(val *AssignmentFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignmentFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignmentFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignmentFiltersModel(val *AssignmentFiltersModel) *NullableAssignmentFiltersModel {
	return &NullableAssignmentFiltersModel{value: val, isSet: true}
}

func (v NullableAssignmentFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignmentFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


