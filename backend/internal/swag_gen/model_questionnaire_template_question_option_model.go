/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QuestionnaireTemplateQuestionOptionModel struct for QuestionnaireTemplateQuestionOptionModel
type QuestionnaireTemplateQuestionOptionModel struct {
	// Unique Identifier
	Id *int64 `json:"id,omitempty"`
	// if active=0: note has been removed and is no longer visible in any bumbal interface
	Active *bool `json:"active,omitempty"`
	// Questionnaire template question id
	QuestionnaireTemplateQuestionId *int64 `json:"questionnaire_template_question_id,omitempty"`
	// Questionnaire template question id as next question when this option is chosen
	FollowupQuestionId *int64 `json:"followup_question_id,omitempty"`
	// 
	Texts *[]QuestionnaireTemplateQuestionOptionTextModel `json:"texts,omitempty"`
}

// NewQuestionnaireTemplateQuestionOptionModel instantiates a new QuestionnaireTemplateQuestionOptionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuestionnaireTemplateQuestionOptionModel() *QuestionnaireTemplateQuestionOptionModel {
	this := QuestionnaireTemplateQuestionOptionModel{}
	return &this
}

// NewQuestionnaireTemplateQuestionOptionModelWithDefaults instantiates a new QuestionnaireTemplateQuestionOptionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuestionnaireTemplateQuestionOptionModelWithDefaults() *QuestionnaireTemplateQuestionOptionModel {
	this := QuestionnaireTemplateQuestionOptionModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *QuestionnaireTemplateQuestionOptionModel) SetId(v int64) {
	o.Id = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionModel) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionModel) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionModel) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *QuestionnaireTemplateQuestionOptionModel) SetActive(v bool) {
	o.Active = &v
}

// GetQuestionnaireTemplateQuestionId returns the QuestionnaireTemplateQuestionId field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionModel) GetQuestionnaireTemplateQuestionId() int64 {
	if o == nil || o.QuestionnaireTemplateQuestionId == nil {
		var ret int64
		return ret
	}
	return *o.QuestionnaireTemplateQuestionId
}

// GetQuestionnaireTemplateQuestionIdOk returns a tuple with the QuestionnaireTemplateQuestionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionModel) GetQuestionnaireTemplateQuestionIdOk() (*int64, bool) {
	if o == nil || o.QuestionnaireTemplateQuestionId == nil {
		return nil, false
	}
	return o.QuestionnaireTemplateQuestionId, true
}

// HasQuestionnaireTemplateQuestionId returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionModel) HasQuestionnaireTemplateQuestionId() bool {
	if o != nil && o.QuestionnaireTemplateQuestionId != nil {
		return true
	}

	return false
}

// SetQuestionnaireTemplateQuestionId gets a reference to the given int64 and assigns it to the QuestionnaireTemplateQuestionId field.
func (o *QuestionnaireTemplateQuestionOptionModel) SetQuestionnaireTemplateQuestionId(v int64) {
	o.QuestionnaireTemplateQuestionId = &v
}

// GetFollowupQuestionId returns the FollowupQuestionId field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionModel) GetFollowupQuestionId() int64 {
	if o == nil || o.FollowupQuestionId == nil {
		var ret int64
		return ret
	}
	return *o.FollowupQuestionId
}

// GetFollowupQuestionIdOk returns a tuple with the FollowupQuestionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionModel) GetFollowupQuestionIdOk() (*int64, bool) {
	if o == nil || o.FollowupQuestionId == nil {
		return nil, false
	}
	return o.FollowupQuestionId, true
}

// HasFollowupQuestionId returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionModel) HasFollowupQuestionId() bool {
	if o != nil && o.FollowupQuestionId != nil {
		return true
	}

	return false
}

// SetFollowupQuestionId gets a reference to the given int64 and assigns it to the FollowupQuestionId field.
func (o *QuestionnaireTemplateQuestionOptionModel) SetFollowupQuestionId(v int64) {
	o.FollowupQuestionId = &v
}

// GetTexts returns the Texts field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionModel) GetTexts() []QuestionnaireTemplateQuestionOptionTextModel {
	if o == nil || o.Texts == nil {
		var ret []QuestionnaireTemplateQuestionOptionTextModel
		return ret
	}
	return *o.Texts
}

// GetTextsOk returns a tuple with the Texts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionModel) GetTextsOk() (*[]QuestionnaireTemplateQuestionOptionTextModel, bool) {
	if o == nil || o.Texts == nil {
		return nil, false
	}
	return o.Texts, true
}

// HasTexts returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionModel) HasTexts() bool {
	if o != nil && o.Texts != nil {
		return true
	}

	return false
}

// SetTexts gets a reference to the given []QuestionnaireTemplateQuestionOptionTextModel and assigns it to the Texts field.
func (o *QuestionnaireTemplateQuestionOptionModel) SetTexts(v []QuestionnaireTemplateQuestionOptionTextModel) {
	o.Texts = &v
}

func (o QuestionnaireTemplateQuestionOptionModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.QuestionnaireTemplateQuestionId != nil {
		toSerialize["questionnaire_template_question_id"] = o.QuestionnaireTemplateQuestionId
	}
	if o.FollowupQuestionId != nil {
		toSerialize["followup_question_id"] = o.FollowupQuestionId
	}
	if o.Texts != nil {
		toSerialize["texts"] = o.Texts
	}
	return json.Marshal(toSerialize)
}

type NullableQuestionnaireTemplateQuestionOptionModel struct {
	value *QuestionnaireTemplateQuestionOptionModel
	isSet bool
}

func (v NullableQuestionnaireTemplateQuestionOptionModel) Get() *QuestionnaireTemplateQuestionOptionModel {
	return v.value
}

func (v *NullableQuestionnaireTemplateQuestionOptionModel) Set(val *QuestionnaireTemplateQuestionOptionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableQuestionnaireTemplateQuestionOptionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableQuestionnaireTemplateQuestionOptionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuestionnaireTemplateQuestionOptionModel(val *QuestionnaireTemplateQuestionOptionModel) *NullableQuestionnaireTemplateQuestionOptionModel {
	return &NullableQuestionnaireTemplateQuestionOptionModel{value: val, isSet: true}
}

func (v NullableQuestionnaireTemplateQuestionOptionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuestionnaireTemplateQuestionOptionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


