/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NotificationOptionsModel struct for NotificationOptionsModel
type NotificationOptionsModel struct {
	// 
	IncludeNotificationFiles *bool `json:"include_notification_files,omitempty"`
	// 
	IncludeUpdatedBy *bool `json:"include_updated_by,omitempty"`
	// 
	IncludeRecordInfo *bool `json:"include_record_info,omitempty"`
	// 
	IncludeObjectTypeName *bool `json:"include_object_type_name,omitempty"`
	// 
	IncludeNotificationCategoryName *bool `json:"include_notification_category_name,omitempty"`
	// 
	IncludeUserNotification *bool `json:"include_user_notification,omitempty"`
}

// NewNotificationOptionsModel instantiates a new NotificationOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationOptionsModel() *NotificationOptionsModel {
	this := NotificationOptionsModel{}
	return &this
}

// NewNotificationOptionsModelWithDefaults instantiates a new NotificationOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationOptionsModelWithDefaults() *NotificationOptionsModel {
	this := NotificationOptionsModel{}
	return &this
}

// GetIncludeNotificationFiles returns the IncludeNotificationFiles field value if set, zero value otherwise.
func (o *NotificationOptionsModel) GetIncludeNotificationFiles() bool {
	if o == nil || o.IncludeNotificationFiles == nil {
		var ret bool
		return ret
	}
	return *o.IncludeNotificationFiles
}

// GetIncludeNotificationFilesOk returns a tuple with the IncludeNotificationFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationOptionsModel) GetIncludeNotificationFilesOk() (*bool, bool) {
	if o == nil || o.IncludeNotificationFiles == nil {
		return nil, false
	}
	return o.IncludeNotificationFiles, true
}

// HasIncludeNotificationFiles returns a boolean if a field has been set.
func (o *NotificationOptionsModel) HasIncludeNotificationFiles() bool {
	if o != nil && o.IncludeNotificationFiles != nil {
		return true
	}

	return false
}

// SetIncludeNotificationFiles gets a reference to the given bool and assigns it to the IncludeNotificationFiles field.
func (o *NotificationOptionsModel) SetIncludeNotificationFiles(v bool) {
	o.IncludeNotificationFiles = &v
}

// GetIncludeUpdatedBy returns the IncludeUpdatedBy field value if set, zero value otherwise.
func (o *NotificationOptionsModel) GetIncludeUpdatedBy() bool {
	if o == nil || o.IncludeUpdatedBy == nil {
		var ret bool
		return ret
	}
	return *o.IncludeUpdatedBy
}

// GetIncludeUpdatedByOk returns a tuple with the IncludeUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationOptionsModel) GetIncludeUpdatedByOk() (*bool, bool) {
	if o == nil || o.IncludeUpdatedBy == nil {
		return nil, false
	}
	return o.IncludeUpdatedBy, true
}

// HasIncludeUpdatedBy returns a boolean if a field has been set.
func (o *NotificationOptionsModel) HasIncludeUpdatedBy() bool {
	if o != nil && o.IncludeUpdatedBy != nil {
		return true
	}

	return false
}

// SetIncludeUpdatedBy gets a reference to the given bool and assigns it to the IncludeUpdatedBy field.
func (o *NotificationOptionsModel) SetIncludeUpdatedBy(v bool) {
	o.IncludeUpdatedBy = &v
}

// GetIncludeRecordInfo returns the IncludeRecordInfo field value if set, zero value otherwise.
func (o *NotificationOptionsModel) GetIncludeRecordInfo() bool {
	if o == nil || o.IncludeRecordInfo == nil {
		var ret bool
		return ret
	}
	return *o.IncludeRecordInfo
}

// GetIncludeRecordInfoOk returns a tuple with the IncludeRecordInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationOptionsModel) GetIncludeRecordInfoOk() (*bool, bool) {
	if o == nil || o.IncludeRecordInfo == nil {
		return nil, false
	}
	return o.IncludeRecordInfo, true
}

// HasIncludeRecordInfo returns a boolean if a field has been set.
func (o *NotificationOptionsModel) HasIncludeRecordInfo() bool {
	if o != nil && o.IncludeRecordInfo != nil {
		return true
	}

	return false
}

// SetIncludeRecordInfo gets a reference to the given bool and assigns it to the IncludeRecordInfo field.
func (o *NotificationOptionsModel) SetIncludeRecordInfo(v bool) {
	o.IncludeRecordInfo = &v
}

// GetIncludeObjectTypeName returns the IncludeObjectTypeName field value if set, zero value otherwise.
func (o *NotificationOptionsModel) GetIncludeObjectTypeName() bool {
	if o == nil || o.IncludeObjectTypeName == nil {
		var ret bool
		return ret
	}
	return *o.IncludeObjectTypeName
}

// GetIncludeObjectTypeNameOk returns a tuple with the IncludeObjectTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationOptionsModel) GetIncludeObjectTypeNameOk() (*bool, bool) {
	if o == nil || o.IncludeObjectTypeName == nil {
		return nil, false
	}
	return o.IncludeObjectTypeName, true
}

// HasIncludeObjectTypeName returns a boolean if a field has been set.
func (o *NotificationOptionsModel) HasIncludeObjectTypeName() bool {
	if o != nil && o.IncludeObjectTypeName != nil {
		return true
	}

	return false
}

// SetIncludeObjectTypeName gets a reference to the given bool and assigns it to the IncludeObjectTypeName field.
func (o *NotificationOptionsModel) SetIncludeObjectTypeName(v bool) {
	o.IncludeObjectTypeName = &v
}

// GetIncludeNotificationCategoryName returns the IncludeNotificationCategoryName field value if set, zero value otherwise.
func (o *NotificationOptionsModel) GetIncludeNotificationCategoryName() bool {
	if o == nil || o.IncludeNotificationCategoryName == nil {
		var ret bool
		return ret
	}
	return *o.IncludeNotificationCategoryName
}

// GetIncludeNotificationCategoryNameOk returns a tuple with the IncludeNotificationCategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationOptionsModel) GetIncludeNotificationCategoryNameOk() (*bool, bool) {
	if o == nil || o.IncludeNotificationCategoryName == nil {
		return nil, false
	}
	return o.IncludeNotificationCategoryName, true
}

// HasIncludeNotificationCategoryName returns a boolean if a field has been set.
func (o *NotificationOptionsModel) HasIncludeNotificationCategoryName() bool {
	if o != nil && o.IncludeNotificationCategoryName != nil {
		return true
	}

	return false
}

// SetIncludeNotificationCategoryName gets a reference to the given bool and assigns it to the IncludeNotificationCategoryName field.
func (o *NotificationOptionsModel) SetIncludeNotificationCategoryName(v bool) {
	o.IncludeNotificationCategoryName = &v
}

// GetIncludeUserNotification returns the IncludeUserNotification field value if set, zero value otherwise.
func (o *NotificationOptionsModel) GetIncludeUserNotification() bool {
	if o == nil || o.IncludeUserNotification == nil {
		var ret bool
		return ret
	}
	return *o.IncludeUserNotification
}

// GetIncludeUserNotificationOk returns a tuple with the IncludeUserNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationOptionsModel) GetIncludeUserNotificationOk() (*bool, bool) {
	if o == nil || o.IncludeUserNotification == nil {
		return nil, false
	}
	return o.IncludeUserNotification, true
}

// HasIncludeUserNotification returns a boolean if a field has been set.
func (o *NotificationOptionsModel) HasIncludeUserNotification() bool {
	if o != nil && o.IncludeUserNotification != nil {
		return true
	}

	return false
}

// SetIncludeUserNotification gets a reference to the given bool and assigns it to the IncludeUserNotification field.
func (o *NotificationOptionsModel) SetIncludeUserNotification(v bool) {
	o.IncludeUserNotification = &v
}

func (o NotificationOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeNotificationFiles != nil {
		toSerialize["include_notification_files"] = o.IncludeNotificationFiles
	}
	if o.IncludeUpdatedBy != nil {
		toSerialize["include_updated_by"] = o.IncludeUpdatedBy
	}
	if o.IncludeRecordInfo != nil {
		toSerialize["include_record_info"] = o.IncludeRecordInfo
	}
	if o.IncludeObjectTypeName != nil {
		toSerialize["include_object_type_name"] = o.IncludeObjectTypeName
	}
	if o.IncludeNotificationCategoryName != nil {
		toSerialize["include_notification_category_name"] = o.IncludeNotificationCategoryName
	}
	if o.IncludeUserNotification != nil {
		toSerialize["include_user_notification"] = o.IncludeUserNotification
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationOptionsModel struct {
	value *NotificationOptionsModel
	isSet bool
}

func (v NullableNotificationOptionsModel) Get() *NotificationOptionsModel {
	return v.value
}

func (v *NullableNotificationOptionsModel) Set(val *NotificationOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationOptionsModel(val *NotificationOptionsModel) *NullableNotificationOptionsModel {
	return &NullableNotificationOptionsModel{value: val, isSet: true}
}

func (v NullableNotificationOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


