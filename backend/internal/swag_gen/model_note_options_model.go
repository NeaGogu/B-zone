/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NoteOptionsModel struct for NoteOptionsModel
type NoteOptionsModel struct {
	// 
	IncludeNoteTags *bool `json:"include_note_tags,omitempty"`
	// 
	IncludeNoteTagTypeLinkIds *bool `json:"include_note_tag_type_link_ids,omitempty"`
	// 
	IncludeNoteObjectLinkIds *bool `json:"include_note_object_link_ids,omitempty"`
	// 
	IncludeNoteFiles *bool `json:"include_note_files,omitempty"`
	// 
	IncludeUpdatedBy *bool `json:"include_updated_by,omitempty"`
	// 
	IncludeRecordInfo *bool `json:"include_record_info,omitempty"`
}

// NewNoteOptionsModel instantiates a new NoteOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNoteOptionsModel() *NoteOptionsModel {
	this := NoteOptionsModel{}
	return &this
}

// NewNoteOptionsModelWithDefaults instantiates a new NoteOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNoteOptionsModelWithDefaults() *NoteOptionsModel {
	this := NoteOptionsModel{}
	return &this
}

// GetIncludeNoteTags returns the IncludeNoteTags field value if set, zero value otherwise.
func (o *NoteOptionsModel) GetIncludeNoteTags() bool {
	if o == nil || o.IncludeNoteTags == nil {
		var ret bool
		return ret
	}
	return *o.IncludeNoteTags
}

// GetIncludeNoteTagsOk returns a tuple with the IncludeNoteTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteOptionsModel) GetIncludeNoteTagsOk() (*bool, bool) {
	if o == nil || o.IncludeNoteTags == nil {
		return nil, false
	}
	return o.IncludeNoteTags, true
}

// HasIncludeNoteTags returns a boolean if a field has been set.
func (o *NoteOptionsModel) HasIncludeNoteTags() bool {
	if o != nil && o.IncludeNoteTags != nil {
		return true
	}

	return false
}

// SetIncludeNoteTags gets a reference to the given bool and assigns it to the IncludeNoteTags field.
func (o *NoteOptionsModel) SetIncludeNoteTags(v bool) {
	o.IncludeNoteTags = &v
}

// GetIncludeNoteTagTypeLinkIds returns the IncludeNoteTagTypeLinkIds field value if set, zero value otherwise.
func (o *NoteOptionsModel) GetIncludeNoteTagTypeLinkIds() bool {
	if o == nil || o.IncludeNoteTagTypeLinkIds == nil {
		var ret bool
		return ret
	}
	return *o.IncludeNoteTagTypeLinkIds
}

// GetIncludeNoteTagTypeLinkIdsOk returns a tuple with the IncludeNoteTagTypeLinkIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteOptionsModel) GetIncludeNoteTagTypeLinkIdsOk() (*bool, bool) {
	if o == nil || o.IncludeNoteTagTypeLinkIds == nil {
		return nil, false
	}
	return o.IncludeNoteTagTypeLinkIds, true
}

// HasIncludeNoteTagTypeLinkIds returns a boolean if a field has been set.
func (o *NoteOptionsModel) HasIncludeNoteTagTypeLinkIds() bool {
	if o != nil && o.IncludeNoteTagTypeLinkIds != nil {
		return true
	}

	return false
}

// SetIncludeNoteTagTypeLinkIds gets a reference to the given bool and assigns it to the IncludeNoteTagTypeLinkIds field.
func (o *NoteOptionsModel) SetIncludeNoteTagTypeLinkIds(v bool) {
	o.IncludeNoteTagTypeLinkIds = &v
}

// GetIncludeNoteObjectLinkIds returns the IncludeNoteObjectLinkIds field value if set, zero value otherwise.
func (o *NoteOptionsModel) GetIncludeNoteObjectLinkIds() bool {
	if o == nil || o.IncludeNoteObjectLinkIds == nil {
		var ret bool
		return ret
	}
	return *o.IncludeNoteObjectLinkIds
}

// GetIncludeNoteObjectLinkIdsOk returns a tuple with the IncludeNoteObjectLinkIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteOptionsModel) GetIncludeNoteObjectLinkIdsOk() (*bool, bool) {
	if o == nil || o.IncludeNoteObjectLinkIds == nil {
		return nil, false
	}
	return o.IncludeNoteObjectLinkIds, true
}

// HasIncludeNoteObjectLinkIds returns a boolean if a field has been set.
func (o *NoteOptionsModel) HasIncludeNoteObjectLinkIds() bool {
	if o != nil && o.IncludeNoteObjectLinkIds != nil {
		return true
	}

	return false
}

// SetIncludeNoteObjectLinkIds gets a reference to the given bool and assigns it to the IncludeNoteObjectLinkIds field.
func (o *NoteOptionsModel) SetIncludeNoteObjectLinkIds(v bool) {
	o.IncludeNoteObjectLinkIds = &v
}

// GetIncludeNoteFiles returns the IncludeNoteFiles field value if set, zero value otherwise.
func (o *NoteOptionsModel) GetIncludeNoteFiles() bool {
	if o == nil || o.IncludeNoteFiles == nil {
		var ret bool
		return ret
	}
	return *o.IncludeNoteFiles
}

// GetIncludeNoteFilesOk returns a tuple with the IncludeNoteFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteOptionsModel) GetIncludeNoteFilesOk() (*bool, bool) {
	if o == nil || o.IncludeNoteFiles == nil {
		return nil, false
	}
	return o.IncludeNoteFiles, true
}

// HasIncludeNoteFiles returns a boolean if a field has been set.
func (o *NoteOptionsModel) HasIncludeNoteFiles() bool {
	if o != nil && o.IncludeNoteFiles != nil {
		return true
	}

	return false
}

// SetIncludeNoteFiles gets a reference to the given bool and assigns it to the IncludeNoteFiles field.
func (o *NoteOptionsModel) SetIncludeNoteFiles(v bool) {
	o.IncludeNoteFiles = &v
}

// GetIncludeUpdatedBy returns the IncludeUpdatedBy field value if set, zero value otherwise.
func (o *NoteOptionsModel) GetIncludeUpdatedBy() bool {
	if o == nil || o.IncludeUpdatedBy == nil {
		var ret bool
		return ret
	}
	return *o.IncludeUpdatedBy
}

// GetIncludeUpdatedByOk returns a tuple with the IncludeUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteOptionsModel) GetIncludeUpdatedByOk() (*bool, bool) {
	if o == nil || o.IncludeUpdatedBy == nil {
		return nil, false
	}
	return o.IncludeUpdatedBy, true
}

// HasIncludeUpdatedBy returns a boolean if a field has been set.
func (o *NoteOptionsModel) HasIncludeUpdatedBy() bool {
	if o != nil && o.IncludeUpdatedBy != nil {
		return true
	}

	return false
}

// SetIncludeUpdatedBy gets a reference to the given bool and assigns it to the IncludeUpdatedBy field.
func (o *NoteOptionsModel) SetIncludeUpdatedBy(v bool) {
	o.IncludeUpdatedBy = &v
}

// GetIncludeRecordInfo returns the IncludeRecordInfo field value if set, zero value otherwise.
func (o *NoteOptionsModel) GetIncludeRecordInfo() bool {
	if o == nil || o.IncludeRecordInfo == nil {
		var ret bool
		return ret
	}
	return *o.IncludeRecordInfo
}

// GetIncludeRecordInfoOk returns a tuple with the IncludeRecordInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteOptionsModel) GetIncludeRecordInfoOk() (*bool, bool) {
	if o == nil || o.IncludeRecordInfo == nil {
		return nil, false
	}
	return o.IncludeRecordInfo, true
}

// HasIncludeRecordInfo returns a boolean if a field has been set.
func (o *NoteOptionsModel) HasIncludeRecordInfo() bool {
	if o != nil && o.IncludeRecordInfo != nil {
		return true
	}

	return false
}

// SetIncludeRecordInfo gets a reference to the given bool and assigns it to the IncludeRecordInfo field.
func (o *NoteOptionsModel) SetIncludeRecordInfo(v bool) {
	o.IncludeRecordInfo = &v
}

func (o NoteOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeNoteTags != nil {
		toSerialize["include_note_tags"] = o.IncludeNoteTags
	}
	if o.IncludeNoteTagTypeLinkIds != nil {
		toSerialize["include_note_tag_type_link_ids"] = o.IncludeNoteTagTypeLinkIds
	}
	if o.IncludeNoteObjectLinkIds != nil {
		toSerialize["include_note_object_link_ids"] = o.IncludeNoteObjectLinkIds
	}
	if o.IncludeNoteFiles != nil {
		toSerialize["include_note_files"] = o.IncludeNoteFiles
	}
	if o.IncludeUpdatedBy != nil {
		toSerialize["include_updated_by"] = o.IncludeUpdatedBy
	}
	if o.IncludeRecordInfo != nil {
		toSerialize["include_record_info"] = o.IncludeRecordInfo
	}
	return json.Marshal(toSerialize)
}

type NullableNoteOptionsModel struct {
	value *NoteOptionsModel
	isSet bool
}

func (v NullableNoteOptionsModel) Get() *NoteOptionsModel {
	return v.value
}

func (v *NullableNoteOptionsModel) Set(val *NoteOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableNoteOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableNoteOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNoteOptionsModel(val *NoteOptionsModel) *NullableNoteOptionsModel {
	return &NullableNoteOptionsModel{value: val, isSet: true}
}

func (v NullableNoteOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNoteOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


