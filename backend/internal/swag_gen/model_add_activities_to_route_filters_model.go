/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddActivitiesToRouteFiltersModel struct for AddActivitiesToRouteFiltersModel
type AddActivitiesToRouteFiltersModel struct {
	Activity *ActivityFiltersModel `json:"activity,omitempty"`
}

// NewAddActivitiesToRouteFiltersModel instantiates a new AddActivitiesToRouteFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddActivitiesToRouteFiltersModel() *AddActivitiesToRouteFiltersModel {
	this := AddActivitiesToRouteFiltersModel{}
	return &this
}

// NewAddActivitiesToRouteFiltersModelWithDefaults instantiates a new AddActivitiesToRouteFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddActivitiesToRouteFiltersModelWithDefaults() *AddActivitiesToRouteFiltersModel {
	this := AddActivitiesToRouteFiltersModel{}
	return &this
}

// GetActivity returns the Activity field value if set, zero value otherwise.
func (o *AddActivitiesToRouteFiltersModel) GetActivity() ActivityFiltersModel {
	if o == nil || o.Activity == nil {
		var ret ActivityFiltersModel
		return ret
	}
	return *o.Activity
}

// GetActivityOk returns a tuple with the Activity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddActivitiesToRouteFiltersModel) GetActivityOk() (*ActivityFiltersModel, bool) {
	if o == nil || o.Activity == nil {
		return nil, false
	}
	return o.Activity, true
}

// HasActivity returns a boolean if a field has been set.
func (o *AddActivitiesToRouteFiltersModel) HasActivity() bool {
	if o != nil && o.Activity != nil {
		return true
	}

	return false
}

// SetActivity gets a reference to the given ActivityFiltersModel and assigns it to the Activity field.
func (o *AddActivitiesToRouteFiltersModel) SetActivity(v ActivityFiltersModel) {
	o.Activity = &v
}

func (o AddActivitiesToRouteFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Activity != nil {
		toSerialize["activity"] = o.Activity
	}
	return json.Marshal(toSerialize)
}

type NullableAddActivitiesToRouteFiltersModel struct {
	value *AddActivitiesToRouteFiltersModel
	isSet bool
}

func (v NullableAddActivitiesToRouteFiltersModel) Get() *AddActivitiesToRouteFiltersModel {
	return v.value
}

func (v *NullableAddActivitiesToRouteFiltersModel) Set(val *AddActivitiesToRouteFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddActivitiesToRouteFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddActivitiesToRouteFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddActivitiesToRouteFiltersModel(val *AddActivitiesToRouteFiltersModel) *NullableAddActivitiesToRouteFiltersModel {
	return &NullableAddActivitiesToRouteFiltersModel{value: val, isSet: true}
}

func (v NullableAddActivitiesToRouteFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddActivitiesToRouteFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


