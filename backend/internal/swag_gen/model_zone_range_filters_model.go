/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ZoneRangeFiltersModel struct for ZoneRangeFiltersModel
type ZoneRangeFiltersModel struct {
	// 
	IsoCountry *string `json:"iso_country,omitempty"`
}

// NewZoneRangeFiltersModel instantiates a new ZoneRangeFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneRangeFiltersModel() *ZoneRangeFiltersModel {
	this := ZoneRangeFiltersModel{}
	return &this
}

// NewZoneRangeFiltersModelWithDefaults instantiates a new ZoneRangeFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneRangeFiltersModelWithDefaults() *ZoneRangeFiltersModel {
	this := ZoneRangeFiltersModel{}
	return &this
}

// GetIsoCountry returns the IsoCountry field value if set, zero value otherwise.
func (o *ZoneRangeFiltersModel) GetIsoCountry() string {
	if o == nil || o.IsoCountry == nil {
		var ret string
		return ret
	}
	return *o.IsoCountry
}

// GetIsoCountryOk returns a tuple with the IsoCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneRangeFiltersModel) GetIsoCountryOk() (*string, bool) {
	if o == nil || o.IsoCountry == nil {
		return nil, false
	}
	return o.IsoCountry, true
}

// HasIsoCountry returns a boolean if a field has been set.
func (o *ZoneRangeFiltersModel) HasIsoCountry() bool {
	if o != nil && o.IsoCountry != nil {
		return true
	}

	return false
}

// SetIsoCountry gets a reference to the given string and assigns it to the IsoCountry field.
func (o *ZoneRangeFiltersModel) SetIsoCountry(v string) {
	o.IsoCountry = &v
}

func (o ZoneRangeFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsoCountry != nil {
		toSerialize["iso_country"] = o.IsoCountry
	}
	return json.Marshal(toSerialize)
}

type NullableZoneRangeFiltersModel struct {
	value *ZoneRangeFiltersModel
	isSet bool
}

func (v NullableZoneRangeFiltersModel) Get() *ZoneRangeFiltersModel {
	return v.value
}

func (v *NullableZoneRangeFiltersModel) Set(val *ZoneRangeFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneRangeFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneRangeFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneRangeFiltersModel(val *ZoneRangeFiltersModel) *NullableZoneRangeFiltersModel {
	return &NullableZoneRangeFiltersModel{value: val, isSet: true}
}

func (v NullableZoneRangeFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneRangeFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


