/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// RouteEtaModel struct for RouteEtaModel
type RouteEtaModel struct {
	// 
	ActivitiesEta *[]ActivityEtaModel `json:"activities_eta,omitempty"`
	// Unique ID of Route
	Id *int64 `json:"id,omitempty"`
	// Non-Unique number of Route
	Nr *string `json:"nr,omitempty"`
	// Description
	Name *string `json:"name,omitempty"`
	// Route Status
	StatusName *string `json:"status_name,omitempty"`
	// Status ID of Route, 29:route_cancelled, 1:route_planned, 2:route_in_progress, 8:route_executed
	StatusId *int64 `json:"status_id,omitempty"`
	// number of stops on this route (excluding start_route and end_route activities)
	NrOfStops *int32 `json:"nr_of_stops,omitempty"`
	// id of pause scheme to apply
	PauseId *int32 `json:"pause_id,omitempty"`
	Pause *PauseModel `json:"pause,omitempty"`
	// id of executing driver
	DriverId *int32 `json:"driver_id,omitempty"`
	DriverLink *LinkModel `json:"driver_link,omitempty"`
	// 
	DriverLinks *[]LinkModel `json:"driver_links,omitempty"`
	Driver *UsersModel `json:"driver,omitempty"`
	// 
	UserLink *[]LinkModel `json:"user_link,omitempty"`
	// Unique Identifier(s) for co-drivers on route
	CoDriverIds *[]int32 `json:"co_driver_ids,omitempty"`
	// list of co-drivers on route
	CoDrivers *[]UsersModel `json:"co_drivers,omitempty"`
	// 
	CarId *int32 `json:"car_id,omitempty"`
	// Bumbal internal id for vehicle associated with this route
	VehicleId *int32 `json:"vehicle_id,omitempty"`
	// link object to identify a vehicle uniquely by an external id and provider name
	VehicleLink *[]LinkModel `json:"vehicle_link,omitempty"`
	Vehicle *VehicleModel `json:"vehicle,omitempty"`
	// 
	CarLink *[]LinkModel `json:"car_link,omitempty"`
	Car *VehicleModel `json:"car,omitempty"`
	// 
	TrailerId *int32 `json:"trailer_id,omitempty"`
	// 
	TrailerLink *[]LinkModel `json:"trailer_link,omitempty"`
	Trailer *TrailerModel `json:"trailer,omitempty"`
	// 
	Equipment *[]EquipmentModel `json:"equipment,omitempty"`
	// Unique Identifier(s) for equipment on route
	EquipmentIds *[]int32 `json:"equipment_ids,omitempty"`
	// Duration for start activity
	PlannedStartDuration *int32 `json:"planned_start_duration,omitempty"`
	// Duration for end activity
	PlannedEndDuration *int32 `json:"planned_end_duration,omitempty"`
	// Max Speed in km/h
	MaxSpeed *int64 `json:"max_speed,omitempty"`
	// Speed Factor
	SpeedFactor *float64 `json:"speed_factor,omitempty"`
	// Duration Factor
	DurationFactor *float64 `json:"duration_factor,omitempty"`
	// Cost per meter
	CostPerMeter *float64 `json:"cost_per_meter,omitempty"`
	// Cost per route
	CostPerRoute *float64 `json:"cost_per_route,omitempty"`
	// Cost per driving minute
	CostPerDrivingMinute *float64 `json:"cost_per_driving_minute,omitempty"`
	// Cost per waiting minute
	CostPerWaitingMinute *float64 `json:"cost_per_waiting_minute,omitempty"`
	// Cost per service minute
	CostPerServiceMinute *float64 `json:"cost_per_service_minute,omitempty"`
	// Write only!
	EarliestDate *string `json:"earliest_date,omitempty"`
	// Write only!
	LatestDate *string `json:"latest_date,omitempty"`
	// 
	EarliestDateTime *time.Time `json:"earliest_date_time,omitempty"`
	// 
	LatestDateTime *time.Time `json:"latest_date_time,omitempty"`
	// planned date-time from
	PlannedDateTimeFrom *time.Time `json:"planned_date_time_from,omitempty"`
	// planned date-time to
	PlannedDateTimeTo *time.Time `json:"planned_date_time_to,omitempty"`
	// executed date-time from
	ExecutedDateTimeFrom *time.Time `json:"executed_date_time_from,omitempty"`
	// executed date-time to
	ExecutedDateTimeTo *time.Time `json:"executed_date_time_to,omitempty"`
	// Planned driving distance of this route in meters
	PlannedDrivingDistance *int32 `json:"planned_driving_distance,omitempty"`
	// Planned driving duration of this route in minutes
	PlannedDrivingDuration *int32 `json:"planned_driving_duration,omitempty"`
	// Planned waiting duration of this route in minutes
	PlannedWaitingDuration *int32 `json:"planned_waiting_duration,omitempty"`
	// Planned duration for all activities in this route in minutes
	PlannedActivityDuration *int32 `json:"planned_activity_duration,omitempty"`
	// Total planned duration of this route in minutes
	PlannedTotalDuration *int32 `json:"planned_total_duration,omitempty"`
	// 
	GpsLocations *[]GPSLocationModel `json:"gps_locations,omitempty"`
	LatestKnownPosition *GPSLocationModel `json:"latest_known_position,omitempty"`
	// id of recurrence where route belongs to
	RecurrenceId *int32 `json:"recurrence_id,omitempty"`
	// nr within recurrence where route belongs to
	RecurrenceNr *int32 `json:"recurrence_nr,omitempty"`
	Recurrence *RecurrenceModel `json:"recurrence,omitempty"`
	// whether any activity on route is overdue
	Overdue *bool `json:"overdue,omitempty"`
	// Activity optimized status within route.
	Optimized *bool `json:"optimized,omitempty"`
	// a blocked route can not be auto-filled by customer calendars
	Blocked *bool `json:"blocked,omitempty"`
	// if active=0: route has been removed and is no longer visible in any bumbal interface
	Active *bool `json:"active,omitempty"`
	StartAddress *AddressModel `json:"start_address,omitempty"`
	EndAddress *AddressModel `json:"end_address,omitempty"`
	// 
	PlannedCapacities *map[string]interface{} `json:"planned_capacities,omitempty"`
	AppliedCapacities *AppliedCapacitiesModel `json:"applied_capacities,omitempty"`
	// 
	Capacities *[]CapacityModel `json:"capacities,omitempty"`
	// activity ids on route in order of execution
	ActivityIds *[]int32 `json:"activity_ids,omitempty"`
	// 
	Links *[]LinkModel `json:"links,omitempty"`
	// 
	MetaData *[]MetaDataModel `json:"meta_data,omitempty"`
	// 
	Notes *[]NoteModel `json:"notes,omitempty"`
	// 
	Files *[]FileModel `json:"files,omitempty"`
	// created_at date time
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// updated_at date time
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// 
	Tags *[]TagModel `json:"tags,omitempty"`
	// Tag names
	TagNames *[]string `json:"tag_names,omitempty"`
	// 
	Zones *[]ZoneModel `json:"zones,omitempty"`
	// Zone names
	ZoneNames *[]string `json:"zone_names,omitempty"`
}

// NewRouteEtaModel instantiates a new RouteEtaModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteEtaModel() *RouteEtaModel {
	this := RouteEtaModel{}
	return &this
}

// NewRouteEtaModelWithDefaults instantiates a new RouteEtaModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteEtaModelWithDefaults() *RouteEtaModel {
	this := RouteEtaModel{}
	return &this
}

// GetActivitiesEta returns the ActivitiesEta field value if set, zero value otherwise.
func (o *RouteEtaModel) GetActivitiesEta() []ActivityEtaModel {
	if o == nil || o.ActivitiesEta == nil {
		var ret []ActivityEtaModel
		return ret
	}
	return *o.ActivitiesEta
}

// GetActivitiesEtaOk returns a tuple with the ActivitiesEta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetActivitiesEtaOk() (*[]ActivityEtaModel, bool) {
	if o == nil || o.ActivitiesEta == nil {
		return nil, false
	}
	return o.ActivitiesEta, true
}

// HasActivitiesEta returns a boolean if a field has been set.
func (o *RouteEtaModel) HasActivitiesEta() bool {
	if o != nil && o.ActivitiesEta != nil {
		return true
	}

	return false
}

// SetActivitiesEta gets a reference to the given []ActivityEtaModel and assigns it to the ActivitiesEta field.
func (o *RouteEtaModel) SetActivitiesEta(v []ActivityEtaModel) {
	o.ActivitiesEta = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RouteEtaModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RouteEtaModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *RouteEtaModel) SetId(v int64) {
	o.Id = &v
}

// GetNr returns the Nr field value if set, zero value otherwise.
func (o *RouteEtaModel) GetNr() string {
	if o == nil || o.Nr == nil {
		var ret string
		return ret
	}
	return *o.Nr
}

// GetNrOk returns a tuple with the Nr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetNrOk() (*string, bool) {
	if o == nil || o.Nr == nil {
		return nil, false
	}
	return o.Nr, true
}

// HasNr returns a boolean if a field has been set.
func (o *RouteEtaModel) HasNr() bool {
	if o != nil && o.Nr != nil {
		return true
	}

	return false
}

// SetNr gets a reference to the given string and assigns it to the Nr field.
func (o *RouteEtaModel) SetNr(v string) {
	o.Nr = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RouteEtaModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RouteEtaModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RouteEtaModel) SetName(v string) {
	o.Name = &v
}

// GetStatusName returns the StatusName field value if set, zero value otherwise.
func (o *RouteEtaModel) GetStatusName() string {
	if o == nil || o.StatusName == nil {
		var ret string
		return ret
	}
	return *o.StatusName
}

// GetStatusNameOk returns a tuple with the StatusName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetStatusNameOk() (*string, bool) {
	if o == nil || o.StatusName == nil {
		return nil, false
	}
	return o.StatusName, true
}

// HasStatusName returns a boolean if a field has been set.
func (o *RouteEtaModel) HasStatusName() bool {
	if o != nil && o.StatusName != nil {
		return true
	}

	return false
}

// SetStatusName gets a reference to the given string and assigns it to the StatusName field.
func (o *RouteEtaModel) SetStatusName(v string) {
	o.StatusName = &v
}

// GetStatusId returns the StatusId field value if set, zero value otherwise.
func (o *RouteEtaModel) GetStatusId() int64 {
	if o == nil || o.StatusId == nil {
		var ret int64
		return ret
	}
	return *o.StatusId
}

// GetStatusIdOk returns a tuple with the StatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetStatusIdOk() (*int64, bool) {
	if o == nil || o.StatusId == nil {
		return nil, false
	}
	return o.StatusId, true
}

// HasStatusId returns a boolean if a field has been set.
func (o *RouteEtaModel) HasStatusId() bool {
	if o != nil && o.StatusId != nil {
		return true
	}

	return false
}

// SetStatusId gets a reference to the given int64 and assigns it to the StatusId field.
func (o *RouteEtaModel) SetStatusId(v int64) {
	o.StatusId = &v
}

// GetNrOfStops returns the NrOfStops field value if set, zero value otherwise.
func (o *RouteEtaModel) GetNrOfStops() int32 {
	if o == nil || o.NrOfStops == nil {
		var ret int32
		return ret
	}
	return *o.NrOfStops
}

// GetNrOfStopsOk returns a tuple with the NrOfStops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetNrOfStopsOk() (*int32, bool) {
	if o == nil || o.NrOfStops == nil {
		return nil, false
	}
	return o.NrOfStops, true
}

// HasNrOfStops returns a boolean if a field has been set.
func (o *RouteEtaModel) HasNrOfStops() bool {
	if o != nil && o.NrOfStops != nil {
		return true
	}

	return false
}

// SetNrOfStops gets a reference to the given int32 and assigns it to the NrOfStops field.
func (o *RouteEtaModel) SetNrOfStops(v int32) {
	o.NrOfStops = &v
}

// GetPauseId returns the PauseId field value if set, zero value otherwise.
func (o *RouteEtaModel) GetPauseId() int32 {
	if o == nil || o.PauseId == nil {
		var ret int32
		return ret
	}
	return *o.PauseId
}

// GetPauseIdOk returns a tuple with the PauseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetPauseIdOk() (*int32, bool) {
	if o == nil || o.PauseId == nil {
		return nil, false
	}
	return o.PauseId, true
}

// HasPauseId returns a boolean if a field has been set.
func (o *RouteEtaModel) HasPauseId() bool {
	if o != nil && o.PauseId != nil {
		return true
	}

	return false
}

// SetPauseId gets a reference to the given int32 and assigns it to the PauseId field.
func (o *RouteEtaModel) SetPauseId(v int32) {
	o.PauseId = &v
}

// GetPause returns the Pause field value if set, zero value otherwise.
func (o *RouteEtaModel) GetPause() PauseModel {
	if o == nil || o.Pause == nil {
		var ret PauseModel
		return ret
	}
	return *o.Pause
}

// GetPauseOk returns a tuple with the Pause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetPauseOk() (*PauseModel, bool) {
	if o == nil || o.Pause == nil {
		return nil, false
	}
	return o.Pause, true
}

// HasPause returns a boolean if a field has been set.
func (o *RouteEtaModel) HasPause() bool {
	if o != nil && o.Pause != nil {
		return true
	}

	return false
}

// SetPause gets a reference to the given PauseModel and assigns it to the Pause field.
func (o *RouteEtaModel) SetPause(v PauseModel) {
	o.Pause = &v
}

// GetDriverId returns the DriverId field value if set, zero value otherwise.
func (o *RouteEtaModel) GetDriverId() int32 {
	if o == nil || o.DriverId == nil {
		var ret int32
		return ret
	}
	return *o.DriverId
}

// GetDriverIdOk returns a tuple with the DriverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetDriverIdOk() (*int32, bool) {
	if o == nil || o.DriverId == nil {
		return nil, false
	}
	return o.DriverId, true
}

// HasDriverId returns a boolean if a field has been set.
func (o *RouteEtaModel) HasDriverId() bool {
	if o != nil && o.DriverId != nil {
		return true
	}

	return false
}

// SetDriverId gets a reference to the given int32 and assigns it to the DriverId field.
func (o *RouteEtaModel) SetDriverId(v int32) {
	o.DriverId = &v
}

// GetDriverLink returns the DriverLink field value if set, zero value otherwise.
func (o *RouteEtaModel) GetDriverLink() LinkModel {
	if o == nil || o.DriverLink == nil {
		var ret LinkModel
		return ret
	}
	return *o.DriverLink
}

// GetDriverLinkOk returns a tuple with the DriverLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetDriverLinkOk() (*LinkModel, bool) {
	if o == nil || o.DriverLink == nil {
		return nil, false
	}
	return o.DriverLink, true
}

// HasDriverLink returns a boolean if a field has been set.
func (o *RouteEtaModel) HasDriverLink() bool {
	if o != nil && o.DriverLink != nil {
		return true
	}

	return false
}

// SetDriverLink gets a reference to the given LinkModel and assigns it to the DriverLink field.
func (o *RouteEtaModel) SetDriverLink(v LinkModel) {
	o.DriverLink = &v
}

// GetDriverLinks returns the DriverLinks field value if set, zero value otherwise.
func (o *RouteEtaModel) GetDriverLinks() []LinkModel {
	if o == nil || o.DriverLinks == nil {
		var ret []LinkModel
		return ret
	}
	return *o.DriverLinks
}

// GetDriverLinksOk returns a tuple with the DriverLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetDriverLinksOk() (*[]LinkModel, bool) {
	if o == nil || o.DriverLinks == nil {
		return nil, false
	}
	return o.DriverLinks, true
}

// HasDriverLinks returns a boolean if a field has been set.
func (o *RouteEtaModel) HasDriverLinks() bool {
	if o != nil && o.DriverLinks != nil {
		return true
	}

	return false
}

// SetDriverLinks gets a reference to the given []LinkModel and assigns it to the DriverLinks field.
func (o *RouteEtaModel) SetDriverLinks(v []LinkModel) {
	o.DriverLinks = &v
}

// GetDriver returns the Driver field value if set, zero value otherwise.
func (o *RouteEtaModel) GetDriver() UsersModel {
	if o == nil || o.Driver == nil {
		var ret UsersModel
		return ret
	}
	return *o.Driver
}

// GetDriverOk returns a tuple with the Driver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetDriverOk() (*UsersModel, bool) {
	if o == nil || o.Driver == nil {
		return nil, false
	}
	return o.Driver, true
}

// HasDriver returns a boolean if a field has been set.
func (o *RouteEtaModel) HasDriver() bool {
	if o != nil && o.Driver != nil {
		return true
	}

	return false
}

// SetDriver gets a reference to the given UsersModel and assigns it to the Driver field.
func (o *RouteEtaModel) SetDriver(v UsersModel) {
	o.Driver = &v
}

// GetUserLink returns the UserLink field value if set, zero value otherwise.
func (o *RouteEtaModel) GetUserLink() []LinkModel {
	if o == nil || o.UserLink == nil {
		var ret []LinkModel
		return ret
	}
	return *o.UserLink
}

// GetUserLinkOk returns a tuple with the UserLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetUserLinkOk() (*[]LinkModel, bool) {
	if o == nil || o.UserLink == nil {
		return nil, false
	}
	return o.UserLink, true
}

// HasUserLink returns a boolean if a field has been set.
func (o *RouteEtaModel) HasUserLink() bool {
	if o != nil && o.UserLink != nil {
		return true
	}

	return false
}

// SetUserLink gets a reference to the given []LinkModel and assigns it to the UserLink field.
func (o *RouteEtaModel) SetUserLink(v []LinkModel) {
	o.UserLink = &v
}

// GetCoDriverIds returns the CoDriverIds field value if set, zero value otherwise.
func (o *RouteEtaModel) GetCoDriverIds() []int32 {
	if o == nil || o.CoDriverIds == nil {
		var ret []int32
		return ret
	}
	return *o.CoDriverIds
}

// GetCoDriverIdsOk returns a tuple with the CoDriverIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetCoDriverIdsOk() (*[]int32, bool) {
	if o == nil || o.CoDriverIds == nil {
		return nil, false
	}
	return o.CoDriverIds, true
}

// HasCoDriverIds returns a boolean if a field has been set.
func (o *RouteEtaModel) HasCoDriverIds() bool {
	if o != nil && o.CoDriverIds != nil {
		return true
	}

	return false
}

// SetCoDriverIds gets a reference to the given []int32 and assigns it to the CoDriverIds field.
func (o *RouteEtaModel) SetCoDriverIds(v []int32) {
	o.CoDriverIds = &v
}

// GetCoDrivers returns the CoDrivers field value if set, zero value otherwise.
func (o *RouteEtaModel) GetCoDrivers() []UsersModel {
	if o == nil || o.CoDrivers == nil {
		var ret []UsersModel
		return ret
	}
	return *o.CoDrivers
}

// GetCoDriversOk returns a tuple with the CoDrivers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetCoDriversOk() (*[]UsersModel, bool) {
	if o == nil || o.CoDrivers == nil {
		return nil, false
	}
	return o.CoDrivers, true
}

// HasCoDrivers returns a boolean if a field has been set.
func (o *RouteEtaModel) HasCoDrivers() bool {
	if o != nil && o.CoDrivers != nil {
		return true
	}

	return false
}

// SetCoDrivers gets a reference to the given []UsersModel and assigns it to the CoDrivers field.
func (o *RouteEtaModel) SetCoDrivers(v []UsersModel) {
	o.CoDrivers = &v
}

// GetCarId returns the CarId field value if set, zero value otherwise.
func (o *RouteEtaModel) GetCarId() int32 {
	if o == nil || o.CarId == nil {
		var ret int32
		return ret
	}
	return *o.CarId
}

// GetCarIdOk returns a tuple with the CarId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetCarIdOk() (*int32, bool) {
	if o == nil || o.CarId == nil {
		return nil, false
	}
	return o.CarId, true
}

// HasCarId returns a boolean if a field has been set.
func (o *RouteEtaModel) HasCarId() bool {
	if o != nil && o.CarId != nil {
		return true
	}

	return false
}

// SetCarId gets a reference to the given int32 and assigns it to the CarId field.
func (o *RouteEtaModel) SetCarId(v int32) {
	o.CarId = &v
}

// GetVehicleId returns the VehicleId field value if set, zero value otherwise.
func (o *RouteEtaModel) GetVehicleId() int32 {
	if o == nil || o.VehicleId == nil {
		var ret int32
		return ret
	}
	return *o.VehicleId
}

// GetVehicleIdOk returns a tuple with the VehicleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetVehicleIdOk() (*int32, bool) {
	if o == nil || o.VehicleId == nil {
		return nil, false
	}
	return o.VehicleId, true
}

// HasVehicleId returns a boolean if a field has been set.
func (o *RouteEtaModel) HasVehicleId() bool {
	if o != nil && o.VehicleId != nil {
		return true
	}

	return false
}

// SetVehicleId gets a reference to the given int32 and assigns it to the VehicleId field.
func (o *RouteEtaModel) SetVehicleId(v int32) {
	o.VehicleId = &v
}

// GetVehicleLink returns the VehicleLink field value if set, zero value otherwise.
func (o *RouteEtaModel) GetVehicleLink() []LinkModel {
	if o == nil || o.VehicleLink == nil {
		var ret []LinkModel
		return ret
	}
	return *o.VehicleLink
}

// GetVehicleLinkOk returns a tuple with the VehicleLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetVehicleLinkOk() (*[]LinkModel, bool) {
	if o == nil || o.VehicleLink == nil {
		return nil, false
	}
	return o.VehicleLink, true
}

// HasVehicleLink returns a boolean if a field has been set.
func (o *RouteEtaModel) HasVehicleLink() bool {
	if o != nil && o.VehicleLink != nil {
		return true
	}

	return false
}

// SetVehicleLink gets a reference to the given []LinkModel and assigns it to the VehicleLink field.
func (o *RouteEtaModel) SetVehicleLink(v []LinkModel) {
	o.VehicleLink = &v
}

// GetVehicle returns the Vehicle field value if set, zero value otherwise.
func (o *RouteEtaModel) GetVehicle() VehicleModel {
	if o == nil || o.Vehicle == nil {
		var ret VehicleModel
		return ret
	}
	return *o.Vehicle
}

// GetVehicleOk returns a tuple with the Vehicle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetVehicleOk() (*VehicleModel, bool) {
	if o == nil || o.Vehicle == nil {
		return nil, false
	}
	return o.Vehicle, true
}

// HasVehicle returns a boolean if a field has been set.
func (o *RouteEtaModel) HasVehicle() bool {
	if o != nil && o.Vehicle != nil {
		return true
	}

	return false
}

// SetVehicle gets a reference to the given VehicleModel and assigns it to the Vehicle field.
func (o *RouteEtaModel) SetVehicle(v VehicleModel) {
	o.Vehicle = &v
}

// GetCarLink returns the CarLink field value if set, zero value otherwise.
func (o *RouteEtaModel) GetCarLink() []LinkModel {
	if o == nil || o.CarLink == nil {
		var ret []LinkModel
		return ret
	}
	return *o.CarLink
}

// GetCarLinkOk returns a tuple with the CarLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetCarLinkOk() (*[]LinkModel, bool) {
	if o == nil || o.CarLink == nil {
		return nil, false
	}
	return o.CarLink, true
}

// HasCarLink returns a boolean if a field has been set.
func (o *RouteEtaModel) HasCarLink() bool {
	if o != nil && o.CarLink != nil {
		return true
	}

	return false
}

// SetCarLink gets a reference to the given []LinkModel and assigns it to the CarLink field.
func (o *RouteEtaModel) SetCarLink(v []LinkModel) {
	o.CarLink = &v
}

// GetCar returns the Car field value if set, zero value otherwise.
func (o *RouteEtaModel) GetCar() VehicleModel {
	if o == nil || o.Car == nil {
		var ret VehicleModel
		return ret
	}
	return *o.Car
}

// GetCarOk returns a tuple with the Car field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetCarOk() (*VehicleModel, bool) {
	if o == nil || o.Car == nil {
		return nil, false
	}
	return o.Car, true
}

// HasCar returns a boolean if a field has been set.
func (o *RouteEtaModel) HasCar() bool {
	if o != nil && o.Car != nil {
		return true
	}

	return false
}

// SetCar gets a reference to the given VehicleModel and assigns it to the Car field.
func (o *RouteEtaModel) SetCar(v VehicleModel) {
	o.Car = &v
}

// GetTrailerId returns the TrailerId field value if set, zero value otherwise.
func (o *RouteEtaModel) GetTrailerId() int32 {
	if o == nil || o.TrailerId == nil {
		var ret int32
		return ret
	}
	return *o.TrailerId
}

// GetTrailerIdOk returns a tuple with the TrailerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetTrailerIdOk() (*int32, bool) {
	if o == nil || o.TrailerId == nil {
		return nil, false
	}
	return o.TrailerId, true
}

// HasTrailerId returns a boolean if a field has been set.
func (o *RouteEtaModel) HasTrailerId() bool {
	if o != nil && o.TrailerId != nil {
		return true
	}

	return false
}

// SetTrailerId gets a reference to the given int32 and assigns it to the TrailerId field.
func (o *RouteEtaModel) SetTrailerId(v int32) {
	o.TrailerId = &v
}

// GetTrailerLink returns the TrailerLink field value if set, zero value otherwise.
func (o *RouteEtaModel) GetTrailerLink() []LinkModel {
	if o == nil || o.TrailerLink == nil {
		var ret []LinkModel
		return ret
	}
	return *o.TrailerLink
}

// GetTrailerLinkOk returns a tuple with the TrailerLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetTrailerLinkOk() (*[]LinkModel, bool) {
	if o == nil || o.TrailerLink == nil {
		return nil, false
	}
	return o.TrailerLink, true
}

// HasTrailerLink returns a boolean if a field has been set.
func (o *RouteEtaModel) HasTrailerLink() bool {
	if o != nil && o.TrailerLink != nil {
		return true
	}

	return false
}

// SetTrailerLink gets a reference to the given []LinkModel and assigns it to the TrailerLink field.
func (o *RouteEtaModel) SetTrailerLink(v []LinkModel) {
	o.TrailerLink = &v
}

// GetTrailer returns the Trailer field value if set, zero value otherwise.
func (o *RouteEtaModel) GetTrailer() TrailerModel {
	if o == nil || o.Trailer == nil {
		var ret TrailerModel
		return ret
	}
	return *o.Trailer
}

// GetTrailerOk returns a tuple with the Trailer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetTrailerOk() (*TrailerModel, bool) {
	if o == nil || o.Trailer == nil {
		return nil, false
	}
	return o.Trailer, true
}

// HasTrailer returns a boolean if a field has been set.
func (o *RouteEtaModel) HasTrailer() bool {
	if o != nil && o.Trailer != nil {
		return true
	}

	return false
}

// SetTrailer gets a reference to the given TrailerModel and assigns it to the Trailer field.
func (o *RouteEtaModel) SetTrailer(v TrailerModel) {
	o.Trailer = &v
}

// GetEquipment returns the Equipment field value if set, zero value otherwise.
func (o *RouteEtaModel) GetEquipment() []EquipmentModel {
	if o == nil || o.Equipment == nil {
		var ret []EquipmentModel
		return ret
	}
	return *o.Equipment
}

// GetEquipmentOk returns a tuple with the Equipment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetEquipmentOk() (*[]EquipmentModel, bool) {
	if o == nil || o.Equipment == nil {
		return nil, false
	}
	return o.Equipment, true
}

// HasEquipment returns a boolean if a field has been set.
func (o *RouteEtaModel) HasEquipment() bool {
	if o != nil && o.Equipment != nil {
		return true
	}

	return false
}

// SetEquipment gets a reference to the given []EquipmentModel and assigns it to the Equipment field.
func (o *RouteEtaModel) SetEquipment(v []EquipmentModel) {
	o.Equipment = &v
}

// GetEquipmentIds returns the EquipmentIds field value if set, zero value otherwise.
func (o *RouteEtaModel) GetEquipmentIds() []int32 {
	if o == nil || o.EquipmentIds == nil {
		var ret []int32
		return ret
	}
	return *o.EquipmentIds
}

// GetEquipmentIdsOk returns a tuple with the EquipmentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetEquipmentIdsOk() (*[]int32, bool) {
	if o == nil || o.EquipmentIds == nil {
		return nil, false
	}
	return o.EquipmentIds, true
}

// HasEquipmentIds returns a boolean if a field has been set.
func (o *RouteEtaModel) HasEquipmentIds() bool {
	if o != nil && o.EquipmentIds != nil {
		return true
	}

	return false
}

// SetEquipmentIds gets a reference to the given []int32 and assigns it to the EquipmentIds field.
func (o *RouteEtaModel) SetEquipmentIds(v []int32) {
	o.EquipmentIds = &v
}

// GetPlannedStartDuration returns the PlannedStartDuration field value if set, zero value otherwise.
func (o *RouteEtaModel) GetPlannedStartDuration() int32 {
	if o == nil || o.PlannedStartDuration == nil {
		var ret int32
		return ret
	}
	return *o.PlannedStartDuration
}

// GetPlannedStartDurationOk returns a tuple with the PlannedStartDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetPlannedStartDurationOk() (*int32, bool) {
	if o == nil || o.PlannedStartDuration == nil {
		return nil, false
	}
	return o.PlannedStartDuration, true
}

// HasPlannedStartDuration returns a boolean if a field has been set.
func (o *RouteEtaModel) HasPlannedStartDuration() bool {
	if o != nil && o.PlannedStartDuration != nil {
		return true
	}

	return false
}

// SetPlannedStartDuration gets a reference to the given int32 and assigns it to the PlannedStartDuration field.
func (o *RouteEtaModel) SetPlannedStartDuration(v int32) {
	o.PlannedStartDuration = &v
}

// GetPlannedEndDuration returns the PlannedEndDuration field value if set, zero value otherwise.
func (o *RouteEtaModel) GetPlannedEndDuration() int32 {
	if o == nil || o.PlannedEndDuration == nil {
		var ret int32
		return ret
	}
	return *o.PlannedEndDuration
}

// GetPlannedEndDurationOk returns a tuple with the PlannedEndDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetPlannedEndDurationOk() (*int32, bool) {
	if o == nil || o.PlannedEndDuration == nil {
		return nil, false
	}
	return o.PlannedEndDuration, true
}

// HasPlannedEndDuration returns a boolean if a field has been set.
func (o *RouteEtaModel) HasPlannedEndDuration() bool {
	if o != nil && o.PlannedEndDuration != nil {
		return true
	}

	return false
}

// SetPlannedEndDuration gets a reference to the given int32 and assigns it to the PlannedEndDuration field.
func (o *RouteEtaModel) SetPlannedEndDuration(v int32) {
	o.PlannedEndDuration = &v
}

// GetMaxSpeed returns the MaxSpeed field value if set, zero value otherwise.
func (o *RouteEtaModel) GetMaxSpeed() int64 {
	if o == nil || o.MaxSpeed == nil {
		var ret int64
		return ret
	}
	return *o.MaxSpeed
}

// GetMaxSpeedOk returns a tuple with the MaxSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetMaxSpeedOk() (*int64, bool) {
	if o == nil || o.MaxSpeed == nil {
		return nil, false
	}
	return o.MaxSpeed, true
}

// HasMaxSpeed returns a boolean if a field has been set.
func (o *RouteEtaModel) HasMaxSpeed() bool {
	if o != nil && o.MaxSpeed != nil {
		return true
	}

	return false
}

// SetMaxSpeed gets a reference to the given int64 and assigns it to the MaxSpeed field.
func (o *RouteEtaModel) SetMaxSpeed(v int64) {
	o.MaxSpeed = &v
}

// GetSpeedFactor returns the SpeedFactor field value if set, zero value otherwise.
func (o *RouteEtaModel) GetSpeedFactor() float64 {
	if o == nil || o.SpeedFactor == nil {
		var ret float64
		return ret
	}
	return *o.SpeedFactor
}

// GetSpeedFactorOk returns a tuple with the SpeedFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetSpeedFactorOk() (*float64, bool) {
	if o == nil || o.SpeedFactor == nil {
		return nil, false
	}
	return o.SpeedFactor, true
}

// HasSpeedFactor returns a boolean if a field has been set.
func (o *RouteEtaModel) HasSpeedFactor() bool {
	if o != nil && o.SpeedFactor != nil {
		return true
	}

	return false
}

// SetSpeedFactor gets a reference to the given float64 and assigns it to the SpeedFactor field.
func (o *RouteEtaModel) SetSpeedFactor(v float64) {
	o.SpeedFactor = &v
}

// GetDurationFactor returns the DurationFactor field value if set, zero value otherwise.
func (o *RouteEtaModel) GetDurationFactor() float64 {
	if o == nil || o.DurationFactor == nil {
		var ret float64
		return ret
	}
	return *o.DurationFactor
}

// GetDurationFactorOk returns a tuple with the DurationFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetDurationFactorOk() (*float64, bool) {
	if o == nil || o.DurationFactor == nil {
		return nil, false
	}
	return o.DurationFactor, true
}

// HasDurationFactor returns a boolean if a field has been set.
func (o *RouteEtaModel) HasDurationFactor() bool {
	if o != nil && o.DurationFactor != nil {
		return true
	}

	return false
}

// SetDurationFactor gets a reference to the given float64 and assigns it to the DurationFactor field.
func (o *RouteEtaModel) SetDurationFactor(v float64) {
	o.DurationFactor = &v
}

// GetCostPerMeter returns the CostPerMeter field value if set, zero value otherwise.
func (o *RouteEtaModel) GetCostPerMeter() float64 {
	if o == nil || o.CostPerMeter == nil {
		var ret float64
		return ret
	}
	return *o.CostPerMeter
}

// GetCostPerMeterOk returns a tuple with the CostPerMeter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetCostPerMeterOk() (*float64, bool) {
	if o == nil || o.CostPerMeter == nil {
		return nil, false
	}
	return o.CostPerMeter, true
}

// HasCostPerMeter returns a boolean if a field has been set.
func (o *RouteEtaModel) HasCostPerMeter() bool {
	if o != nil && o.CostPerMeter != nil {
		return true
	}

	return false
}

// SetCostPerMeter gets a reference to the given float64 and assigns it to the CostPerMeter field.
func (o *RouteEtaModel) SetCostPerMeter(v float64) {
	o.CostPerMeter = &v
}

// GetCostPerRoute returns the CostPerRoute field value if set, zero value otherwise.
func (o *RouteEtaModel) GetCostPerRoute() float64 {
	if o == nil || o.CostPerRoute == nil {
		var ret float64
		return ret
	}
	return *o.CostPerRoute
}

// GetCostPerRouteOk returns a tuple with the CostPerRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetCostPerRouteOk() (*float64, bool) {
	if o == nil || o.CostPerRoute == nil {
		return nil, false
	}
	return o.CostPerRoute, true
}

// HasCostPerRoute returns a boolean if a field has been set.
func (o *RouteEtaModel) HasCostPerRoute() bool {
	if o != nil && o.CostPerRoute != nil {
		return true
	}

	return false
}

// SetCostPerRoute gets a reference to the given float64 and assigns it to the CostPerRoute field.
func (o *RouteEtaModel) SetCostPerRoute(v float64) {
	o.CostPerRoute = &v
}

// GetCostPerDrivingMinute returns the CostPerDrivingMinute field value if set, zero value otherwise.
func (o *RouteEtaModel) GetCostPerDrivingMinute() float64 {
	if o == nil || o.CostPerDrivingMinute == nil {
		var ret float64
		return ret
	}
	return *o.CostPerDrivingMinute
}

// GetCostPerDrivingMinuteOk returns a tuple with the CostPerDrivingMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetCostPerDrivingMinuteOk() (*float64, bool) {
	if o == nil || o.CostPerDrivingMinute == nil {
		return nil, false
	}
	return o.CostPerDrivingMinute, true
}

// HasCostPerDrivingMinute returns a boolean if a field has been set.
func (o *RouteEtaModel) HasCostPerDrivingMinute() bool {
	if o != nil && o.CostPerDrivingMinute != nil {
		return true
	}

	return false
}

// SetCostPerDrivingMinute gets a reference to the given float64 and assigns it to the CostPerDrivingMinute field.
func (o *RouteEtaModel) SetCostPerDrivingMinute(v float64) {
	o.CostPerDrivingMinute = &v
}

// GetCostPerWaitingMinute returns the CostPerWaitingMinute field value if set, zero value otherwise.
func (o *RouteEtaModel) GetCostPerWaitingMinute() float64 {
	if o == nil || o.CostPerWaitingMinute == nil {
		var ret float64
		return ret
	}
	return *o.CostPerWaitingMinute
}

// GetCostPerWaitingMinuteOk returns a tuple with the CostPerWaitingMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetCostPerWaitingMinuteOk() (*float64, bool) {
	if o == nil || o.CostPerWaitingMinute == nil {
		return nil, false
	}
	return o.CostPerWaitingMinute, true
}

// HasCostPerWaitingMinute returns a boolean if a field has been set.
func (o *RouteEtaModel) HasCostPerWaitingMinute() bool {
	if o != nil && o.CostPerWaitingMinute != nil {
		return true
	}

	return false
}

// SetCostPerWaitingMinute gets a reference to the given float64 and assigns it to the CostPerWaitingMinute field.
func (o *RouteEtaModel) SetCostPerWaitingMinute(v float64) {
	o.CostPerWaitingMinute = &v
}

// GetCostPerServiceMinute returns the CostPerServiceMinute field value if set, zero value otherwise.
func (o *RouteEtaModel) GetCostPerServiceMinute() float64 {
	if o == nil || o.CostPerServiceMinute == nil {
		var ret float64
		return ret
	}
	return *o.CostPerServiceMinute
}

// GetCostPerServiceMinuteOk returns a tuple with the CostPerServiceMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetCostPerServiceMinuteOk() (*float64, bool) {
	if o == nil || o.CostPerServiceMinute == nil {
		return nil, false
	}
	return o.CostPerServiceMinute, true
}

// HasCostPerServiceMinute returns a boolean if a field has been set.
func (o *RouteEtaModel) HasCostPerServiceMinute() bool {
	if o != nil && o.CostPerServiceMinute != nil {
		return true
	}

	return false
}

// SetCostPerServiceMinute gets a reference to the given float64 and assigns it to the CostPerServiceMinute field.
func (o *RouteEtaModel) SetCostPerServiceMinute(v float64) {
	o.CostPerServiceMinute = &v
}

// GetEarliestDate returns the EarliestDate field value if set, zero value otherwise.
func (o *RouteEtaModel) GetEarliestDate() string {
	if o == nil || o.EarliestDate == nil {
		var ret string
		return ret
	}
	return *o.EarliestDate
}

// GetEarliestDateOk returns a tuple with the EarliestDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetEarliestDateOk() (*string, bool) {
	if o == nil || o.EarliestDate == nil {
		return nil, false
	}
	return o.EarliestDate, true
}

// HasEarliestDate returns a boolean if a field has been set.
func (o *RouteEtaModel) HasEarliestDate() bool {
	if o != nil && o.EarliestDate != nil {
		return true
	}

	return false
}

// SetEarliestDate gets a reference to the given string and assigns it to the EarliestDate field.
func (o *RouteEtaModel) SetEarliestDate(v string) {
	o.EarliestDate = &v
}

// GetLatestDate returns the LatestDate field value if set, zero value otherwise.
func (o *RouteEtaModel) GetLatestDate() string {
	if o == nil || o.LatestDate == nil {
		var ret string
		return ret
	}
	return *o.LatestDate
}

// GetLatestDateOk returns a tuple with the LatestDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetLatestDateOk() (*string, bool) {
	if o == nil || o.LatestDate == nil {
		return nil, false
	}
	return o.LatestDate, true
}

// HasLatestDate returns a boolean if a field has been set.
func (o *RouteEtaModel) HasLatestDate() bool {
	if o != nil && o.LatestDate != nil {
		return true
	}

	return false
}

// SetLatestDate gets a reference to the given string and assigns it to the LatestDate field.
func (o *RouteEtaModel) SetLatestDate(v string) {
	o.LatestDate = &v
}

// GetEarliestDateTime returns the EarliestDateTime field value if set, zero value otherwise.
func (o *RouteEtaModel) GetEarliestDateTime() time.Time {
	if o == nil || o.EarliestDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EarliestDateTime
}

// GetEarliestDateTimeOk returns a tuple with the EarliestDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetEarliestDateTimeOk() (*time.Time, bool) {
	if o == nil || o.EarliestDateTime == nil {
		return nil, false
	}
	return o.EarliestDateTime, true
}

// HasEarliestDateTime returns a boolean if a field has been set.
func (o *RouteEtaModel) HasEarliestDateTime() bool {
	if o != nil && o.EarliestDateTime != nil {
		return true
	}

	return false
}

// SetEarliestDateTime gets a reference to the given time.Time and assigns it to the EarliestDateTime field.
func (o *RouteEtaModel) SetEarliestDateTime(v time.Time) {
	o.EarliestDateTime = &v
}

// GetLatestDateTime returns the LatestDateTime field value if set, zero value otherwise.
func (o *RouteEtaModel) GetLatestDateTime() time.Time {
	if o == nil || o.LatestDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LatestDateTime
}

// GetLatestDateTimeOk returns a tuple with the LatestDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetLatestDateTimeOk() (*time.Time, bool) {
	if o == nil || o.LatestDateTime == nil {
		return nil, false
	}
	return o.LatestDateTime, true
}

// HasLatestDateTime returns a boolean if a field has been set.
func (o *RouteEtaModel) HasLatestDateTime() bool {
	if o != nil && o.LatestDateTime != nil {
		return true
	}

	return false
}

// SetLatestDateTime gets a reference to the given time.Time and assigns it to the LatestDateTime field.
func (o *RouteEtaModel) SetLatestDateTime(v time.Time) {
	o.LatestDateTime = &v
}

// GetPlannedDateTimeFrom returns the PlannedDateTimeFrom field value if set, zero value otherwise.
func (o *RouteEtaModel) GetPlannedDateTimeFrom() time.Time {
	if o == nil || o.PlannedDateTimeFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.PlannedDateTimeFrom
}

// GetPlannedDateTimeFromOk returns a tuple with the PlannedDateTimeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetPlannedDateTimeFromOk() (*time.Time, bool) {
	if o == nil || o.PlannedDateTimeFrom == nil {
		return nil, false
	}
	return o.PlannedDateTimeFrom, true
}

// HasPlannedDateTimeFrom returns a boolean if a field has been set.
func (o *RouteEtaModel) HasPlannedDateTimeFrom() bool {
	if o != nil && o.PlannedDateTimeFrom != nil {
		return true
	}

	return false
}

// SetPlannedDateTimeFrom gets a reference to the given time.Time and assigns it to the PlannedDateTimeFrom field.
func (o *RouteEtaModel) SetPlannedDateTimeFrom(v time.Time) {
	o.PlannedDateTimeFrom = &v
}

// GetPlannedDateTimeTo returns the PlannedDateTimeTo field value if set, zero value otherwise.
func (o *RouteEtaModel) GetPlannedDateTimeTo() time.Time {
	if o == nil || o.PlannedDateTimeTo == nil {
		var ret time.Time
		return ret
	}
	return *o.PlannedDateTimeTo
}

// GetPlannedDateTimeToOk returns a tuple with the PlannedDateTimeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetPlannedDateTimeToOk() (*time.Time, bool) {
	if o == nil || o.PlannedDateTimeTo == nil {
		return nil, false
	}
	return o.PlannedDateTimeTo, true
}

// HasPlannedDateTimeTo returns a boolean if a field has been set.
func (o *RouteEtaModel) HasPlannedDateTimeTo() bool {
	if o != nil && o.PlannedDateTimeTo != nil {
		return true
	}

	return false
}

// SetPlannedDateTimeTo gets a reference to the given time.Time and assigns it to the PlannedDateTimeTo field.
func (o *RouteEtaModel) SetPlannedDateTimeTo(v time.Time) {
	o.PlannedDateTimeTo = &v
}

// GetExecutedDateTimeFrom returns the ExecutedDateTimeFrom field value if set, zero value otherwise.
func (o *RouteEtaModel) GetExecutedDateTimeFrom() time.Time {
	if o == nil || o.ExecutedDateTimeFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.ExecutedDateTimeFrom
}

// GetExecutedDateTimeFromOk returns a tuple with the ExecutedDateTimeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetExecutedDateTimeFromOk() (*time.Time, bool) {
	if o == nil || o.ExecutedDateTimeFrom == nil {
		return nil, false
	}
	return o.ExecutedDateTimeFrom, true
}

// HasExecutedDateTimeFrom returns a boolean if a field has been set.
func (o *RouteEtaModel) HasExecutedDateTimeFrom() bool {
	if o != nil && o.ExecutedDateTimeFrom != nil {
		return true
	}

	return false
}

// SetExecutedDateTimeFrom gets a reference to the given time.Time and assigns it to the ExecutedDateTimeFrom field.
func (o *RouteEtaModel) SetExecutedDateTimeFrom(v time.Time) {
	o.ExecutedDateTimeFrom = &v
}

// GetExecutedDateTimeTo returns the ExecutedDateTimeTo field value if set, zero value otherwise.
func (o *RouteEtaModel) GetExecutedDateTimeTo() time.Time {
	if o == nil || o.ExecutedDateTimeTo == nil {
		var ret time.Time
		return ret
	}
	return *o.ExecutedDateTimeTo
}

// GetExecutedDateTimeToOk returns a tuple with the ExecutedDateTimeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetExecutedDateTimeToOk() (*time.Time, bool) {
	if o == nil || o.ExecutedDateTimeTo == nil {
		return nil, false
	}
	return o.ExecutedDateTimeTo, true
}

// HasExecutedDateTimeTo returns a boolean if a field has been set.
func (o *RouteEtaModel) HasExecutedDateTimeTo() bool {
	if o != nil && o.ExecutedDateTimeTo != nil {
		return true
	}

	return false
}

// SetExecutedDateTimeTo gets a reference to the given time.Time and assigns it to the ExecutedDateTimeTo field.
func (o *RouteEtaModel) SetExecutedDateTimeTo(v time.Time) {
	o.ExecutedDateTimeTo = &v
}

// GetPlannedDrivingDistance returns the PlannedDrivingDistance field value if set, zero value otherwise.
func (o *RouteEtaModel) GetPlannedDrivingDistance() int32 {
	if o == nil || o.PlannedDrivingDistance == nil {
		var ret int32
		return ret
	}
	return *o.PlannedDrivingDistance
}

// GetPlannedDrivingDistanceOk returns a tuple with the PlannedDrivingDistance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetPlannedDrivingDistanceOk() (*int32, bool) {
	if o == nil || o.PlannedDrivingDistance == nil {
		return nil, false
	}
	return o.PlannedDrivingDistance, true
}

// HasPlannedDrivingDistance returns a boolean if a field has been set.
func (o *RouteEtaModel) HasPlannedDrivingDistance() bool {
	if o != nil && o.PlannedDrivingDistance != nil {
		return true
	}

	return false
}

// SetPlannedDrivingDistance gets a reference to the given int32 and assigns it to the PlannedDrivingDistance field.
func (o *RouteEtaModel) SetPlannedDrivingDistance(v int32) {
	o.PlannedDrivingDistance = &v
}

// GetPlannedDrivingDuration returns the PlannedDrivingDuration field value if set, zero value otherwise.
func (o *RouteEtaModel) GetPlannedDrivingDuration() int32 {
	if o == nil || o.PlannedDrivingDuration == nil {
		var ret int32
		return ret
	}
	return *o.PlannedDrivingDuration
}

// GetPlannedDrivingDurationOk returns a tuple with the PlannedDrivingDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetPlannedDrivingDurationOk() (*int32, bool) {
	if o == nil || o.PlannedDrivingDuration == nil {
		return nil, false
	}
	return o.PlannedDrivingDuration, true
}

// HasPlannedDrivingDuration returns a boolean if a field has been set.
func (o *RouteEtaModel) HasPlannedDrivingDuration() bool {
	if o != nil && o.PlannedDrivingDuration != nil {
		return true
	}

	return false
}

// SetPlannedDrivingDuration gets a reference to the given int32 and assigns it to the PlannedDrivingDuration field.
func (o *RouteEtaModel) SetPlannedDrivingDuration(v int32) {
	o.PlannedDrivingDuration = &v
}

// GetPlannedWaitingDuration returns the PlannedWaitingDuration field value if set, zero value otherwise.
func (o *RouteEtaModel) GetPlannedWaitingDuration() int32 {
	if o == nil || o.PlannedWaitingDuration == nil {
		var ret int32
		return ret
	}
	return *o.PlannedWaitingDuration
}

// GetPlannedWaitingDurationOk returns a tuple with the PlannedWaitingDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetPlannedWaitingDurationOk() (*int32, bool) {
	if o == nil || o.PlannedWaitingDuration == nil {
		return nil, false
	}
	return o.PlannedWaitingDuration, true
}

// HasPlannedWaitingDuration returns a boolean if a field has been set.
func (o *RouteEtaModel) HasPlannedWaitingDuration() bool {
	if o != nil && o.PlannedWaitingDuration != nil {
		return true
	}

	return false
}

// SetPlannedWaitingDuration gets a reference to the given int32 and assigns it to the PlannedWaitingDuration field.
func (o *RouteEtaModel) SetPlannedWaitingDuration(v int32) {
	o.PlannedWaitingDuration = &v
}

// GetPlannedActivityDuration returns the PlannedActivityDuration field value if set, zero value otherwise.
func (o *RouteEtaModel) GetPlannedActivityDuration() int32 {
	if o == nil || o.PlannedActivityDuration == nil {
		var ret int32
		return ret
	}
	return *o.PlannedActivityDuration
}

// GetPlannedActivityDurationOk returns a tuple with the PlannedActivityDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetPlannedActivityDurationOk() (*int32, bool) {
	if o == nil || o.PlannedActivityDuration == nil {
		return nil, false
	}
	return o.PlannedActivityDuration, true
}

// HasPlannedActivityDuration returns a boolean if a field has been set.
func (o *RouteEtaModel) HasPlannedActivityDuration() bool {
	if o != nil && o.PlannedActivityDuration != nil {
		return true
	}

	return false
}

// SetPlannedActivityDuration gets a reference to the given int32 and assigns it to the PlannedActivityDuration field.
func (o *RouteEtaModel) SetPlannedActivityDuration(v int32) {
	o.PlannedActivityDuration = &v
}

// GetPlannedTotalDuration returns the PlannedTotalDuration field value if set, zero value otherwise.
func (o *RouteEtaModel) GetPlannedTotalDuration() int32 {
	if o == nil || o.PlannedTotalDuration == nil {
		var ret int32
		return ret
	}
	return *o.PlannedTotalDuration
}

// GetPlannedTotalDurationOk returns a tuple with the PlannedTotalDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetPlannedTotalDurationOk() (*int32, bool) {
	if o == nil || o.PlannedTotalDuration == nil {
		return nil, false
	}
	return o.PlannedTotalDuration, true
}

// HasPlannedTotalDuration returns a boolean if a field has been set.
func (o *RouteEtaModel) HasPlannedTotalDuration() bool {
	if o != nil && o.PlannedTotalDuration != nil {
		return true
	}

	return false
}

// SetPlannedTotalDuration gets a reference to the given int32 and assigns it to the PlannedTotalDuration field.
func (o *RouteEtaModel) SetPlannedTotalDuration(v int32) {
	o.PlannedTotalDuration = &v
}

// GetGpsLocations returns the GpsLocations field value if set, zero value otherwise.
func (o *RouteEtaModel) GetGpsLocations() []GPSLocationModel {
	if o == nil || o.GpsLocations == nil {
		var ret []GPSLocationModel
		return ret
	}
	return *o.GpsLocations
}

// GetGpsLocationsOk returns a tuple with the GpsLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetGpsLocationsOk() (*[]GPSLocationModel, bool) {
	if o == nil || o.GpsLocations == nil {
		return nil, false
	}
	return o.GpsLocations, true
}

// HasGpsLocations returns a boolean if a field has been set.
func (o *RouteEtaModel) HasGpsLocations() bool {
	if o != nil && o.GpsLocations != nil {
		return true
	}

	return false
}

// SetGpsLocations gets a reference to the given []GPSLocationModel and assigns it to the GpsLocations field.
func (o *RouteEtaModel) SetGpsLocations(v []GPSLocationModel) {
	o.GpsLocations = &v
}

// GetLatestKnownPosition returns the LatestKnownPosition field value if set, zero value otherwise.
func (o *RouteEtaModel) GetLatestKnownPosition() GPSLocationModel {
	if o == nil || o.LatestKnownPosition == nil {
		var ret GPSLocationModel
		return ret
	}
	return *o.LatestKnownPosition
}

// GetLatestKnownPositionOk returns a tuple with the LatestKnownPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetLatestKnownPositionOk() (*GPSLocationModel, bool) {
	if o == nil || o.LatestKnownPosition == nil {
		return nil, false
	}
	return o.LatestKnownPosition, true
}

// HasLatestKnownPosition returns a boolean if a field has been set.
func (o *RouteEtaModel) HasLatestKnownPosition() bool {
	if o != nil && o.LatestKnownPosition != nil {
		return true
	}

	return false
}

// SetLatestKnownPosition gets a reference to the given GPSLocationModel and assigns it to the LatestKnownPosition field.
func (o *RouteEtaModel) SetLatestKnownPosition(v GPSLocationModel) {
	o.LatestKnownPosition = &v
}

// GetRecurrenceId returns the RecurrenceId field value if set, zero value otherwise.
func (o *RouteEtaModel) GetRecurrenceId() int32 {
	if o == nil || o.RecurrenceId == nil {
		var ret int32
		return ret
	}
	return *o.RecurrenceId
}

// GetRecurrenceIdOk returns a tuple with the RecurrenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetRecurrenceIdOk() (*int32, bool) {
	if o == nil || o.RecurrenceId == nil {
		return nil, false
	}
	return o.RecurrenceId, true
}

// HasRecurrenceId returns a boolean if a field has been set.
func (o *RouteEtaModel) HasRecurrenceId() bool {
	if o != nil && o.RecurrenceId != nil {
		return true
	}

	return false
}

// SetRecurrenceId gets a reference to the given int32 and assigns it to the RecurrenceId field.
func (o *RouteEtaModel) SetRecurrenceId(v int32) {
	o.RecurrenceId = &v
}

// GetRecurrenceNr returns the RecurrenceNr field value if set, zero value otherwise.
func (o *RouteEtaModel) GetRecurrenceNr() int32 {
	if o == nil || o.RecurrenceNr == nil {
		var ret int32
		return ret
	}
	return *o.RecurrenceNr
}

// GetRecurrenceNrOk returns a tuple with the RecurrenceNr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetRecurrenceNrOk() (*int32, bool) {
	if o == nil || o.RecurrenceNr == nil {
		return nil, false
	}
	return o.RecurrenceNr, true
}

// HasRecurrenceNr returns a boolean if a field has been set.
func (o *RouteEtaModel) HasRecurrenceNr() bool {
	if o != nil && o.RecurrenceNr != nil {
		return true
	}

	return false
}

// SetRecurrenceNr gets a reference to the given int32 and assigns it to the RecurrenceNr field.
func (o *RouteEtaModel) SetRecurrenceNr(v int32) {
	o.RecurrenceNr = &v
}

// GetRecurrence returns the Recurrence field value if set, zero value otherwise.
func (o *RouteEtaModel) GetRecurrence() RecurrenceModel {
	if o == nil || o.Recurrence == nil {
		var ret RecurrenceModel
		return ret
	}
	return *o.Recurrence
}

// GetRecurrenceOk returns a tuple with the Recurrence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetRecurrenceOk() (*RecurrenceModel, bool) {
	if o == nil || o.Recurrence == nil {
		return nil, false
	}
	return o.Recurrence, true
}

// HasRecurrence returns a boolean if a field has been set.
func (o *RouteEtaModel) HasRecurrence() bool {
	if o != nil && o.Recurrence != nil {
		return true
	}

	return false
}

// SetRecurrence gets a reference to the given RecurrenceModel and assigns it to the Recurrence field.
func (o *RouteEtaModel) SetRecurrence(v RecurrenceModel) {
	o.Recurrence = &v
}

// GetOverdue returns the Overdue field value if set, zero value otherwise.
func (o *RouteEtaModel) GetOverdue() bool {
	if o == nil || o.Overdue == nil {
		var ret bool
		return ret
	}
	return *o.Overdue
}

// GetOverdueOk returns a tuple with the Overdue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetOverdueOk() (*bool, bool) {
	if o == nil || o.Overdue == nil {
		return nil, false
	}
	return o.Overdue, true
}

// HasOverdue returns a boolean if a field has been set.
func (o *RouteEtaModel) HasOverdue() bool {
	if o != nil && o.Overdue != nil {
		return true
	}

	return false
}

// SetOverdue gets a reference to the given bool and assigns it to the Overdue field.
func (o *RouteEtaModel) SetOverdue(v bool) {
	o.Overdue = &v
}

// GetOptimized returns the Optimized field value if set, zero value otherwise.
func (o *RouteEtaModel) GetOptimized() bool {
	if o == nil || o.Optimized == nil {
		var ret bool
		return ret
	}
	return *o.Optimized
}

// GetOptimizedOk returns a tuple with the Optimized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetOptimizedOk() (*bool, bool) {
	if o == nil || o.Optimized == nil {
		return nil, false
	}
	return o.Optimized, true
}

// HasOptimized returns a boolean if a field has been set.
func (o *RouteEtaModel) HasOptimized() bool {
	if o != nil && o.Optimized != nil {
		return true
	}

	return false
}

// SetOptimized gets a reference to the given bool and assigns it to the Optimized field.
func (o *RouteEtaModel) SetOptimized(v bool) {
	o.Optimized = &v
}

// GetBlocked returns the Blocked field value if set, zero value otherwise.
func (o *RouteEtaModel) GetBlocked() bool {
	if o == nil || o.Blocked == nil {
		var ret bool
		return ret
	}
	return *o.Blocked
}

// GetBlockedOk returns a tuple with the Blocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetBlockedOk() (*bool, bool) {
	if o == nil || o.Blocked == nil {
		return nil, false
	}
	return o.Blocked, true
}

// HasBlocked returns a boolean if a field has been set.
func (o *RouteEtaModel) HasBlocked() bool {
	if o != nil && o.Blocked != nil {
		return true
	}

	return false
}

// SetBlocked gets a reference to the given bool and assigns it to the Blocked field.
func (o *RouteEtaModel) SetBlocked(v bool) {
	o.Blocked = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *RouteEtaModel) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *RouteEtaModel) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *RouteEtaModel) SetActive(v bool) {
	o.Active = &v
}

// GetStartAddress returns the StartAddress field value if set, zero value otherwise.
func (o *RouteEtaModel) GetStartAddress() AddressModel {
	if o == nil || o.StartAddress == nil {
		var ret AddressModel
		return ret
	}
	return *o.StartAddress
}

// GetStartAddressOk returns a tuple with the StartAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetStartAddressOk() (*AddressModel, bool) {
	if o == nil || o.StartAddress == nil {
		return nil, false
	}
	return o.StartAddress, true
}

// HasStartAddress returns a boolean if a field has been set.
func (o *RouteEtaModel) HasStartAddress() bool {
	if o != nil && o.StartAddress != nil {
		return true
	}

	return false
}

// SetStartAddress gets a reference to the given AddressModel and assigns it to the StartAddress field.
func (o *RouteEtaModel) SetStartAddress(v AddressModel) {
	o.StartAddress = &v
}

// GetEndAddress returns the EndAddress field value if set, zero value otherwise.
func (o *RouteEtaModel) GetEndAddress() AddressModel {
	if o == nil || o.EndAddress == nil {
		var ret AddressModel
		return ret
	}
	return *o.EndAddress
}

// GetEndAddressOk returns a tuple with the EndAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetEndAddressOk() (*AddressModel, bool) {
	if o == nil || o.EndAddress == nil {
		return nil, false
	}
	return o.EndAddress, true
}

// HasEndAddress returns a boolean if a field has been set.
func (o *RouteEtaModel) HasEndAddress() bool {
	if o != nil && o.EndAddress != nil {
		return true
	}

	return false
}

// SetEndAddress gets a reference to the given AddressModel and assigns it to the EndAddress field.
func (o *RouteEtaModel) SetEndAddress(v AddressModel) {
	o.EndAddress = &v
}

// GetPlannedCapacities returns the PlannedCapacities field value if set, zero value otherwise.
func (o *RouteEtaModel) GetPlannedCapacities() map[string]interface{} {
	if o == nil || o.PlannedCapacities == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.PlannedCapacities
}

// GetPlannedCapacitiesOk returns a tuple with the PlannedCapacities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetPlannedCapacitiesOk() (*map[string]interface{}, bool) {
	if o == nil || o.PlannedCapacities == nil {
		return nil, false
	}
	return o.PlannedCapacities, true
}

// HasPlannedCapacities returns a boolean if a field has been set.
func (o *RouteEtaModel) HasPlannedCapacities() bool {
	if o != nil && o.PlannedCapacities != nil {
		return true
	}

	return false
}

// SetPlannedCapacities gets a reference to the given map[string]interface{} and assigns it to the PlannedCapacities field.
func (o *RouteEtaModel) SetPlannedCapacities(v map[string]interface{}) {
	o.PlannedCapacities = &v
}

// GetAppliedCapacities returns the AppliedCapacities field value if set, zero value otherwise.
func (o *RouteEtaModel) GetAppliedCapacities() AppliedCapacitiesModel {
	if o == nil || o.AppliedCapacities == nil {
		var ret AppliedCapacitiesModel
		return ret
	}
	return *o.AppliedCapacities
}

// GetAppliedCapacitiesOk returns a tuple with the AppliedCapacities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetAppliedCapacitiesOk() (*AppliedCapacitiesModel, bool) {
	if o == nil || o.AppliedCapacities == nil {
		return nil, false
	}
	return o.AppliedCapacities, true
}

// HasAppliedCapacities returns a boolean if a field has been set.
func (o *RouteEtaModel) HasAppliedCapacities() bool {
	if o != nil && o.AppliedCapacities != nil {
		return true
	}

	return false
}

// SetAppliedCapacities gets a reference to the given AppliedCapacitiesModel and assigns it to the AppliedCapacities field.
func (o *RouteEtaModel) SetAppliedCapacities(v AppliedCapacitiesModel) {
	o.AppliedCapacities = &v
}

// GetCapacities returns the Capacities field value if set, zero value otherwise.
func (o *RouteEtaModel) GetCapacities() []CapacityModel {
	if o == nil || o.Capacities == nil {
		var ret []CapacityModel
		return ret
	}
	return *o.Capacities
}

// GetCapacitiesOk returns a tuple with the Capacities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetCapacitiesOk() (*[]CapacityModel, bool) {
	if o == nil || o.Capacities == nil {
		return nil, false
	}
	return o.Capacities, true
}

// HasCapacities returns a boolean if a field has been set.
func (o *RouteEtaModel) HasCapacities() bool {
	if o != nil && o.Capacities != nil {
		return true
	}

	return false
}

// SetCapacities gets a reference to the given []CapacityModel and assigns it to the Capacities field.
func (o *RouteEtaModel) SetCapacities(v []CapacityModel) {
	o.Capacities = &v
}

// GetActivityIds returns the ActivityIds field value if set, zero value otherwise.
func (o *RouteEtaModel) GetActivityIds() []int32 {
	if o == nil || o.ActivityIds == nil {
		var ret []int32
		return ret
	}
	return *o.ActivityIds
}

// GetActivityIdsOk returns a tuple with the ActivityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetActivityIdsOk() (*[]int32, bool) {
	if o == nil || o.ActivityIds == nil {
		return nil, false
	}
	return o.ActivityIds, true
}

// HasActivityIds returns a boolean if a field has been set.
func (o *RouteEtaModel) HasActivityIds() bool {
	if o != nil && o.ActivityIds != nil {
		return true
	}

	return false
}

// SetActivityIds gets a reference to the given []int32 and assigns it to the ActivityIds field.
func (o *RouteEtaModel) SetActivityIds(v []int32) {
	o.ActivityIds = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *RouteEtaModel) GetLinks() []LinkModel {
	if o == nil || o.Links == nil {
		var ret []LinkModel
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetLinksOk() (*[]LinkModel, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *RouteEtaModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkModel and assigns it to the Links field.
func (o *RouteEtaModel) SetLinks(v []LinkModel) {
	o.Links = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *RouteEtaModel) GetMetaData() []MetaDataModel {
	if o == nil || o.MetaData == nil {
		var ret []MetaDataModel
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetMetaDataOk() (*[]MetaDataModel, bool) {
	if o == nil || o.MetaData == nil {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *RouteEtaModel) HasMetaData() bool {
	if o != nil && o.MetaData != nil {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given []MetaDataModel and assigns it to the MetaData field.
func (o *RouteEtaModel) SetMetaData(v []MetaDataModel) {
	o.MetaData = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *RouteEtaModel) GetNotes() []NoteModel {
	if o == nil || o.Notes == nil {
		var ret []NoteModel
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetNotesOk() (*[]NoteModel, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *RouteEtaModel) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given []NoteModel and assigns it to the Notes field.
func (o *RouteEtaModel) SetNotes(v []NoteModel) {
	o.Notes = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *RouteEtaModel) GetFiles() []FileModel {
	if o == nil || o.Files == nil {
		var ret []FileModel
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetFilesOk() (*[]FileModel, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *RouteEtaModel) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []FileModel and assigns it to the Files field.
func (o *RouteEtaModel) SetFiles(v []FileModel) {
	o.Files = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RouteEtaModel) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RouteEtaModel) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *RouteEtaModel) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *RouteEtaModel) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *RouteEtaModel) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *RouteEtaModel) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *RouteEtaModel) GetTags() []TagModel {
	if o == nil || o.Tags == nil {
		var ret []TagModel
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetTagsOk() (*[]TagModel, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *RouteEtaModel) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagModel and assigns it to the Tags field.
func (o *RouteEtaModel) SetTags(v []TagModel) {
	o.Tags = &v
}

// GetTagNames returns the TagNames field value if set, zero value otherwise.
func (o *RouteEtaModel) GetTagNames() []string {
	if o == nil || o.TagNames == nil {
		var ret []string
		return ret
	}
	return *o.TagNames
}

// GetTagNamesOk returns a tuple with the TagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetTagNamesOk() (*[]string, bool) {
	if o == nil || o.TagNames == nil {
		return nil, false
	}
	return o.TagNames, true
}

// HasTagNames returns a boolean if a field has been set.
func (o *RouteEtaModel) HasTagNames() bool {
	if o != nil && o.TagNames != nil {
		return true
	}

	return false
}

// SetTagNames gets a reference to the given []string and assigns it to the TagNames field.
func (o *RouteEtaModel) SetTagNames(v []string) {
	o.TagNames = &v
}

// GetZones returns the Zones field value if set, zero value otherwise.
func (o *RouteEtaModel) GetZones() []ZoneModel {
	if o == nil || o.Zones == nil {
		var ret []ZoneModel
		return ret
	}
	return *o.Zones
}

// GetZonesOk returns a tuple with the Zones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetZonesOk() (*[]ZoneModel, bool) {
	if o == nil || o.Zones == nil {
		return nil, false
	}
	return o.Zones, true
}

// HasZones returns a boolean if a field has been set.
func (o *RouteEtaModel) HasZones() bool {
	if o != nil && o.Zones != nil {
		return true
	}

	return false
}

// SetZones gets a reference to the given []ZoneModel and assigns it to the Zones field.
func (o *RouteEtaModel) SetZones(v []ZoneModel) {
	o.Zones = &v
}

// GetZoneNames returns the ZoneNames field value if set, zero value otherwise.
func (o *RouteEtaModel) GetZoneNames() []string {
	if o == nil || o.ZoneNames == nil {
		var ret []string
		return ret
	}
	return *o.ZoneNames
}

// GetZoneNamesOk returns a tuple with the ZoneNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteEtaModel) GetZoneNamesOk() (*[]string, bool) {
	if o == nil || o.ZoneNames == nil {
		return nil, false
	}
	return o.ZoneNames, true
}

// HasZoneNames returns a boolean if a field has been set.
func (o *RouteEtaModel) HasZoneNames() bool {
	if o != nil && o.ZoneNames != nil {
		return true
	}

	return false
}

// SetZoneNames gets a reference to the given []string and assigns it to the ZoneNames field.
func (o *RouteEtaModel) SetZoneNames(v []string) {
	o.ZoneNames = &v
}

func (o RouteEtaModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActivitiesEta != nil {
		toSerialize["activities_eta"] = o.ActivitiesEta
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Nr != nil {
		toSerialize["nr"] = o.Nr
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.StatusName != nil {
		toSerialize["status_name"] = o.StatusName
	}
	if o.StatusId != nil {
		toSerialize["status_id"] = o.StatusId
	}
	if o.NrOfStops != nil {
		toSerialize["nr_of_stops"] = o.NrOfStops
	}
	if o.PauseId != nil {
		toSerialize["pause_id"] = o.PauseId
	}
	if o.Pause != nil {
		toSerialize["pause"] = o.Pause
	}
	if o.DriverId != nil {
		toSerialize["driver_id"] = o.DriverId
	}
	if o.DriverLink != nil {
		toSerialize["driver_link"] = o.DriverLink
	}
	if o.DriverLinks != nil {
		toSerialize["driver_links"] = o.DriverLinks
	}
	if o.Driver != nil {
		toSerialize["driver"] = o.Driver
	}
	if o.UserLink != nil {
		toSerialize["user_link"] = o.UserLink
	}
	if o.CoDriverIds != nil {
		toSerialize["co_driver_ids"] = o.CoDriverIds
	}
	if o.CoDrivers != nil {
		toSerialize["co_drivers"] = o.CoDrivers
	}
	if o.CarId != nil {
		toSerialize["car_id"] = o.CarId
	}
	if o.VehicleId != nil {
		toSerialize["vehicle_id"] = o.VehicleId
	}
	if o.VehicleLink != nil {
		toSerialize["vehicle_link"] = o.VehicleLink
	}
	if o.Vehicle != nil {
		toSerialize["vehicle"] = o.Vehicle
	}
	if o.CarLink != nil {
		toSerialize["car_link"] = o.CarLink
	}
	if o.Car != nil {
		toSerialize["car"] = o.Car
	}
	if o.TrailerId != nil {
		toSerialize["trailer_id"] = o.TrailerId
	}
	if o.TrailerLink != nil {
		toSerialize["trailer_link"] = o.TrailerLink
	}
	if o.Trailer != nil {
		toSerialize["trailer"] = o.Trailer
	}
	if o.Equipment != nil {
		toSerialize["equipment"] = o.Equipment
	}
	if o.EquipmentIds != nil {
		toSerialize["equipment_ids"] = o.EquipmentIds
	}
	if o.PlannedStartDuration != nil {
		toSerialize["planned_start_duration"] = o.PlannedStartDuration
	}
	if o.PlannedEndDuration != nil {
		toSerialize["planned_end_duration"] = o.PlannedEndDuration
	}
	if o.MaxSpeed != nil {
		toSerialize["max_speed"] = o.MaxSpeed
	}
	if o.SpeedFactor != nil {
		toSerialize["speed_factor"] = o.SpeedFactor
	}
	if o.DurationFactor != nil {
		toSerialize["duration_factor"] = o.DurationFactor
	}
	if o.CostPerMeter != nil {
		toSerialize["cost_per_meter"] = o.CostPerMeter
	}
	if o.CostPerRoute != nil {
		toSerialize["cost_per_route"] = o.CostPerRoute
	}
	if o.CostPerDrivingMinute != nil {
		toSerialize["cost_per_driving_minute"] = o.CostPerDrivingMinute
	}
	if o.CostPerWaitingMinute != nil {
		toSerialize["cost_per_waiting_minute"] = o.CostPerWaitingMinute
	}
	if o.CostPerServiceMinute != nil {
		toSerialize["cost_per_service_minute"] = o.CostPerServiceMinute
	}
	if o.EarliestDate != nil {
		toSerialize["earliest_date"] = o.EarliestDate
	}
	if o.LatestDate != nil {
		toSerialize["latest_date"] = o.LatestDate
	}
	if o.EarliestDateTime != nil {
		toSerialize["earliest_date_time"] = o.EarliestDateTime
	}
	if o.LatestDateTime != nil {
		toSerialize["latest_date_time"] = o.LatestDateTime
	}
	if o.PlannedDateTimeFrom != nil {
		toSerialize["planned_date_time_from"] = o.PlannedDateTimeFrom
	}
	if o.PlannedDateTimeTo != nil {
		toSerialize["planned_date_time_to"] = o.PlannedDateTimeTo
	}
	if o.ExecutedDateTimeFrom != nil {
		toSerialize["executed_date_time_from"] = o.ExecutedDateTimeFrom
	}
	if o.ExecutedDateTimeTo != nil {
		toSerialize["executed_date_time_to"] = o.ExecutedDateTimeTo
	}
	if o.PlannedDrivingDistance != nil {
		toSerialize["planned_driving_distance"] = o.PlannedDrivingDistance
	}
	if o.PlannedDrivingDuration != nil {
		toSerialize["planned_driving_duration"] = o.PlannedDrivingDuration
	}
	if o.PlannedWaitingDuration != nil {
		toSerialize["planned_waiting_duration"] = o.PlannedWaitingDuration
	}
	if o.PlannedActivityDuration != nil {
		toSerialize["planned_activity_duration"] = o.PlannedActivityDuration
	}
	if o.PlannedTotalDuration != nil {
		toSerialize["planned_total_duration"] = o.PlannedTotalDuration
	}
	if o.GpsLocations != nil {
		toSerialize["gps_locations"] = o.GpsLocations
	}
	if o.LatestKnownPosition != nil {
		toSerialize["latest_known_position"] = o.LatestKnownPosition
	}
	if o.RecurrenceId != nil {
		toSerialize["recurrence_id"] = o.RecurrenceId
	}
	if o.RecurrenceNr != nil {
		toSerialize["recurrence_nr"] = o.RecurrenceNr
	}
	if o.Recurrence != nil {
		toSerialize["recurrence"] = o.Recurrence
	}
	if o.Overdue != nil {
		toSerialize["overdue"] = o.Overdue
	}
	if o.Optimized != nil {
		toSerialize["optimized"] = o.Optimized
	}
	if o.Blocked != nil {
		toSerialize["blocked"] = o.Blocked
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.StartAddress != nil {
		toSerialize["start_address"] = o.StartAddress
	}
	if o.EndAddress != nil {
		toSerialize["end_address"] = o.EndAddress
	}
	if o.PlannedCapacities != nil {
		toSerialize["planned_capacities"] = o.PlannedCapacities
	}
	if o.AppliedCapacities != nil {
		toSerialize["applied_capacities"] = o.AppliedCapacities
	}
	if o.Capacities != nil {
		toSerialize["capacities"] = o.Capacities
	}
	if o.ActivityIds != nil {
		toSerialize["activity_ids"] = o.ActivityIds
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.MetaData != nil {
		toSerialize["meta_data"] = o.MetaData
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TagNames != nil {
		toSerialize["tag_names"] = o.TagNames
	}
	if o.Zones != nil {
		toSerialize["zones"] = o.Zones
	}
	if o.ZoneNames != nil {
		toSerialize["zone_names"] = o.ZoneNames
	}
	return json.Marshal(toSerialize)
}

type NullableRouteEtaModel struct {
	value *RouteEtaModel
	isSet bool
}

func (v NullableRouteEtaModel) Get() *RouteEtaModel {
	return v.value
}

func (v *NullableRouteEtaModel) Set(val *RouteEtaModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteEtaModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteEtaModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteEtaModel(val *RouteEtaModel) *NullableRouteEtaModel {
	return &NullableRouteEtaModel{value: val, isSet: true}
}

func (v NullableRouteEtaModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteEtaModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


