/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// FileModel struct for FileModel
type FileModel struct {
	// 
	Id *int64 `json:"id,omitempty"`
	// 
	Uuid *string `json:"uuid,omitempty"`
	// 
	FileTypeId *int64 `json:"file_type_id,omitempty"`
	// 
	FileTypeName *string `json:"file_type_name,omitempty"`
	// 
	ObjectId *int64 `json:"object_id,omitempty"`
	// Object type ID
	ObjectType *int64 `json:"object_type,omitempty"`
	// Object type name
	ObjectTypeName *string `json:"object_type_name,omitempty"`
	// 
	Reference *string `json:"reference,omitempty"`
	// 
	Location *string `json:"location,omitempty"`
	// 
	Base64 *string `json:"base64,omitempty"`
	// 
	MetaData *[]MetaDataModel `json:"meta_data,omitempty"`
	// 
	CreatedBy *int64 `json:"created_by,omitempty"`
	// 
	UpdatedBy *int64 `json:"updated_by,omitempty"`
	// created_at
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// updated_at
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// 
	Links *[]LinkModel `json:"links,omitempty"`
}

// NewFileModel instantiates a new FileModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileModel() *FileModel {
	this := FileModel{}
	return &this
}

// NewFileModelWithDefaults instantiates a new FileModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileModelWithDefaults() *FileModel {
	this := FileModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FileModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FileModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FileModel) SetId(v int64) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *FileModel) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *FileModel) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *FileModel) SetUuid(v string) {
	o.Uuid = &v
}

// GetFileTypeId returns the FileTypeId field value if set, zero value otherwise.
func (o *FileModel) GetFileTypeId() int64 {
	if o == nil || o.FileTypeId == nil {
		var ret int64
		return ret
	}
	return *o.FileTypeId
}

// GetFileTypeIdOk returns a tuple with the FileTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetFileTypeIdOk() (*int64, bool) {
	if o == nil || o.FileTypeId == nil {
		return nil, false
	}
	return o.FileTypeId, true
}

// HasFileTypeId returns a boolean if a field has been set.
func (o *FileModel) HasFileTypeId() bool {
	if o != nil && o.FileTypeId != nil {
		return true
	}

	return false
}

// SetFileTypeId gets a reference to the given int64 and assigns it to the FileTypeId field.
func (o *FileModel) SetFileTypeId(v int64) {
	o.FileTypeId = &v
}

// GetFileTypeName returns the FileTypeName field value if set, zero value otherwise.
func (o *FileModel) GetFileTypeName() string {
	if o == nil || o.FileTypeName == nil {
		var ret string
		return ret
	}
	return *o.FileTypeName
}

// GetFileTypeNameOk returns a tuple with the FileTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetFileTypeNameOk() (*string, bool) {
	if o == nil || o.FileTypeName == nil {
		return nil, false
	}
	return o.FileTypeName, true
}

// HasFileTypeName returns a boolean if a field has been set.
func (o *FileModel) HasFileTypeName() bool {
	if o != nil && o.FileTypeName != nil {
		return true
	}

	return false
}

// SetFileTypeName gets a reference to the given string and assigns it to the FileTypeName field.
func (o *FileModel) SetFileTypeName(v string) {
	o.FileTypeName = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *FileModel) GetObjectId() int64 {
	if o == nil || o.ObjectId == nil {
		var ret int64
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetObjectIdOk() (*int64, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *FileModel) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given int64 and assigns it to the ObjectId field.
func (o *FileModel) SetObjectId(v int64) {
	o.ObjectId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *FileModel) GetObjectType() int64 {
	if o == nil || o.ObjectType == nil {
		var ret int64
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetObjectTypeOk() (*int64, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *FileModel) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given int64 and assigns it to the ObjectType field.
func (o *FileModel) SetObjectType(v int64) {
	o.ObjectType = &v
}

// GetObjectTypeName returns the ObjectTypeName field value if set, zero value otherwise.
func (o *FileModel) GetObjectTypeName() string {
	if o == nil || o.ObjectTypeName == nil {
		var ret string
		return ret
	}
	return *o.ObjectTypeName
}

// GetObjectTypeNameOk returns a tuple with the ObjectTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetObjectTypeNameOk() (*string, bool) {
	if o == nil || o.ObjectTypeName == nil {
		return nil, false
	}
	return o.ObjectTypeName, true
}

// HasObjectTypeName returns a boolean if a field has been set.
func (o *FileModel) HasObjectTypeName() bool {
	if o != nil && o.ObjectTypeName != nil {
		return true
	}

	return false
}

// SetObjectTypeName gets a reference to the given string and assigns it to the ObjectTypeName field.
func (o *FileModel) SetObjectTypeName(v string) {
	o.ObjectTypeName = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *FileModel) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *FileModel) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *FileModel) SetReference(v string) {
	o.Reference = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *FileModel) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *FileModel) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *FileModel) SetLocation(v string) {
	o.Location = &v
}

// GetBase64 returns the Base64 field value if set, zero value otherwise.
func (o *FileModel) GetBase64() string {
	if o == nil || o.Base64 == nil {
		var ret string
		return ret
	}
	return *o.Base64
}

// GetBase64Ok returns a tuple with the Base64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetBase64Ok() (*string, bool) {
	if o == nil || o.Base64 == nil {
		return nil, false
	}
	return o.Base64, true
}

// HasBase64 returns a boolean if a field has been set.
func (o *FileModel) HasBase64() bool {
	if o != nil && o.Base64 != nil {
		return true
	}

	return false
}

// SetBase64 gets a reference to the given string and assigns it to the Base64 field.
func (o *FileModel) SetBase64(v string) {
	o.Base64 = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *FileModel) GetMetaData() []MetaDataModel {
	if o == nil || o.MetaData == nil {
		var ret []MetaDataModel
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetMetaDataOk() (*[]MetaDataModel, bool) {
	if o == nil || o.MetaData == nil {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *FileModel) HasMetaData() bool {
	if o != nil && o.MetaData != nil {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given []MetaDataModel and assigns it to the MetaData field.
func (o *FileModel) SetMetaData(v []MetaDataModel) {
	o.MetaData = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *FileModel) GetCreatedBy() int64 {
	if o == nil || o.CreatedBy == nil {
		var ret int64
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetCreatedByOk() (*int64, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *FileModel) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given int64 and assigns it to the CreatedBy field.
func (o *FileModel) SetCreatedBy(v int64) {
	o.CreatedBy = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *FileModel) GetUpdatedBy() int64 {
	if o == nil || o.UpdatedBy == nil {
		var ret int64
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetUpdatedByOk() (*int64, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *FileModel) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given int64 and assigns it to the UpdatedBy field.
func (o *FileModel) SetUpdatedBy(v int64) {
	o.UpdatedBy = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FileModel) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FileModel) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *FileModel) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FileModel) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FileModel) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *FileModel) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *FileModel) GetLinks() []LinkModel {
	if o == nil || o.Links == nil {
		var ret []LinkModel
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileModel) GetLinksOk() (*[]LinkModel, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *FileModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkModel and assigns it to the Links field.
func (o *FileModel) SetLinks(v []LinkModel) {
	o.Links = &v
}

func (o FileModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.FileTypeId != nil {
		toSerialize["file_type_id"] = o.FileTypeId
	}
	if o.FileTypeName != nil {
		toSerialize["file_type_name"] = o.FileTypeName
	}
	if o.ObjectId != nil {
		toSerialize["object_id"] = o.ObjectId
	}
	if o.ObjectType != nil {
		toSerialize["object_type"] = o.ObjectType
	}
	if o.ObjectTypeName != nil {
		toSerialize["object_type_name"] = o.ObjectTypeName
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Base64 != nil {
		toSerialize["base64"] = o.Base64
	}
	if o.MetaData != nil {
		toSerialize["meta_data"] = o.MetaData
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if o.UpdatedBy != nil {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableFileModel struct {
	value *FileModel
	isSet bool
}

func (v NullableFileModel) Get() *FileModel {
	return v.value
}

func (v *NullableFileModel) Set(val *FileModel) {
	v.value = val
	v.isSet = true
}

func (v NullableFileModel) IsSet() bool {
	return v.isSet
}

func (v *NullableFileModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileModel(val *FileModel) *NullableFileModel {
	return &NullableFileModel{value: val, isSet: true}
}

func (v NullableFileModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


