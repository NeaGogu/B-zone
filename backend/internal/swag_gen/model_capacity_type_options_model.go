/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CapacityTypeOptionsModel struct for CapacityTypeOptionsModel
type CapacityTypeOptionsModel struct {
	// 
	IncludeUom *bool `json:"include_uom,omitempty"`
	// 
	IncludeUomGroup *bool `json:"include_uom_group,omitempty"`
	// 
	IncludeUomName *bool `json:"include_uom_name,omitempty"`
}

// NewCapacityTypeOptionsModel instantiates a new CapacityTypeOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapacityTypeOptionsModel() *CapacityTypeOptionsModel {
	this := CapacityTypeOptionsModel{}
	return &this
}

// NewCapacityTypeOptionsModelWithDefaults instantiates a new CapacityTypeOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapacityTypeOptionsModelWithDefaults() *CapacityTypeOptionsModel {
	this := CapacityTypeOptionsModel{}
	return &this
}

// GetIncludeUom returns the IncludeUom field value if set, zero value otherwise.
func (o *CapacityTypeOptionsModel) GetIncludeUom() bool {
	if o == nil || o.IncludeUom == nil {
		var ret bool
		return ret
	}
	return *o.IncludeUom
}

// GetIncludeUomOk returns a tuple with the IncludeUom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityTypeOptionsModel) GetIncludeUomOk() (*bool, bool) {
	if o == nil || o.IncludeUom == nil {
		return nil, false
	}
	return o.IncludeUom, true
}

// HasIncludeUom returns a boolean if a field has been set.
func (o *CapacityTypeOptionsModel) HasIncludeUom() bool {
	if o != nil && o.IncludeUom != nil {
		return true
	}

	return false
}

// SetIncludeUom gets a reference to the given bool and assigns it to the IncludeUom field.
func (o *CapacityTypeOptionsModel) SetIncludeUom(v bool) {
	o.IncludeUom = &v
}

// GetIncludeUomGroup returns the IncludeUomGroup field value if set, zero value otherwise.
func (o *CapacityTypeOptionsModel) GetIncludeUomGroup() bool {
	if o == nil || o.IncludeUomGroup == nil {
		var ret bool
		return ret
	}
	return *o.IncludeUomGroup
}

// GetIncludeUomGroupOk returns a tuple with the IncludeUomGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityTypeOptionsModel) GetIncludeUomGroupOk() (*bool, bool) {
	if o == nil || o.IncludeUomGroup == nil {
		return nil, false
	}
	return o.IncludeUomGroup, true
}

// HasIncludeUomGroup returns a boolean if a field has been set.
func (o *CapacityTypeOptionsModel) HasIncludeUomGroup() bool {
	if o != nil && o.IncludeUomGroup != nil {
		return true
	}

	return false
}

// SetIncludeUomGroup gets a reference to the given bool and assigns it to the IncludeUomGroup field.
func (o *CapacityTypeOptionsModel) SetIncludeUomGroup(v bool) {
	o.IncludeUomGroup = &v
}

// GetIncludeUomName returns the IncludeUomName field value if set, zero value otherwise.
func (o *CapacityTypeOptionsModel) GetIncludeUomName() bool {
	if o == nil || o.IncludeUomName == nil {
		var ret bool
		return ret
	}
	return *o.IncludeUomName
}

// GetIncludeUomNameOk returns a tuple with the IncludeUomName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapacityTypeOptionsModel) GetIncludeUomNameOk() (*bool, bool) {
	if o == nil || o.IncludeUomName == nil {
		return nil, false
	}
	return o.IncludeUomName, true
}

// HasIncludeUomName returns a boolean if a field has been set.
func (o *CapacityTypeOptionsModel) HasIncludeUomName() bool {
	if o != nil && o.IncludeUomName != nil {
		return true
	}

	return false
}

// SetIncludeUomName gets a reference to the given bool and assigns it to the IncludeUomName field.
func (o *CapacityTypeOptionsModel) SetIncludeUomName(v bool) {
	o.IncludeUomName = &v
}

func (o CapacityTypeOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeUom != nil {
		toSerialize["include_uom"] = o.IncludeUom
	}
	if o.IncludeUomGroup != nil {
		toSerialize["include_uom_group"] = o.IncludeUomGroup
	}
	if o.IncludeUomName != nil {
		toSerialize["include_uom_name"] = o.IncludeUomName
	}
	return json.Marshal(toSerialize)
}

type NullableCapacityTypeOptionsModel struct {
	value *CapacityTypeOptionsModel
	isSet bool
}

func (v NullableCapacityTypeOptionsModel) Get() *CapacityTypeOptionsModel {
	return v.value
}

func (v *NullableCapacityTypeOptionsModel) Set(val *CapacityTypeOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCapacityTypeOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCapacityTypeOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapacityTypeOptionsModel(val *CapacityTypeOptionsModel) *NullableCapacityTypeOptionsModel {
	return &NullableCapacityTypeOptionsModel{value: val, isSet: true}
}

func (v NullableCapacityTypeOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapacityTypeOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


