/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AvailabilityTimeSlotModel struct for AvailabilityTimeSlotModel
type AvailabilityTimeSlotModel struct {
	// 
	Id *int64 `json:"id,omitempty"`
	// unique key per analyzed time slot, uuid type
	Key *string `json:"key,omitempty"`
	// 
	DateTimeFrom *time.Time `json:"date_time_from,omitempty"`
	// 
	DateTimeTo *time.Time `json:"date_time_to,omitempty"`
	// 
	ProposedPlanDateTimeFrom *time.Time `json:"proposed_plan_date_time_from,omitempty"`
	// 
	ProposedPlanDateTimeTo *time.Time `json:"proposed_plan_date_time_to,omitempty"`
	ProposedDriver *DriverModel `json:"proposed_driver,omitempty"`
	// 
	Impact *[]AvailabilityTimeSlotImpactModel `json:"impact,omitempty"`
	// 
	FollowUpTimeSlots *[]AvailabilityFollowUpTimeSlotModel `json:"follow_up_time_slots,omitempty"`
}

// NewAvailabilityTimeSlotModel instantiates a new AvailabilityTimeSlotModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailabilityTimeSlotModel() *AvailabilityTimeSlotModel {
	this := AvailabilityTimeSlotModel{}
	return &this
}

// NewAvailabilityTimeSlotModelWithDefaults instantiates a new AvailabilityTimeSlotModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailabilityTimeSlotModelWithDefaults() *AvailabilityTimeSlotModel {
	this := AvailabilityTimeSlotModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AvailabilityTimeSlotModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityTimeSlotModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AvailabilityTimeSlotModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AvailabilityTimeSlotModel) SetId(v int64) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *AvailabilityTimeSlotModel) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityTimeSlotModel) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *AvailabilityTimeSlotModel) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *AvailabilityTimeSlotModel) SetKey(v string) {
	o.Key = &v
}

// GetDateTimeFrom returns the DateTimeFrom field value if set, zero value otherwise.
func (o *AvailabilityTimeSlotModel) GetDateTimeFrom() time.Time {
	if o == nil || o.DateTimeFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeFrom
}

// GetDateTimeFromOk returns a tuple with the DateTimeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityTimeSlotModel) GetDateTimeFromOk() (*time.Time, bool) {
	if o == nil || o.DateTimeFrom == nil {
		return nil, false
	}
	return o.DateTimeFrom, true
}

// HasDateTimeFrom returns a boolean if a field has been set.
func (o *AvailabilityTimeSlotModel) HasDateTimeFrom() bool {
	if o != nil && o.DateTimeFrom != nil {
		return true
	}

	return false
}

// SetDateTimeFrom gets a reference to the given time.Time and assigns it to the DateTimeFrom field.
func (o *AvailabilityTimeSlotModel) SetDateTimeFrom(v time.Time) {
	o.DateTimeFrom = &v
}

// GetDateTimeTo returns the DateTimeTo field value if set, zero value otherwise.
func (o *AvailabilityTimeSlotModel) GetDateTimeTo() time.Time {
	if o == nil || o.DateTimeTo == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeTo
}

// GetDateTimeToOk returns a tuple with the DateTimeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityTimeSlotModel) GetDateTimeToOk() (*time.Time, bool) {
	if o == nil || o.DateTimeTo == nil {
		return nil, false
	}
	return o.DateTimeTo, true
}

// HasDateTimeTo returns a boolean if a field has been set.
func (o *AvailabilityTimeSlotModel) HasDateTimeTo() bool {
	if o != nil && o.DateTimeTo != nil {
		return true
	}

	return false
}

// SetDateTimeTo gets a reference to the given time.Time and assigns it to the DateTimeTo field.
func (o *AvailabilityTimeSlotModel) SetDateTimeTo(v time.Time) {
	o.DateTimeTo = &v
}

// GetProposedPlanDateTimeFrom returns the ProposedPlanDateTimeFrom field value if set, zero value otherwise.
func (o *AvailabilityTimeSlotModel) GetProposedPlanDateTimeFrom() time.Time {
	if o == nil || o.ProposedPlanDateTimeFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.ProposedPlanDateTimeFrom
}

// GetProposedPlanDateTimeFromOk returns a tuple with the ProposedPlanDateTimeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityTimeSlotModel) GetProposedPlanDateTimeFromOk() (*time.Time, bool) {
	if o == nil || o.ProposedPlanDateTimeFrom == nil {
		return nil, false
	}
	return o.ProposedPlanDateTimeFrom, true
}

// HasProposedPlanDateTimeFrom returns a boolean if a field has been set.
func (o *AvailabilityTimeSlotModel) HasProposedPlanDateTimeFrom() bool {
	if o != nil && o.ProposedPlanDateTimeFrom != nil {
		return true
	}

	return false
}

// SetProposedPlanDateTimeFrom gets a reference to the given time.Time and assigns it to the ProposedPlanDateTimeFrom field.
func (o *AvailabilityTimeSlotModel) SetProposedPlanDateTimeFrom(v time.Time) {
	o.ProposedPlanDateTimeFrom = &v
}

// GetProposedPlanDateTimeTo returns the ProposedPlanDateTimeTo field value if set, zero value otherwise.
func (o *AvailabilityTimeSlotModel) GetProposedPlanDateTimeTo() time.Time {
	if o == nil || o.ProposedPlanDateTimeTo == nil {
		var ret time.Time
		return ret
	}
	return *o.ProposedPlanDateTimeTo
}

// GetProposedPlanDateTimeToOk returns a tuple with the ProposedPlanDateTimeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityTimeSlotModel) GetProposedPlanDateTimeToOk() (*time.Time, bool) {
	if o == nil || o.ProposedPlanDateTimeTo == nil {
		return nil, false
	}
	return o.ProposedPlanDateTimeTo, true
}

// HasProposedPlanDateTimeTo returns a boolean if a field has been set.
func (o *AvailabilityTimeSlotModel) HasProposedPlanDateTimeTo() bool {
	if o != nil && o.ProposedPlanDateTimeTo != nil {
		return true
	}

	return false
}

// SetProposedPlanDateTimeTo gets a reference to the given time.Time and assigns it to the ProposedPlanDateTimeTo field.
func (o *AvailabilityTimeSlotModel) SetProposedPlanDateTimeTo(v time.Time) {
	o.ProposedPlanDateTimeTo = &v
}

// GetProposedDriver returns the ProposedDriver field value if set, zero value otherwise.
func (o *AvailabilityTimeSlotModel) GetProposedDriver() DriverModel {
	if o == nil || o.ProposedDriver == nil {
		var ret DriverModel
		return ret
	}
	return *o.ProposedDriver
}

// GetProposedDriverOk returns a tuple with the ProposedDriver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityTimeSlotModel) GetProposedDriverOk() (*DriverModel, bool) {
	if o == nil || o.ProposedDriver == nil {
		return nil, false
	}
	return o.ProposedDriver, true
}

// HasProposedDriver returns a boolean if a field has been set.
func (o *AvailabilityTimeSlotModel) HasProposedDriver() bool {
	if o != nil && o.ProposedDriver != nil {
		return true
	}

	return false
}

// SetProposedDriver gets a reference to the given DriverModel and assigns it to the ProposedDriver field.
func (o *AvailabilityTimeSlotModel) SetProposedDriver(v DriverModel) {
	o.ProposedDriver = &v
}

// GetImpact returns the Impact field value if set, zero value otherwise.
func (o *AvailabilityTimeSlotModel) GetImpact() []AvailabilityTimeSlotImpactModel {
	if o == nil || o.Impact == nil {
		var ret []AvailabilityTimeSlotImpactModel
		return ret
	}
	return *o.Impact
}

// GetImpactOk returns a tuple with the Impact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityTimeSlotModel) GetImpactOk() (*[]AvailabilityTimeSlotImpactModel, bool) {
	if o == nil || o.Impact == nil {
		return nil, false
	}
	return o.Impact, true
}

// HasImpact returns a boolean if a field has been set.
func (o *AvailabilityTimeSlotModel) HasImpact() bool {
	if o != nil && o.Impact != nil {
		return true
	}

	return false
}

// SetImpact gets a reference to the given []AvailabilityTimeSlotImpactModel and assigns it to the Impact field.
func (o *AvailabilityTimeSlotModel) SetImpact(v []AvailabilityTimeSlotImpactModel) {
	o.Impact = &v
}

// GetFollowUpTimeSlots returns the FollowUpTimeSlots field value if set, zero value otherwise.
func (o *AvailabilityTimeSlotModel) GetFollowUpTimeSlots() []AvailabilityFollowUpTimeSlotModel {
	if o == nil || o.FollowUpTimeSlots == nil {
		var ret []AvailabilityFollowUpTimeSlotModel
		return ret
	}
	return *o.FollowUpTimeSlots
}

// GetFollowUpTimeSlotsOk returns a tuple with the FollowUpTimeSlots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityTimeSlotModel) GetFollowUpTimeSlotsOk() (*[]AvailabilityFollowUpTimeSlotModel, bool) {
	if o == nil || o.FollowUpTimeSlots == nil {
		return nil, false
	}
	return o.FollowUpTimeSlots, true
}

// HasFollowUpTimeSlots returns a boolean if a field has been set.
func (o *AvailabilityTimeSlotModel) HasFollowUpTimeSlots() bool {
	if o != nil && o.FollowUpTimeSlots != nil {
		return true
	}

	return false
}

// SetFollowUpTimeSlots gets a reference to the given []AvailabilityFollowUpTimeSlotModel and assigns it to the FollowUpTimeSlots field.
func (o *AvailabilityTimeSlotModel) SetFollowUpTimeSlots(v []AvailabilityFollowUpTimeSlotModel) {
	o.FollowUpTimeSlots = &v
}

func (o AvailabilityTimeSlotModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.DateTimeFrom != nil {
		toSerialize["date_time_from"] = o.DateTimeFrom
	}
	if o.DateTimeTo != nil {
		toSerialize["date_time_to"] = o.DateTimeTo
	}
	if o.ProposedPlanDateTimeFrom != nil {
		toSerialize["proposed_plan_date_time_from"] = o.ProposedPlanDateTimeFrom
	}
	if o.ProposedPlanDateTimeTo != nil {
		toSerialize["proposed_plan_date_time_to"] = o.ProposedPlanDateTimeTo
	}
	if o.ProposedDriver != nil {
		toSerialize["proposed_driver"] = o.ProposedDriver
	}
	if o.Impact != nil {
		toSerialize["impact"] = o.Impact
	}
	if o.FollowUpTimeSlots != nil {
		toSerialize["follow_up_time_slots"] = o.FollowUpTimeSlots
	}
	return json.Marshal(toSerialize)
}

type NullableAvailabilityTimeSlotModel struct {
	value *AvailabilityTimeSlotModel
	isSet bool
}

func (v NullableAvailabilityTimeSlotModel) Get() *AvailabilityTimeSlotModel {
	return v.value
}

func (v *NullableAvailabilityTimeSlotModel) Set(val *AvailabilityTimeSlotModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailabilityTimeSlotModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailabilityTimeSlotModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailabilityTimeSlotModel(val *AvailabilityTimeSlotModel) *NullableAvailabilityTimeSlotModel {
	return &NullableAvailabilityTimeSlotModel{value: val, isSet: true}
}

func (v NullableAvailabilityTimeSlotModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailabilityTimeSlotModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


