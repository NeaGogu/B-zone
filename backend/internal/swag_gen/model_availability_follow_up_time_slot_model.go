/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AvailabilityFollowUpTimeSlotModel struct for AvailabilityFollowUpTimeSlotModel
type AvailabilityFollowUpTimeSlotModel struct {
	// 
	DateTimeFrom *time.Time `json:"date_time_from,omitempty"`
	// 
	DateTimeTo *time.Time `json:"date_time_to,omitempty"`
	// 
	ProposedPlanDateTimeFrom *time.Time `json:"proposed_plan_date_time_from,omitempty"`
	// 
	ProposedPlanDateTimeTo *time.Time `json:"proposed_plan_date_time_to,omitempty"`
	ProposedDriver *DriverModel `json:"proposed_driver,omitempty"`
}

// NewAvailabilityFollowUpTimeSlotModel instantiates a new AvailabilityFollowUpTimeSlotModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailabilityFollowUpTimeSlotModel() *AvailabilityFollowUpTimeSlotModel {
	this := AvailabilityFollowUpTimeSlotModel{}
	return &this
}

// NewAvailabilityFollowUpTimeSlotModelWithDefaults instantiates a new AvailabilityFollowUpTimeSlotModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailabilityFollowUpTimeSlotModelWithDefaults() *AvailabilityFollowUpTimeSlotModel {
	this := AvailabilityFollowUpTimeSlotModel{}
	return &this
}

// GetDateTimeFrom returns the DateTimeFrom field value if set, zero value otherwise.
func (o *AvailabilityFollowUpTimeSlotModel) GetDateTimeFrom() time.Time {
	if o == nil || o.DateTimeFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeFrom
}

// GetDateTimeFromOk returns a tuple with the DateTimeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityFollowUpTimeSlotModel) GetDateTimeFromOk() (*time.Time, bool) {
	if o == nil || o.DateTimeFrom == nil {
		return nil, false
	}
	return o.DateTimeFrom, true
}

// HasDateTimeFrom returns a boolean if a field has been set.
func (o *AvailabilityFollowUpTimeSlotModel) HasDateTimeFrom() bool {
	if o != nil && o.DateTimeFrom != nil {
		return true
	}

	return false
}

// SetDateTimeFrom gets a reference to the given time.Time and assigns it to the DateTimeFrom field.
func (o *AvailabilityFollowUpTimeSlotModel) SetDateTimeFrom(v time.Time) {
	o.DateTimeFrom = &v
}

// GetDateTimeTo returns the DateTimeTo field value if set, zero value otherwise.
func (o *AvailabilityFollowUpTimeSlotModel) GetDateTimeTo() time.Time {
	if o == nil || o.DateTimeTo == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeTo
}

// GetDateTimeToOk returns a tuple with the DateTimeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityFollowUpTimeSlotModel) GetDateTimeToOk() (*time.Time, bool) {
	if o == nil || o.DateTimeTo == nil {
		return nil, false
	}
	return o.DateTimeTo, true
}

// HasDateTimeTo returns a boolean if a field has been set.
func (o *AvailabilityFollowUpTimeSlotModel) HasDateTimeTo() bool {
	if o != nil && o.DateTimeTo != nil {
		return true
	}

	return false
}

// SetDateTimeTo gets a reference to the given time.Time and assigns it to the DateTimeTo field.
func (o *AvailabilityFollowUpTimeSlotModel) SetDateTimeTo(v time.Time) {
	o.DateTimeTo = &v
}

// GetProposedPlanDateTimeFrom returns the ProposedPlanDateTimeFrom field value if set, zero value otherwise.
func (o *AvailabilityFollowUpTimeSlotModel) GetProposedPlanDateTimeFrom() time.Time {
	if o == nil || o.ProposedPlanDateTimeFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.ProposedPlanDateTimeFrom
}

// GetProposedPlanDateTimeFromOk returns a tuple with the ProposedPlanDateTimeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityFollowUpTimeSlotModel) GetProposedPlanDateTimeFromOk() (*time.Time, bool) {
	if o == nil || o.ProposedPlanDateTimeFrom == nil {
		return nil, false
	}
	return o.ProposedPlanDateTimeFrom, true
}

// HasProposedPlanDateTimeFrom returns a boolean if a field has been set.
func (o *AvailabilityFollowUpTimeSlotModel) HasProposedPlanDateTimeFrom() bool {
	if o != nil && o.ProposedPlanDateTimeFrom != nil {
		return true
	}

	return false
}

// SetProposedPlanDateTimeFrom gets a reference to the given time.Time and assigns it to the ProposedPlanDateTimeFrom field.
func (o *AvailabilityFollowUpTimeSlotModel) SetProposedPlanDateTimeFrom(v time.Time) {
	o.ProposedPlanDateTimeFrom = &v
}

// GetProposedPlanDateTimeTo returns the ProposedPlanDateTimeTo field value if set, zero value otherwise.
func (o *AvailabilityFollowUpTimeSlotModel) GetProposedPlanDateTimeTo() time.Time {
	if o == nil || o.ProposedPlanDateTimeTo == nil {
		var ret time.Time
		return ret
	}
	return *o.ProposedPlanDateTimeTo
}

// GetProposedPlanDateTimeToOk returns a tuple with the ProposedPlanDateTimeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityFollowUpTimeSlotModel) GetProposedPlanDateTimeToOk() (*time.Time, bool) {
	if o == nil || o.ProposedPlanDateTimeTo == nil {
		return nil, false
	}
	return o.ProposedPlanDateTimeTo, true
}

// HasProposedPlanDateTimeTo returns a boolean if a field has been set.
func (o *AvailabilityFollowUpTimeSlotModel) HasProposedPlanDateTimeTo() bool {
	if o != nil && o.ProposedPlanDateTimeTo != nil {
		return true
	}

	return false
}

// SetProposedPlanDateTimeTo gets a reference to the given time.Time and assigns it to the ProposedPlanDateTimeTo field.
func (o *AvailabilityFollowUpTimeSlotModel) SetProposedPlanDateTimeTo(v time.Time) {
	o.ProposedPlanDateTimeTo = &v
}

// GetProposedDriver returns the ProposedDriver field value if set, zero value otherwise.
func (o *AvailabilityFollowUpTimeSlotModel) GetProposedDriver() DriverModel {
	if o == nil || o.ProposedDriver == nil {
		var ret DriverModel
		return ret
	}
	return *o.ProposedDriver
}

// GetProposedDriverOk returns a tuple with the ProposedDriver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityFollowUpTimeSlotModel) GetProposedDriverOk() (*DriverModel, bool) {
	if o == nil || o.ProposedDriver == nil {
		return nil, false
	}
	return o.ProposedDriver, true
}

// HasProposedDriver returns a boolean if a field has been set.
func (o *AvailabilityFollowUpTimeSlotModel) HasProposedDriver() bool {
	if o != nil && o.ProposedDriver != nil {
		return true
	}

	return false
}

// SetProposedDriver gets a reference to the given DriverModel and assigns it to the ProposedDriver field.
func (o *AvailabilityFollowUpTimeSlotModel) SetProposedDriver(v DriverModel) {
	o.ProposedDriver = &v
}

func (o AvailabilityFollowUpTimeSlotModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DateTimeFrom != nil {
		toSerialize["date_time_from"] = o.DateTimeFrom
	}
	if o.DateTimeTo != nil {
		toSerialize["date_time_to"] = o.DateTimeTo
	}
	if o.ProposedPlanDateTimeFrom != nil {
		toSerialize["proposed_plan_date_time_from"] = o.ProposedPlanDateTimeFrom
	}
	if o.ProposedPlanDateTimeTo != nil {
		toSerialize["proposed_plan_date_time_to"] = o.ProposedPlanDateTimeTo
	}
	if o.ProposedDriver != nil {
		toSerialize["proposed_driver"] = o.ProposedDriver
	}
	return json.Marshal(toSerialize)
}

type NullableAvailabilityFollowUpTimeSlotModel struct {
	value *AvailabilityFollowUpTimeSlotModel
	isSet bool
}

func (v NullableAvailabilityFollowUpTimeSlotModel) Get() *AvailabilityFollowUpTimeSlotModel {
	return v.value
}

func (v *NullableAvailabilityFollowUpTimeSlotModel) Set(val *AvailabilityFollowUpTimeSlotModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailabilityFollowUpTimeSlotModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailabilityFollowUpTimeSlotModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailabilityFollowUpTimeSlotModel(val *AvailabilityFollowUpTimeSlotModel) *NullableAvailabilityFollowUpTimeSlotModel {
	return &NullableAvailabilityFollowUpTimeSlotModel{value: val, isSet: true}
}

func (v NullableAvailabilityFollowUpTimeSlotModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailabilityFollowUpTimeSlotModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


