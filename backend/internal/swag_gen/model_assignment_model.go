/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AssignmentModel struct for AssignmentModel
type AssignmentModel struct {
	// Unique ID of this Assignment
	Id *int64 `json:"id,omitempty"`
	// Party ID
	PartyId *int64 `json:"party_id,omitempty"`
	// Booking account ID
	BookingAccountId *int64 `json:"booking_account_id,omitempty"`
	// Tag names
	TagNames *[]string `json:"tag_names,omitempty"`
	// Tag ids
	TagIds *[]int32 `json:"tag_ids,omitempty"`
	// 
	Activities *[]ActivityModel `json:"activities,omitempty"`
	BookingAccount *PartyModel `json:"booking_account,omitempty"`
	// Status ID of this Assignment
	StatusId *int64 `json:"status_id,omitempty"`
	// Non-Unique number of this Assignment
	Nr *string `json:"nr,omitempty"`
	// 
	PartyLink *[]LinkModel `json:"party_link,omitempty"`
	// Account Name associated with this Assignment
	AccountName *string `json:"account_name,omitempty"`
	// Party Name associated with this Assignment
	PartyName *string `json:"party_name,omitempty"`
	// Reference text of this Assignment
	Reference *string `json:"reference,omitempty"`
	// Description text of this Assignment
	Description *string `json:"description,omitempty"`
	// Remarks about this Assignment
	Remarks *string `json:"remarks,omitempty"`
	// Earliest start time of all Activities is this Assignment
	DateTimeFrom *time.Time `json:"date_time_from,omitempty"`
	// Latest end time of all Activities is this Assignment
	DateTimeTo *time.Time `json:"date_time_to,omitempty"`
	// Multi day type assignment
	MultiDay *bool `json:"multi_day,omitempty"`
	// 
	Links *[]LinkModel `json:"links,omitempty"`
	// 
	MetaData *[]MetaDataModel `json:"meta_data,omitempty"`
	// 
	Notes *[]NoteModel `json:"notes,omitempty"`
	// 
	Files *[]FileModel `json:"files,omitempty"`
	// created_at date time
	AssignmentCreatedAt *time.Time `json:"assignment_created_at,omitempty"`
	// updated_at date time
	AssignmentUpdatedAt *time.Time `json:"assignment_updated_at,omitempty"`
	// created_by user id
	AssignmentCreatedBy *int32 `json:"assignment_created_by,omitempty"`
	// updated_by user id
	AssignmentUpdatedBy *int32 `json:"assignment_updated_by,omitempty"`
	AssignmentCreatedByUser *UsersModel `json:"assignment_created_by_user,omitempty"`
	AssignmentUpdatedByUser *UsersModel `json:"assignment_updated_by_user,omitempty"`
	// Assignment is active (=true). Inactive assignments are not automatically considered in any of the application algorithms and will not be shown in the Bumbal Gui.
	AssignmentActive *bool `json:"assignment_active,omitempty"`
	// Assignment is removed (=true). Removed assignments are not automatically considered in any of the application algorithms and will not be shown in the Bumbal Gui. Removed assignments are usually irrepairable.
	AssignmentRemoved *bool `json:"assignment_removed,omitempty"`
}

// NewAssignmentModel instantiates a new AssignmentModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignmentModel() *AssignmentModel {
	this := AssignmentModel{}
	return &this
}

// NewAssignmentModelWithDefaults instantiates a new AssignmentModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignmentModelWithDefaults() *AssignmentModel {
	this := AssignmentModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AssignmentModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AssignmentModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AssignmentModel) SetId(v int64) {
	o.Id = &v
}

// GetPartyId returns the PartyId field value if set, zero value otherwise.
func (o *AssignmentModel) GetPartyId() int64 {
	if o == nil || o.PartyId == nil {
		var ret int64
		return ret
	}
	return *o.PartyId
}

// GetPartyIdOk returns a tuple with the PartyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetPartyIdOk() (*int64, bool) {
	if o == nil || o.PartyId == nil {
		return nil, false
	}
	return o.PartyId, true
}

// HasPartyId returns a boolean if a field has been set.
func (o *AssignmentModel) HasPartyId() bool {
	if o != nil && o.PartyId != nil {
		return true
	}

	return false
}

// SetPartyId gets a reference to the given int64 and assigns it to the PartyId field.
func (o *AssignmentModel) SetPartyId(v int64) {
	o.PartyId = &v
}

// GetBookingAccountId returns the BookingAccountId field value if set, zero value otherwise.
func (o *AssignmentModel) GetBookingAccountId() int64 {
	if o == nil || o.BookingAccountId == nil {
		var ret int64
		return ret
	}
	return *o.BookingAccountId
}

// GetBookingAccountIdOk returns a tuple with the BookingAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetBookingAccountIdOk() (*int64, bool) {
	if o == nil || o.BookingAccountId == nil {
		return nil, false
	}
	return o.BookingAccountId, true
}

// HasBookingAccountId returns a boolean if a field has been set.
func (o *AssignmentModel) HasBookingAccountId() bool {
	if o != nil && o.BookingAccountId != nil {
		return true
	}

	return false
}

// SetBookingAccountId gets a reference to the given int64 and assigns it to the BookingAccountId field.
func (o *AssignmentModel) SetBookingAccountId(v int64) {
	o.BookingAccountId = &v
}

// GetTagNames returns the TagNames field value if set, zero value otherwise.
func (o *AssignmentModel) GetTagNames() []string {
	if o == nil || o.TagNames == nil {
		var ret []string
		return ret
	}
	return *o.TagNames
}

// GetTagNamesOk returns a tuple with the TagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetTagNamesOk() (*[]string, bool) {
	if o == nil || o.TagNames == nil {
		return nil, false
	}
	return o.TagNames, true
}

// HasTagNames returns a boolean if a field has been set.
func (o *AssignmentModel) HasTagNames() bool {
	if o != nil && o.TagNames != nil {
		return true
	}

	return false
}

// SetTagNames gets a reference to the given []string and assigns it to the TagNames field.
func (o *AssignmentModel) SetTagNames(v []string) {
	o.TagNames = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *AssignmentModel) GetTagIds() []int32 {
	if o == nil || o.TagIds == nil {
		var ret []int32
		return ret
	}
	return *o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetTagIdsOk() (*[]int32, bool) {
	if o == nil || o.TagIds == nil {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *AssignmentModel) HasTagIds() bool {
	if o != nil && o.TagIds != nil {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []int32 and assigns it to the TagIds field.
func (o *AssignmentModel) SetTagIds(v []int32) {
	o.TagIds = &v
}

// GetActivities returns the Activities field value if set, zero value otherwise.
func (o *AssignmentModel) GetActivities() []ActivityModel {
	if o == nil || o.Activities == nil {
		var ret []ActivityModel
		return ret
	}
	return *o.Activities
}

// GetActivitiesOk returns a tuple with the Activities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetActivitiesOk() (*[]ActivityModel, bool) {
	if o == nil || o.Activities == nil {
		return nil, false
	}
	return o.Activities, true
}

// HasActivities returns a boolean if a field has been set.
func (o *AssignmentModel) HasActivities() bool {
	if o != nil && o.Activities != nil {
		return true
	}

	return false
}

// SetActivities gets a reference to the given []ActivityModel and assigns it to the Activities field.
func (o *AssignmentModel) SetActivities(v []ActivityModel) {
	o.Activities = &v
}

// GetBookingAccount returns the BookingAccount field value if set, zero value otherwise.
func (o *AssignmentModel) GetBookingAccount() PartyModel {
	if o == nil || o.BookingAccount == nil {
		var ret PartyModel
		return ret
	}
	return *o.BookingAccount
}

// GetBookingAccountOk returns a tuple with the BookingAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetBookingAccountOk() (*PartyModel, bool) {
	if o == nil || o.BookingAccount == nil {
		return nil, false
	}
	return o.BookingAccount, true
}

// HasBookingAccount returns a boolean if a field has been set.
func (o *AssignmentModel) HasBookingAccount() bool {
	if o != nil && o.BookingAccount != nil {
		return true
	}

	return false
}

// SetBookingAccount gets a reference to the given PartyModel and assigns it to the BookingAccount field.
func (o *AssignmentModel) SetBookingAccount(v PartyModel) {
	o.BookingAccount = &v
}

// GetStatusId returns the StatusId field value if set, zero value otherwise.
func (o *AssignmentModel) GetStatusId() int64 {
	if o == nil || o.StatusId == nil {
		var ret int64
		return ret
	}
	return *o.StatusId
}

// GetStatusIdOk returns a tuple with the StatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetStatusIdOk() (*int64, bool) {
	if o == nil || o.StatusId == nil {
		return nil, false
	}
	return o.StatusId, true
}

// HasStatusId returns a boolean if a field has been set.
func (o *AssignmentModel) HasStatusId() bool {
	if o != nil && o.StatusId != nil {
		return true
	}

	return false
}

// SetStatusId gets a reference to the given int64 and assigns it to the StatusId field.
func (o *AssignmentModel) SetStatusId(v int64) {
	o.StatusId = &v
}

// GetNr returns the Nr field value if set, zero value otherwise.
func (o *AssignmentModel) GetNr() string {
	if o == nil || o.Nr == nil {
		var ret string
		return ret
	}
	return *o.Nr
}

// GetNrOk returns a tuple with the Nr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetNrOk() (*string, bool) {
	if o == nil || o.Nr == nil {
		return nil, false
	}
	return o.Nr, true
}

// HasNr returns a boolean if a field has been set.
func (o *AssignmentModel) HasNr() bool {
	if o != nil && o.Nr != nil {
		return true
	}

	return false
}

// SetNr gets a reference to the given string and assigns it to the Nr field.
func (o *AssignmentModel) SetNr(v string) {
	o.Nr = &v
}

// GetPartyLink returns the PartyLink field value if set, zero value otherwise.
func (o *AssignmentModel) GetPartyLink() []LinkModel {
	if o == nil || o.PartyLink == nil {
		var ret []LinkModel
		return ret
	}
	return *o.PartyLink
}

// GetPartyLinkOk returns a tuple with the PartyLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetPartyLinkOk() (*[]LinkModel, bool) {
	if o == nil || o.PartyLink == nil {
		return nil, false
	}
	return o.PartyLink, true
}

// HasPartyLink returns a boolean if a field has been set.
func (o *AssignmentModel) HasPartyLink() bool {
	if o != nil && o.PartyLink != nil {
		return true
	}

	return false
}

// SetPartyLink gets a reference to the given []LinkModel and assigns it to the PartyLink field.
func (o *AssignmentModel) SetPartyLink(v []LinkModel) {
	o.PartyLink = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *AssignmentModel) GetAccountName() string {
	if o == nil || o.AccountName == nil {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetAccountNameOk() (*string, bool) {
	if o == nil || o.AccountName == nil {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *AssignmentModel) HasAccountName() bool {
	if o != nil && o.AccountName != nil {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *AssignmentModel) SetAccountName(v string) {
	o.AccountName = &v
}

// GetPartyName returns the PartyName field value if set, zero value otherwise.
func (o *AssignmentModel) GetPartyName() string {
	if o == nil || o.PartyName == nil {
		var ret string
		return ret
	}
	return *o.PartyName
}

// GetPartyNameOk returns a tuple with the PartyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetPartyNameOk() (*string, bool) {
	if o == nil || o.PartyName == nil {
		return nil, false
	}
	return o.PartyName, true
}

// HasPartyName returns a boolean if a field has been set.
func (o *AssignmentModel) HasPartyName() bool {
	if o != nil && o.PartyName != nil {
		return true
	}

	return false
}

// SetPartyName gets a reference to the given string and assigns it to the PartyName field.
func (o *AssignmentModel) SetPartyName(v string) {
	o.PartyName = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *AssignmentModel) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *AssignmentModel) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *AssignmentModel) SetReference(v string) {
	o.Reference = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AssignmentModel) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AssignmentModel) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AssignmentModel) SetDescription(v string) {
	o.Description = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *AssignmentModel) GetRemarks() string {
	if o == nil || o.Remarks == nil {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetRemarksOk() (*string, bool) {
	if o == nil || o.Remarks == nil {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *AssignmentModel) HasRemarks() bool {
	if o != nil && o.Remarks != nil {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *AssignmentModel) SetRemarks(v string) {
	o.Remarks = &v
}

// GetDateTimeFrom returns the DateTimeFrom field value if set, zero value otherwise.
func (o *AssignmentModel) GetDateTimeFrom() time.Time {
	if o == nil || o.DateTimeFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeFrom
}

// GetDateTimeFromOk returns a tuple with the DateTimeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetDateTimeFromOk() (*time.Time, bool) {
	if o == nil || o.DateTimeFrom == nil {
		return nil, false
	}
	return o.DateTimeFrom, true
}

// HasDateTimeFrom returns a boolean if a field has been set.
func (o *AssignmentModel) HasDateTimeFrom() bool {
	if o != nil && o.DateTimeFrom != nil {
		return true
	}

	return false
}

// SetDateTimeFrom gets a reference to the given time.Time and assigns it to the DateTimeFrom field.
func (o *AssignmentModel) SetDateTimeFrom(v time.Time) {
	o.DateTimeFrom = &v
}

// GetDateTimeTo returns the DateTimeTo field value if set, zero value otherwise.
func (o *AssignmentModel) GetDateTimeTo() time.Time {
	if o == nil || o.DateTimeTo == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeTo
}

// GetDateTimeToOk returns a tuple with the DateTimeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetDateTimeToOk() (*time.Time, bool) {
	if o == nil || o.DateTimeTo == nil {
		return nil, false
	}
	return o.DateTimeTo, true
}

// HasDateTimeTo returns a boolean if a field has been set.
func (o *AssignmentModel) HasDateTimeTo() bool {
	if o != nil && o.DateTimeTo != nil {
		return true
	}

	return false
}

// SetDateTimeTo gets a reference to the given time.Time and assigns it to the DateTimeTo field.
func (o *AssignmentModel) SetDateTimeTo(v time.Time) {
	o.DateTimeTo = &v
}

// GetMultiDay returns the MultiDay field value if set, zero value otherwise.
func (o *AssignmentModel) GetMultiDay() bool {
	if o == nil || o.MultiDay == nil {
		var ret bool
		return ret
	}
	return *o.MultiDay
}

// GetMultiDayOk returns a tuple with the MultiDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetMultiDayOk() (*bool, bool) {
	if o == nil || o.MultiDay == nil {
		return nil, false
	}
	return o.MultiDay, true
}

// HasMultiDay returns a boolean if a field has been set.
func (o *AssignmentModel) HasMultiDay() bool {
	if o != nil && o.MultiDay != nil {
		return true
	}

	return false
}

// SetMultiDay gets a reference to the given bool and assigns it to the MultiDay field.
func (o *AssignmentModel) SetMultiDay(v bool) {
	o.MultiDay = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AssignmentModel) GetLinks() []LinkModel {
	if o == nil || o.Links == nil {
		var ret []LinkModel
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetLinksOk() (*[]LinkModel, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AssignmentModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkModel and assigns it to the Links field.
func (o *AssignmentModel) SetLinks(v []LinkModel) {
	o.Links = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *AssignmentModel) GetMetaData() []MetaDataModel {
	if o == nil || o.MetaData == nil {
		var ret []MetaDataModel
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetMetaDataOk() (*[]MetaDataModel, bool) {
	if o == nil || o.MetaData == nil {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *AssignmentModel) HasMetaData() bool {
	if o != nil && o.MetaData != nil {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given []MetaDataModel and assigns it to the MetaData field.
func (o *AssignmentModel) SetMetaData(v []MetaDataModel) {
	o.MetaData = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *AssignmentModel) GetNotes() []NoteModel {
	if o == nil || o.Notes == nil {
		var ret []NoteModel
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetNotesOk() (*[]NoteModel, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *AssignmentModel) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given []NoteModel and assigns it to the Notes field.
func (o *AssignmentModel) SetNotes(v []NoteModel) {
	o.Notes = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *AssignmentModel) GetFiles() []FileModel {
	if o == nil || o.Files == nil {
		var ret []FileModel
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetFilesOk() (*[]FileModel, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *AssignmentModel) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []FileModel and assigns it to the Files field.
func (o *AssignmentModel) SetFiles(v []FileModel) {
	o.Files = &v
}

// GetAssignmentCreatedAt returns the AssignmentCreatedAt field value if set, zero value otherwise.
func (o *AssignmentModel) GetAssignmentCreatedAt() time.Time {
	if o == nil || o.AssignmentCreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.AssignmentCreatedAt
}

// GetAssignmentCreatedAtOk returns a tuple with the AssignmentCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetAssignmentCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.AssignmentCreatedAt == nil {
		return nil, false
	}
	return o.AssignmentCreatedAt, true
}

// HasAssignmentCreatedAt returns a boolean if a field has been set.
func (o *AssignmentModel) HasAssignmentCreatedAt() bool {
	if o != nil && o.AssignmentCreatedAt != nil {
		return true
	}

	return false
}

// SetAssignmentCreatedAt gets a reference to the given time.Time and assigns it to the AssignmentCreatedAt field.
func (o *AssignmentModel) SetAssignmentCreatedAt(v time.Time) {
	o.AssignmentCreatedAt = &v
}

// GetAssignmentUpdatedAt returns the AssignmentUpdatedAt field value if set, zero value otherwise.
func (o *AssignmentModel) GetAssignmentUpdatedAt() time.Time {
	if o == nil || o.AssignmentUpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.AssignmentUpdatedAt
}

// GetAssignmentUpdatedAtOk returns a tuple with the AssignmentUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetAssignmentUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.AssignmentUpdatedAt == nil {
		return nil, false
	}
	return o.AssignmentUpdatedAt, true
}

// HasAssignmentUpdatedAt returns a boolean if a field has been set.
func (o *AssignmentModel) HasAssignmentUpdatedAt() bool {
	if o != nil && o.AssignmentUpdatedAt != nil {
		return true
	}

	return false
}

// SetAssignmentUpdatedAt gets a reference to the given time.Time and assigns it to the AssignmentUpdatedAt field.
func (o *AssignmentModel) SetAssignmentUpdatedAt(v time.Time) {
	o.AssignmentUpdatedAt = &v
}

// GetAssignmentCreatedBy returns the AssignmentCreatedBy field value if set, zero value otherwise.
func (o *AssignmentModel) GetAssignmentCreatedBy() int32 {
	if o == nil || o.AssignmentCreatedBy == nil {
		var ret int32
		return ret
	}
	return *o.AssignmentCreatedBy
}

// GetAssignmentCreatedByOk returns a tuple with the AssignmentCreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetAssignmentCreatedByOk() (*int32, bool) {
	if o == nil || o.AssignmentCreatedBy == nil {
		return nil, false
	}
	return o.AssignmentCreatedBy, true
}

// HasAssignmentCreatedBy returns a boolean if a field has been set.
func (o *AssignmentModel) HasAssignmentCreatedBy() bool {
	if o != nil && o.AssignmentCreatedBy != nil {
		return true
	}

	return false
}

// SetAssignmentCreatedBy gets a reference to the given int32 and assigns it to the AssignmentCreatedBy field.
func (o *AssignmentModel) SetAssignmentCreatedBy(v int32) {
	o.AssignmentCreatedBy = &v
}

// GetAssignmentUpdatedBy returns the AssignmentUpdatedBy field value if set, zero value otherwise.
func (o *AssignmentModel) GetAssignmentUpdatedBy() int32 {
	if o == nil || o.AssignmentUpdatedBy == nil {
		var ret int32
		return ret
	}
	return *o.AssignmentUpdatedBy
}

// GetAssignmentUpdatedByOk returns a tuple with the AssignmentUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetAssignmentUpdatedByOk() (*int32, bool) {
	if o == nil || o.AssignmentUpdatedBy == nil {
		return nil, false
	}
	return o.AssignmentUpdatedBy, true
}

// HasAssignmentUpdatedBy returns a boolean if a field has been set.
func (o *AssignmentModel) HasAssignmentUpdatedBy() bool {
	if o != nil && o.AssignmentUpdatedBy != nil {
		return true
	}

	return false
}

// SetAssignmentUpdatedBy gets a reference to the given int32 and assigns it to the AssignmentUpdatedBy field.
func (o *AssignmentModel) SetAssignmentUpdatedBy(v int32) {
	o.AssignmentUpdatedBy = &v
}

// GetAssignmentCreatedByUser returns the AssignmentCreatedByUser field value if set, zero value otherwise.
func (o *AssignmentModel) GetAssignmentCreatedByUser() UsersModel {
	if o == nil || o.AssignmentCreatedByUser == nil {
		var ret UsersModel
		return ret
	}
	return *o.AssignmentCreatedByUser
}

// GetAssignmentCreatedByUserOk returns a tuple with the AssignmentCreatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetAssignmentCreatedByUserOk() (*UsersModel, bool) {
	if o == nil || o.AssignmentCreatedByUser == nil {
		return nil, false
	}
	return o.AssignmentCreatedByUser, true
}

// HasAssignmentCreatedByUser returns a boolean if a field has been set.
func (o *AssignmentModel) HasAssignmentCreatedByUser() bool {
	if o != nil && o.AssignmentCreatedByUser != nil {
		return true
	}

	return false
}

// SetAssignmentCreatedByUser gets a reference to the given UsersModel and assigns it to the AssignmentCreatedByUser field.
func (o *AssignmentModel) SetAssignmentCreatedByUser(v UsersModel) {
	o.AssignmentCreatedByUser = &v
}

// GetAssignmentUpdatedByUser returns the AssignmentUpdatedByUser field value if set, zero value otherwise.
func (o *AssignmentModel) GetAssignmentUpdatedByUser() UsersModel {
	if o == nil || o.AssignmentUpdatedByUser == nil {
		var ret UsersModel
		return ret
	}
	return *o.AssignmentUpdatedByUser
}

// GetAssignmentUpdatedByUserOk returns a tuple with the AssignmentUpdatedByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetAssignmentUpdatedByUserOk() (*UsersModel, bool) {
	if o == nil || o.AssignmentUpdatedByUser == nil {
		return nil, false
	}
	return o.AssignmentUpdatedByUser, true
}

// HasAssignmentUpdatedByUser returns a boolean if a field has been set.
func (o *AssignmentModel) HasAssignmentUpdatedByUser() bool {
	if o != nil && o.AssignmentUpdatedByUser != nil {
		return true
	}

	return false
}

// SetAssignmentUpdatedByUser gets a reference to the given UsersModel and assigns it to the AssignmentUpdatedByUser field.
func (o *AssignmentModel) SetAssignmentUpdatedByUser(v UsersModel) {
	o.AssignmentUpdatedByUser = &v
}

// GetAssignmentActive returns the AssignmentActive field value if set, zero value otherwise.
func (o *AssignmentModel) GetAssignmentActive() bool {
	if o == nil || o.AssignmentActive == nil {
		var ret bool
		return ret
	}
	return *o.AssignmentActive
}

// GetAssignmentActiveOk returns a tuple with the AssignmentActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetAssignmentActiveOk() (*bool, bool) {
	if o == nil || o.AssignmentActive == nil {
		return nil, false
	}
	return o.AssignmentActive, true
}

// HasAssignmentActive returns a boolean if a field has been set.
func (o *AssignmentModel) HasAssignmentActive() bool {
	if o != nil && o.AssignmentActive != nil {
		return true
	}

	return false
}

// SetAssignmentActive gets a reference to the given bool and assigns it to the AssignmentActive field.
func (o *AssignmentModel) SetAssignmentActive(v bool) {
	o.AssignmentActive = &v
}

// GetAssignmentRemoved returns the AssignmentRemoved field value if set, zero value otherwise.
func (o *AssignmentModel) GetAssignmentRemoved() bool {
	if o == nil || o.AssignmentRemoved == nil {
		var ret bool
		return ret
	}
	return *o.AssignmentRemoved
}

// GetAssignmentRemovedOk returns a tuple with the AssignmentRemoved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssignmentModel) GetAssignmentRemovedOk() (*bool, bool) {
	if o == nil || o.AssignmentRemoved == nil {
		return nil, false
	}
	return o.AssignmentRemoved, true
}

// HasAssignmentRemoved returns a boolean if a field has been set.
func (o *AssignmentModel) HasAssignmentRemoved() bool {
	if o != nil && o.AssignmentRemoved != nil {
		return true
	}

	return false
}

// SetAssignmentRemoved gets a reference to the given bool and assigns it to the AssignmentRemoved field.
func (o *AssignmentModel) SetAssignmentRemoved(v bool) {
	o.AssignmentRemoved = &v
}

func (o AssignmentModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.PartyId != nil {
		toSerialize["party_id"] = o.PartyId
	}
	if o.BookingAccountId != nil {
		toSerialize["booking_account_id"] = o.BookingAccountId
	}
	if o.TagNames != nil {
		toSerialize["tag_names"] = o.TagNames
	}
	if o.TagIds != nil {
		toSerialize["tag_ids"] = o.TagIds
	}
	if o.Activities != nil {
		toSerialize["activities"] = o.Activities
	}
	if o.BookingAccount != nil {
		toSerialize["booking_account"] = o.BookingAccount
	}
	if o.StatusId != nil {
		toSerialize["status_id"] = o.StatusId
	}
	if o.Nr != nil {
		toSerialize["nr"] = o.Nr
	}
	if o.PartyLink != nil {
		toSerialize["party_link"] = o.PartyLink
	}
	if o.AccountName != nil {
		toSerialize["account_name"] = o.AccountName
	}
	if o.PartyName != nil {
		toSerialize["party_name"] = o.PartyName
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Remarks != nil {
		toSerialize["remarks"] = o.Remarks
	}
	if o.DateTimeFrom != nil {
		toSerialize["date_time_from"] = o.DateTimeFrom
	}
	if o.DateTimeTo != nil {
		toSerialize["date_time_to"] = o.DateTimeTo
	}
	if o.MultiDay != nil {
		toSerialize["multi_day"] = o.MultiDay
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.MetaData != nil {
		toSerialize["meta_data"] = o.MetaData
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if o.AssignmentCreatedAt != nil {
		toSerialize["assignment_created_at"] = o.AssignmentCreatedAt
	}
	if o.AssignmentUpdatedAt != nil {
		toSerialize["assignment_updated_at"] = o.AssignmentUpdatedAt
	}
	if o.AssignmentCreatedBy != nil {
		toSerialize["assignment_created_by"] = o.AssignmentCreatedBy
	}
	if o.AssignmentUpdatedBy != nil {
		toSerialize["assignment_updated_by"] = o.AssignmentUpdatedBy
	}
	if o.AssignmentCreatedByUser != nil {
		toSerialize["assignment_created_by_user"] = o.AssignmentCreatedByUser
	}
	if o.AssignmentUpdatedByUser != nil {
		toSerialize["assignment_updated_by_user"] = o.AssignmentUpdatedByUser
	}
	if o.AssignmentActive != nil {
		toSerialize["assignment_active"] = o.AssignmentActive
	}
	if o.AssignmentRemoved != nil {
		toSerialize["assignment_removed"] = o.AssignmentRemoved
	}
	return json.Marshal(toSerialize)
}

type NullableAssignmentModel struct {
	value *AssignmentModel
	isSet bool
}

func (v NullableAssignmentModel) Get() *AssignmentModel {
	return v.value
}

func (v *NullableAssignmentModel) Set(val *AssignmentModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignmentModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignmentModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignmentModel(val *AssignmentModel) *NullableAssignmentModel {
	return &NullableAssignmentModel{value: val, isSet: true}
}

func (v NullableAssignmentModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignmentModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


