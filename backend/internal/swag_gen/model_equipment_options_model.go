/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EquipmentOptionsModel struct for EquipmentOptionsModel
type EquipmentOptionsModel struct {
	// 
	IncludeEquipmentTypeName *bool `json:"include_equipment_type_name,omitempty"`
	// 
	IncludeEquipmentTags *bool `json:"include_equipment_tags,omitempty"`
	// 
	IncludeTagTypeName *bool `json:"include_tag_type_name,omitempty"`
	// 
	IncludeEquipmentMetaData *bool `json:"include_equipment_meta_data,omitempty"`
	// 
	IncludeEquipmentFiles *bool `json:"include_equipment_files,omitempty"`
	// 
	IncludeEquipmentFilesMetaData *bool `json:"include_equipment_files_meta_data,omitempty"`
	// 
	IncludeEquipmentNotes *bool `json:"include_equipment_notes,omitempty"`
	// 
	IncludeEquipmentNoteTags *bool `json:"include_equipment_note_tags,omitempty"`
	// 
	IncludeEquipmentLinks *bool `json:"include_equipment_links,omitempty"`
	// 
	IncludeCapacities *bool `json:"include_capacities,omitempty"`
	// 
	IncludeAppliedCapacities *bool `json:"include_applied_capacities,omitempty"`
}

// NewEquipmentOptionsModel instantiates a new EquipmentOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEquipmentOptionsModel() *EquipmentOptionsModel {
	this := EquipmentOptionsModel{}
	return &this
}

// NewEquipmentOptionsModelWithDefaults instantiates a new EquipmentOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEquipmentOptionsModelWithDefaults() *EquipmentOptionsModel {
	this := EquipmentOptionsModel{}
	return &this
}

// GetIncludeEquipmentTypeName returns the IncludeEquipmentTypeName field value if set, zero value otherwise.
func (o *EquipmentOptionsModel) GetIncludeEquipmentTypeName() bool {
	if o == nil || o.IncludeEquipmentTypeName == nil {
		var ret bool
		return ret
	}
	return *o.IncludeEquipmentTypeName
}

// GetIncludeEquipmentTypeNameOk returns a tuple with the IncludeEquipmentTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentOptionsModel) GetIncludeEquipmentTypeNameOk() (*bool, bool) {
	if o == nil || o.IncludeEquipmentTypeName == nil {
		return nil, false
	}
	return o.IncludeEquipmentTypeName, true
}

// HasIncludeEquipmentTypeName returns a boolean if a field has been set.
func (o *EquipmentOptionsModel) HasIncludeEquipmentTypeName() bool {
	if o != nil && o.IncludeEquipmentTypeName != nil {
		return true
	}

	return false
}

// SetIncludeEquipmentTypeName gets a reference to the given bool and assigns it to the IncludeEquipmentTypeName field.
func (o *EquipmentOptionsModel) SetIncludeEquipmentTypeName(v bool) {
	o.IncludeEquipmentTypeName = &v
}

// GetIncludeEquipmentTags returns the IncludeEquipmentTags field value if set, zero value otherwise.
func (o *EquipmentOptionsModel) GetIncludeEquipmentTags() bool {
	if o == nil || o.IncludeEquipmentTags == nil {
		var ret bool
		return ret
	}
	return *o.IncludeEquipmentTags
}

// GetIncludeEquipmentTagsOk returns a tuple with the IncludeEquipmentTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentOptionsModel) GetIncludeEquipmentTagsOk() (*bool, bool) {
	if o == nil || o.IncludeEquipmentTags == nil {
		return nil, false
	}
	return o.IncludeEquipmentTags, true
}

// HasIncludeEquipmentTags returns a boolean if a field has been set.
func (o *EquipmentOptionsModel) HasIncludeEquipmentTags() bool {
	if o != nil && o.IncludeEquipmentTags != nil {
		return true
	}

	return false
}

// SetIncludeEquipmentTags gets a reference to the given bool and assigns it to the IncludeEquipmentTags field.
func (o *EquipmentOptionsModel) SetIncludeEquipmentTags(v bool) {
	o.IncludeEquipmentTags = &v
}

// GetIncludeTagTypeName returns the IncludeTagTypeName field value if set, zero value otherwise.
func (o *EquipmentOptionsModel) GetIncludeTagTypeName() bool {
	if o == nil || o.IncludeTagTypeName == nil {
		var ret bool
		return ret
	}
	return *o.IncludeTagTypeName
}

// GetIncludeTagTypeNameOk returns a tuple with the IncludeTagTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentOptionsModel) GetIncludeTagTypeNameOk() (*bool, bool) {
	if o == nil || o.IncludeTagTypeName == nil {
		return nil, false
	}
	return o.IncludeTagTypeName, true
}

// HasIncludeTagTypeName returns a boolean if a field has been set.
func (o *EquipmentOptionsModel) HasIncludeTagTypeName() bool {
	if o != nil && o.IncludeTagTypeName != nil {
		return true
	}

	return false
}

// SetIncludeTagTypeName gets a reference to the given bool and assigns it to the IncludeTagTypeName field.
func (o *EquipmentOptionsModel) SetIncludeTagTypeName(v bool) {
	o.IncludeTagTypeName = &v
}

// GetIncludeEquipmentMetaData returns the IncludeEquipmentMetaData field value if set, zero value otherwise.
func (o *EquipmentOptionsModel) GetIncludeEquipmentMetaData() bool {
	if o == nil || o.IncludeEquipmentMetaData == nil {
		var ret bool
		return ret
	}
	return *o.IncludeEquipmentMetaData
}

// GetIncludeEquipmentMetaDataOk returns a tuple with the IncludeEquipmentMetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentOptionsModel) GetIncludeEquipmentMetaDataOk() (*bool, bool) {
	if o == nil || o.IncludeEquipmentMetaData == nil {
		return nil, false
	}
	return o.IncludeEquipmentMetaData, true
}

// HasIncludeEquipmentMetaData returns a boolean if a field has been set.
func (o *EquipmentOptionsModel) HasIncludeEquipmentMetaData() bool {
	if o != nil && o.IncludeEquipmentMetaData != nil {
		return true
	}

	return false
}

// SetIncludeEquipmentMetaData gets a reference to the given bool and assigns it to the IncludeEquipmentMetaData field.
func (o *EquipmentOptionsModel) SetIncludeEquipmentMetaData(v bool) {
	o.IncludeEquipmentMetaData = &v
}

// GetIncludeEquipmentFiles returns the IncludeEquipmentFiles field value if set, zero value otherwise.
func (o *EquipmentOptionsModel) GetIncludeEquipmentFiles() bool {
	if o == nil || o.IncludeEquipmentFiles == nil {
		var ret bool
		return ret
	}
	return *o.IncludeEquipmentFiles
}

// GetIncludeEquipmentFilesOk returns a tuple with the IncludeEquipmentFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentOptionsModel) GetIncludeEquipmentFilesOk() (*bool, bool) {
	if o == nil || o.IncludeEquipmentFiles == nil {
		return nil, false
	}
	return o.IncludeEquipmentFiles, true
}

// HasIncludeEquipmentFiles returns a boolean if a field has been set.
func (o *EquipmentOptionsModel) HasIncludeEquipmentFiles() bool {
	if o != nil && o.IncludeEquipmentFiles != nil {
		return true
	}

	return false
}

// SetIncludeEquipmentFiles gets a reference to the given bool and assigns it to the IncludeEquipmentFiles field.
func (o *EquipmentOptionsModel) SetIncludeEquipmentFiles(v bool) {
	o.IncludeEquipmentFiles = &v
}

// GetIncludeEquipmentFilesMetaData returns the IncludeEquipmentFilesMetaData field value if set, zero value otherwise.
func (o *EquipmentOptionsModel) GetIncludeEquipmentFilesMetaData() bool {
	if o == nil || o.IncludeEquipmentFilesMetaData == nil {
		var ret bool
		return ret
	}
	return *o.IncludeEquipmentFilesMetaData
}

// GetIncludeEquipmentFilesMetaDataOk returns a tuple with the IncludeEquipmentFilesMetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentOptionsModel) GetIncludeEquipmentFilesMetaDataOk() (*bool, bool) {
	if o == nil || o.IncludeEquipmentFilesMetaData == nil {
		return nil, false
	}
	return o.IncludeEquipmentFilesMetaData, true
}

// HasIncludeEquipmentFilesMetaData returns a boolean if a field has been set.
func (o *EquipmentOptionsModel) HasIncludeEquipmentFilesMetaData() bool {
	if o != nil && o.IncludeEquipmentFilesMetaData != nil {
		return true
	}

	return false
}

// SetIncludeEquipmentFilesMetaData gets a reference to the given bool and assigns it to the IncludeEquipmentFilesMetaData field.
func (o *EquipmentOptionsModel) SetIncludeEquipmentFilesMetaData(v bool) {
	o.IncludeEquipmentFilesMetaData = &v
}

// GetIncludeEquipmentNotes returns the IncludeEquipmentNotes field value if set, zero value otherwise.
func (o *EquipmentOptionsModel) GetIncludeEquipmentNotes() bool {
	if o == nil || o.IncludeEquipmentNotes == nil {
		var ret bool
		return ret
	}
	return *o.IncludeEquipmentNotes
}

// GetIncludeEquipmentNotesOk returns a tuple with the IncludeEquipmentNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentOptionsModel) GetIncludeEquipmentNotesOk() (*bool, bool) {
	if o == nil || o.IncludeEquipmentNotes == nil {
		return nil, false
	}
	return o.IncludeEquipmentNotes, true
}

// HasIncludeEquipmentNotes returns a boolean if a field has been set.
func (o *EquipmentOptionsModel) HasIncludeEquipmentNotes() bool {
	if o != nil && o.IncludeEquipmentNotes != nil {
		return true
	}

	return false
}

// SetIncludeEquipmentNotes gets a reference to the given bool and assigns it to the IncludeEquipmentNotes field.
func (o *EquipmentOptionsModel) SetIncludeEquipmentNotes(v bool) {
	o.IncludeEquipmentNotes = &v
}

// GetIncludeEquipmentNoteTags returns the IncludeEquipmentNoteTags field value if set, zero value otherwise.
func (o *EquipmentOptionsModel) GetIncludeEquipmentNoteTags() bool {
	if o == nil || o.IncludeEquipmentNoteTags == nil {
		var ret bool
		return ret
	}
	return *o.IncludeEquipmentNoteTags
}

// GetIncludeEquipmentNoteTagsOk returns a tuple with the IncludeEquipmentNoteTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentOptionsModel) GetIncludeEquipmentNoteTagsOk() (*bool, bool) {
	if o == nil || o.IncludeEquipmentNoteTags == nil {
		return nil, false
	}
	return o.IncludeEquipmentNoteTags, true
}

// HasIncludeEquipmentNoteTags returns a boolean if a field has been set.
func (o *EquipmentOptionsModel) HasIncludeEquipmentNoteTags() bool {
	if o != nil && o.IncludeEquipmentNoteTags != nil {
		return true
	}

	return false
}

// SetIncludeEquipmentNoteTags gets a reference to the given bool and assigns it to the IncludeEquipmentNoteTags field.
func (o *EquipmentOptionsModel) SetIncludeEquipmentNoteTags(v bool) {
	o.IncludeEquipmentNoteTags = &v
}

// GetIncludeEquipmentLinks returns the IncludeEquipmentLinks field value if set, zero value otherwise.
func (o *EquipmentOptionsModel) GetIncludeEquipmentLinks() bool {
	if o == nil || o.IncludeEquipmentLinks == nil {
		var ret bool
		return ret
	}
	return *o.IncludeEquipmentLinks
}

// GetIncludeEquipmentLinksOk returns a tuple with the IncludeEquipmentLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentOptionsModel) GetIncludeEquipmentLinksOk() (*bool, bool) {
	if o == nil || o.IncludeEquipmentLinks == nil {
		return nil, false
	}
	return o.IncludeEquipmentLinks, true
}

// HasIncludeEquipmentLinks returns a boolean if a field has been set.
func (o *EquipmentOptionsModel) HasIncludeEquipmentLinks() bool {
	if o != nil && o.IncludeEquipmentLinks != nil {
		return true
	}

	return false
}

// SetIncludeEquipmentLinks gets a reference to the given bool and assigns it to the IncludeEquipmentLinks field.
func (o *EquipmentOptionsModel) SetIncludeEquipmentLinks(v bool) {
	o.IncludeEquipmentLinks = &v
}

// GetIncludeCapacities returns the IncludeCapacities field value if set, zero value otherwise.
func (o *EquipmentOptionsModel) GetIncludeCapacities() bool {
	if o == nil || o.IncludeCapacities == nil {
		var ret bool
		return ret
	}
	return *o.IncludeCapacities
}

// GetIncludeCapacitiesOk returns a tuple with the IncludeCapacities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentOptionsModel) GetIncludeCapacitiesOk() (*bool, bool) {
	if o == nil || o.IncludeCapacities == nil {
		return nil, false
	}
	return o.IncludeCapacities, true
}

// HasIncludeCapacities returns a boolean if a field has been set.
func (o *EquipmentOptionsModel) HasIncludeCapacities() bool {
	if o != nil && o.IncludeCapacities != nil {
		return true
	}

	return false
}

// SetIncludeCapacities gets a reference to the given bool and assigns it to the IncludeCapacities field.
func (o *EquipmentOptionsModel) SetIncludeCapacities(v bool) {
	o.IncludeCapacities = &v
}

// GetIncludeAppliedCapacities returns the IncludeAppliedCapacities field value if set, zero value otherwise.
func (o *EquipmentOptionsModel) GetIncludeAppliedCapacities() bool {
	if o == nil || o.IncludeAppliedCapacities == nil {
		var ret bool
		return ret
	}
	return *o.IncludeAppliedCapacities
}

// GetIncludeAppliedCapacitiesOk returns a tuple with the IncludeAppliedCapacities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EquipmentOptionsModel) GetIncludeAppliedCapacitiesOk() (*bool, bool) {
	if o == nil || o.IncludeAppliedCapacities == nil {
		return nil, false
	}
	return o.IncludeAppliedCapacities, true
}

// HasIncludeAppliedCapacities returns a boolean if a field has been set.
func (o *EquipmentOptionsModel) HasIncludeAppliedCapacities() bool {
	if o != nil && o.IncludeAppliedCapacities != nil {
		return true
	}

	return false
}

// SetIncludeAppliedCapacities gets a reference to the given bool and assigns it to the IncludeAppliedCapacities field.
func (o *EquipmentOptionsModel) SetIncludeAppliedCapacities(v bool) {
	o.IncludeAppliedCapacities = &v
}

func (o EquipmentOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeEquipmentTypeName != nil {
		toSerialize["include_equipment_type_name"] = o.IncludeEquipmentTypeName
	}
	if o.IncludeEquipmentTags != nil {
		toSerialize["include_equipment_tags"] = o.IncludeEquipmentTags
	}
	if o.IncludeTagTypeName != nil {
		toSerialize["include_tag_type_name"] = o.IncludeTagTypeName
	}
	if o.IncludeEquipmentMetaData != nil {
		toSerialize["include_equipment_meta_data"] = o.IncludeEquipmentMetaData
	}
	if o.IncludeEquipmentFiles != nil {
		toSerialize["include_equipment_files"] = o.IncludeEquipmentFiles
	}
	if o.IncludeEquipmentFilesMetaData != nil {
		toSerialize["include_equipment_files_meta_data"] = o.IncludeEquipmentFilesMetaData
	}
	if o.IncludeEquipmentNotes != nil {
		toSerialize["include_equipment_notes"] = o.IncludeEquipmentNotes
	}
	if o.IncludeEquipmentNoteTags != nil {
		toSerialize["include_equipment_note_tags"] = o.IncludeEquipmentNoteTags
	}
	if o.IncludeEquipmentLinks != nil {
		toSerialize["include_equipment_links"] = o.IncludeEquipmentLinks
	}
	if o.IncludeCapacities != nil {
		toSerialize["include_capacities"] = o.IncludeCapacities
	}
	if o.IncludeAppliedCapacities != nil {
		toSerialize["include_applied_capacities"] = o.IncludeAppliedCapacities
	}
	return json.Marshal(toSerialize)
}

type NullableEquipmentOptionsModel struct {
	value *EquipmentOptionsModel
	isSet bool
}

func (v NullableEquipmentOptionsModel) Get() *EquipmentOptionsModel {
	return v.value
}

func (v *NullableEquipmentOptionsModel) Set(val *EquipmentOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEquipmentOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEquipmentOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEquipmentOptionsModel(val *EquipmentOptionsModel) *NullableEquipmentOptionsModel {
	return &NullableEquipmentOptionsModel{value: val, isSet: true}
}

func (v NullableEquipmentOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEquipmentOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


