/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LogModel struct for LogModel
type LogModel struct {
	// The log message.
	OriginalMessage *string `json:"original_message,omitempty"`
	// The log message. Can be decorated with extra data
	Message *string `json:"message,omitempty"`
	// Any additional data you want to store about this log message
	FullMessage *map[string]interface{} `json:"full_message,omitempty"`
	// Groups log messages
	Channel *string `json:"channel,omitempty"`
	// Log level
	LevelText *string `json:"level_text,omitempty"`
	// HTTP method
	HttpMethod *string `json:"http_method,omitempty"`
	// Path of API endpoint
	ApiEndpoint *string `json:"api_endpoint,omitempty"`
	// Client IP
	ClientIp *string `json:"client_ip,omitempty"`
	// Identifier to relate different log messages
	RequestId *string `json:"request_id,omitempty"`
	// Type of log message
	LogType *string `json:"log_type,omitempty"`
	// Datetime of log message
	Timestamp *string `json:"timestamp,omitempty"`
	// User details
	User *map[string]interface{} `json:"user,omitempty"`
}

// NewLogModel instantiates a new LogModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogModel() *LogModel {
	this := LogModel{}
	return &this
}

// NewLogModelWithDefaults instantiates a new LogModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogModelWithDefaults() *LogModel {
	this := LogModel{}
	return &this
}

// GetOriginalMessage returns the OriginalMessage field value if set, zero value otherwise.
func (o *LogModel) GetOriginalMessage() string {
	if o == nil || o.OriginalMessage == nil {
		var ret string
		return ret
	}
	return *o.OriginalMessage
}

// GetOriginalMessageOk returns a tuple with the OriginalMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogModel) GetOriginalMessageOk() (*string, bool) {
	if o == nil || o.OriginalMessage == nil {
		return nil, false
	}
	return o.OriginalMessage, true
}

// HasOriginalMessage returns a boolean if a field has been set.
func (o *LogModel) HasOriginalMessage() bool {
	if o != nil && o.OriginalMessage != nil {
		return true
	}

	return false
}

// SetOriginalMessage gets a reference to the given string and assigns it to the OriginalMessage field.
func (o *LogModel) SetOriginalMessage(v string) {
	o.OriginalMessage = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *LogModel) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogModel) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *LogModel) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *LogModel) SetMessage(v string) {
	o.Message = &v
}

// GetFullMessage returns the FullMessage field value if set, zero value otherwise.
func (o *LogModel) GetFullMessage() map[string]interface{} {
	if o == nil || o.FullMessage == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.FullMessage
}

// GetFullMessageOk returns a tuple with the FullMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogModel) GetFullMessageOk() (*map[string]interface{}, bool) {
	if o == nil || o.FullMessage == nil {
		return nil, false
	}
	return o.FullMessage, true
}

// HasFullMessage returns a boolean if a field has been set.
func (o *LogModel) HasFullMessage() bool {
	if o != nil && o.FullMessage != nil {
		return true
	}

	return false
}

// SetFullMessage gets a reference to the given map[string]interface{} and assigns it to the FullMessage field.
func (o *LogModel) SetFullMessage(v map[string]interface{}) {
	o.FullMessage = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *LogModel) GetChannel() string {
	if o == nil || o.Channel == nil {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogModel) GetChannelOk() (*string, bool) {
	if o == nil || o.Channel == nil {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *LogModel) HasChannel() bool {
	if o != nil && o.Channel != nil {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *LogModel) SetChannel(v string) {
	o.Channel = &v
}

// GetLevelText returns the LevelText field value if set, zero value otherwise.
func (o *LogModel) GetLevelText() string {
	if o == nil || o.LevelText == nil {
		var ret string
		return ret
	}
	return *o.LevelText
}

// GetLevelTextOk returns a tuple with the LevelText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogModel) GetLevelTextOk() (*string, bool) {
	if o == nil || o.LevelText == nil {
		return nil, false
	}
	return o.LevelText, true
}

// HasLevelText returns a boolean if a field has been set.
func (o *LogModel) HasLevelText() bool {
	if o != nil && o.LevelText != nil {
		return true
	}

	return false
}

// SetLevelText gets a reference to the given string and assigns it to the LevelText field.
func (o *LogModel) SetLevelText(v string) {
	o.LevelText = &v
}

// GetHttpMethod returns the HttpMethod field value if set, zero value otherwise.
func (o *LogModel) GetHttpMethod() string {
	if o == nil || o.HttpMethod == nil {
		var ret string
		return ret
	}
	return *o.HttpMethod
}

// GetHttpMethodOk returns a tuple with the HttpMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogModel) GetHttpMethodOk() (*string, bool) {
	if o == nil || o.HttpMethod == nil {
		return nil, false
	}
	return o.HttpMethod, true
}

// HasHttpMethod returns a boolean if a field has been set.
func (o *LogModel) HasHttpMethod() bool {
	if o != nil && o.HttpMethod != nil {
		return true
	}

	return false
}

// SetHttpMethod gets a reference to the given string and assigns it to the HttpMethod field.
func (o *LogModel) SetHttpMethod(v string) {
	o.HttpMethod = &v
}

// GetApiEndpoint returns the ApiEndpoint field value if set, zero value otherwise.
func (o *LogModel) GetApiEndpoint() string {
	if o == nil || o.ApiEndpoint == nil {
		var ret string
		return ret
	}
	return *o.ApiEndpoint
}

// GetApiEndpointOk returns a tuple with the ApiEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogModel) GetApiEndpointOk() (*string, bool) {
	if o == nil || o.ApiEndpoint == nil {
		return nil, false
	}
	return o.ApiEndpoint, true
}

// HasApiEndpoint returns a boolean if a field has been set.
func (o *LogModel) HasApiEndpoint() bool {
	if o != nil && o.ApiEndpoint != nil {
		return true
	}

	return false
}

// SetApiEndpoint gets a reference to the given string and assigns it to the ApiEndpoint field.
func (o *LogModel) SetApiEndpoint(v string) {
	o.ApiEndpoint = &v
}

// GetClientIp returns the ClientIp field value if set, zero value otherwise.
func (o *LogModel) GetClientIp() string {
	if o == nil || o.ClientIp == nil {
		var ret string
		return ret
	}
	return *o.ClientIp
}

// GetClientIpOk returns a tuple with the ClientIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogModel) GetClientIpOk() (*string, bool) {
	if o == nil || o.ClientIp == nil {
		return nil, false
	}
	return o.ClientIp, true
}

// HasClientIp returns a boolean if a field has been set.
func (o *LogModel) HasClientIp() bool {
	if o != nil && o.ClientIp != nil {
		return true
	}

	return false
}

// SetClientIp gets a reference to the given string and assigns it to the ClientIp field.
func (o *LogModel) SetClientIp(v string) {
	o.ClientIp = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *LogModel) GetRequestId() string {
	if o == nil || o.RequestId == nil {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogModel) GetRequestIdOk() (*string, bool) {
	if o == nil || o.RequestId == nil {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *LogModel) HasRequestId() bool {
	if o != nil && o.RequestId != nil {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *LogModel) SetRequestId(v string) {
	o.RequestId = &v
}

// GetLogType returns the LogType field value if set, zero value otherwise.
func (o *LogModel) GetLogType() string {
	if o == nil || o.LogType == nil {
		var ret string
		return ret
	}
	return *o.LogType
}

// GetLogTypeOk returns a tuple with the LogType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogModel) GetLogTypeOk() (*string, bool) {
	if o == nil || o.LogType == nil {
		return nil, false
	}
	return o.LogType, true
}

// HasLogType returns a boolean if a field has been set.
func (o *LogModel) HasLogType() bool {
	if o != nil && o.LogType != nil {
		return true
	}

	return false
}

// SetLogType gets a reference to the given string and assigns it to the LogType field.
func (o *LogModel) SetLogType(v string) {
	o.LogType = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *LogModel) GetTimestamp() string {
	if o == nil || o.Timestamp == nil {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogModel) GetTimestampOk() (*string, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *LogModel) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *LogModel) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *LogModel) GetUser() map[string]interface{} {
	if o == nil || o.User == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogModel) GetUserOk() (*map[string]interface{}, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *LogModel) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given map[string]interface{} and assigns it to the User field.
func (o *LogModel) SetUser(v map[string]interface{}) {
	o.User = &v
}

func (o LogModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OriginalMessage != nil {
		toSerialize["original_message"] = o.OriginalMessage
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.FullMessage != nil {
		toSerialize["full_message"] = o.FullMessage
	}
	if o.Channel != nil {
		toSerialize["channel"] = o.Channel
	}
	if o.LevelText != nil {
		toSerialize["level_text"] = o.LevelText
	}
	if o.HttpMethod != nil {
		toSerialize["http_method"] = o.HttpMethod
	}
	if o.ApiEndpoint != nil {
		toSerialize["api_endpoint"] = o.ApiEndpoint
	}
	if o.ClientIp != nil {
		toSerialize["client_ip"] = o.ClientIp
	}
	if o.RequestId != nil {
		toSerialize["request_id"] = o.RequestId
	}
	if o.LogType != nil {
		toSerialize["log_type"] = o.LogType
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableLogModel struct {
	value *LogModel
	isSet bool
}

func (v NullableLogModel) Get() *LogModel {
	return v.value
}

func (v *NullableLogModel) Set(val *LogModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLogModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLogModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogModel(val *LogModel) *NullableLogModel {
	return &NullableLogModel{value: val, isSet: true}
}

func (v NullableLogModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


