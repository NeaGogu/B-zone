/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// RouteFiltersModel struct for RouteFiltersModel
type RouteFiltersModel struct {
	// Unique Identifier
	Id *[]int32 `json:"id,omitempty"`
	// Unique Identifier
	CoDriverIds *[]int32 `json:"co_driver_ids,omitempty"`
	// Route nr
	Nr *[]string `json:"nr,omitempty"`
	// 
	DateTimeFrom *time.Time `json:"date_time_from,omitempty"`
	// 
	DateTimeTo *time.Time `json:"date_time_to,omitempty"`
	// filter routes with an Earliest DateTime To since this input
	EarliestDateTimeSince *time.Time `json:"earliest_date_time_since,omitempty"`
	// filter routes with an Earliest DateTime To till this input
	EarliestDateTimeTill *time.Time `json:"earliest_date_time_till,omitempty"`
	// filter routes with an Latest DateTime To since this input
	LatestDateTimeSince *time.Time `json:"latest_date_time_since,omitempty"`
	// filter routes with an Latest DateTime To till this input
	LatestDateTimeTill *time.Time `json:"latest_date_time_till,omitempty"`
	// 
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// filter routes with an updated at date-time since this input
	UpdatedAtSince *time.Time `json:"updated_at_since,omitempty"`
	// filter routes with an updated at date-time till this input
	UpdatedAtTill *time.Time `json:"updated_at_till,omitempty"`
	// Active status of route, 0 values represent deleted routes
	Active *[]int32 `json:"active,omitempty"`
	// Route Status
	Status *[]string `json:"status,omitempty"`
	// 
	StatusId *[]int32 `json:"status_id,omitempty"`
	// 
	DriverId *[]int32 `json:"driver_id,omitempty"`
	// Recurrence ID
	RecurrenceId *int32 `json:"recurrence_id,omitempty"`
	// Tag names
	TagNames *[]string `json:"tag_names,omitempty"`
	// Zone names
	ZoneNames *[]string `json:"zone_names,omitempty"`
	// Optimized status of Route.
	Optimized *[]bool `json:"optimized,omitempty"`
	// Blocked status of Route
	Blocked *[]bool `json:"blocked,omitempty"`
	// Number of stops
	NrOfStops *[]int32 `json:"nr_of_stops,omitempty"`
	// free search through text and numeric type columns
	SearchText *string `json:"search_text,omitempty"`
}

// NewRouteFiltersModel instantiates a new RouteFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteFiltersModel() *RouteFiltersModel {
	this := RouteFiltersModel{}
	return &this
}

// NewRouteFiltersModelWithDefaults instantiates a new RouteFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteFiltersModelWithDefaults() *RouteFiltersModel {
	this := RouteFiltersModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetId() []int32 {
	if o == nil || o.Id == nil {
		var ret []int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetIdOk() (*[]int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given []int32 and assigns it to the Id field.
func (o *RouteFiltersModel) SetId(v []int32) {
	o.Id = &v
}

// GetCoDriverIds returns the CoDriverIds field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetCoDriverIds() []int32 {
	if o == nil || o.CoDriverIds == nil {
		var ret []int32
		return ret
	}
	return *o.CoDriverIds
}

// GetCoDriverIdsOk returns a tuple with the CoDriverIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetCoDriverIdsOk() (*[]int32, bool) {
	if o == nil || o.CoDriverIds == nil {
		return nil, false
	}
	return o.CoDriverIds, true
}

// HasCoDriverIds returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasCoDriverIds() bool {
	if o != nil && o.CoDriverIds != nil {
		return true
	}

	return false
}

// SetCoDriverIds gets a reference to the given []int32 and assigns it to the CoDriverIds field.
func (o *RouteFiltersModel) SetCoDriverIds(v []int32) {
	o.CoDriverIds = &v
}

// GetNr returns the Nr field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetNr() []string {
	if o == nil || o.Nr == nil {
		var ret []string
		return ret
	}
	return *o.Nr
}

// GetNrOk returns a tuple with the Nr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetNrOk() (*[]string, bool) {
	if o == nil || o.Nr == nil {
		return nil, false
	}
	return o.Nr, true
}

// HasNr returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasNr() bool {
	if o != nil && o.Nr != nil {
		return true
	}

	return false
}

// SetNr gets a reference to the given []string and assigns it to the Nr field.
func (o *RouteFiltersModel) SetNr(v []string) {
	o.Nr = &v
}

// GetDateTimeFrom returns the DateTimeFrom field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetDateTimeFrom() time.Time {
	if o == nil || o.DateTimeFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeFrom
}

// GetDateTimeFromOk returns a tuple with the DateTimeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetDateTimeFromOk() (*time.Time, bool) {
	if o == nil || o.DateTimeFrom == nil {
		return nil, false
	}
	return o.DateTimeFrom, true
}

// HasDateTimeFrom returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasDateTimeFrom() bool {
	if o != nil && o.DateTimeFrom != nil {
		return true
	}

	return false
}

// SetDateTimeFrom gets a reference to the given time.Time and assigns it to the DateTimeFrom field.
func (o *RouteFiltersModel) SetDateTimeFrom(v time.Time) {
	o.DateTimeFrom = &v
}

// GetDateTimeTo returns the DateTimeTo field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetDateTimeTo() time.Time {
	if o == nil || o.DateTimeTo == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeTo
}

// GetDateTimeToOk returns a tuple with the DateTimeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetDateTimeToOk() (*time.Time, bool) {
	if o == nil || o.DateTimeTo == nil {
		return nil, false
	}
	return o.DateTimeTo, true
}

// HasDateTimeTo returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasDateTimeTo() bool {
	if o != nil && o.DateTimeTo != nil {
		return true
	}

	return false
}

// SetDateTimeTo gets a reference to the given time.Time and assigns it to the DateTimeTo field.
func (o *RouteFiltersModel) SetDateTimeTo(v time.Time) {
	o.DateTimeTo = &v
}

// GetEarliestDateTimeSince returns the EarliestDateTimeSince field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetEarliestDateTimeSince() time.Time {
	if o == nil || o.EarliestDateTimeSince == nil {
		var ret time.Time
		return ret
	}
	return *o.EarliestDateTimeSince
}

// GetEarliestDateTimeSinceOk returns a tuple with the EarliestDateTimeSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetEarliestDateTimeSinceOk() (*time.Time, bool) {
	if o == nil || o.EarliestDateTimeSince == nil {
		return nil, false
	}
	return o.EarliestDateTimeSince, true
}

// HasEarliestDateTimeSince returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasEarliestDateTimeSince() bool {
	if o != nil && o.EarliestDateTimeSince != nil {
		return true
	}

	return false
}

// SetEarliestDateTimeSince gets a reference to the given time.Time and assigns it to the EarliestDateTimeSince field.
func (o *RouteFiltersModel) SetEarliestDateTimeSince(v time.Time) {
	o.EarliestDateTimeSince = &v
}

// GetEarliestDateTimeTill returns the EarliestDateTimeTill field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetEarliestDateTimeTill() time.Time {
	if o == nil || o.EarliestDateTimeTill == nil {
		var ret time.Time
		return ret
	}
	return *o.EarliestDateTimeTill
}

// GetEarliestDateTimeTillOk returns a tuple with the EarliestDateTimeTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetEarliestDateTimeTillOk() (*time.Time, bool) {
	if o == nil || o.EarliestDateTimeTill == nil {
		return nil, false
	}
	return o.EarliestDateTimeTill, true
}

// HasEarliestDateTimeTill returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasEarliestDateTimeTill() bool {
	if o != nil && o.EarliestDateTimeTill != nil {
		return true
	}

	return false
}

// SetEarliestDateTimeTill gets a reference to the given time.Time and assigns it to the EarliestDateTimeTill field.
func (o *RouteFiltersModel) SetEarliestDateTimeTill(v time.Time) {
	o.EarliestDateTimeTill = &v
}

// GetLatestDateTimeSince returns the LatestDateTimeSince field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetLatestDateTimeSince() time.Time {
	if o == nil || o.LatestDateTimeSince == nil {
		var ret time.Time
		return ret
	}
	return *o.LatestDateTimeSince
}

// GetLatestDateTimeSinceOk returns a tuple with the LatestDateTimeSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetLatestDateTimeSinceOk() (*time.Time, bool) {
	if o == nil || o.LatestDateTimeSince == nil {
		return nil, false
	}
	return o.LatestDateTimeSince, true
}

// HasLatestDateTimeSince returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasLatestDateTimeSince() bool {
	if o != nil && o.LatestDateTimeSince != nil {
		return true
	}

	return false
}

// SetLatestDateTimeSince gets a reference to the given time.Time and assigns it to the LatestDateTimeSince field.
func (o *RouteFiltersModel) SetLatestDateTimeSince(v time.Time) {
	o.LatestDateTimeSince = &v
}

// GetLatestDateTimeTill returns the LatestDateTimeTill field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetLatestDateTimeTill() time.Time {
	if o == nil || o.LatestDateTimeTill == nil {
		var ret time.Time
		return ret
	}
	return *o.LatestDateTimeTill
}

// GetLatestDateTimeTillOk returns a tuple with the LatestDateTimeTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetLatestDateTimeTillOk() (*time.Time, bool) {
	if o == nil || o.LatestDateTimeTill == nil {
		return nil, false
	}
	return o.LatestDateTimeTill, true
}

// HasLatestDateTimeTill returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasLatestDateTimeTill() bool {
	if o != nil && o.LatestDateTimeTill != nil {
		return true
	}

	return false
}

// SetLatestDateTimeTill gets a reference to the given time.Time and assigns it to the LatestDateTimeTill field.
func (o *RouteFiltersModel) SetLatestDateTimeTill(v time.Time) {
	o.LatestDateTimeTill = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *RouteFiltersModel) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUpdatedAtSince returns the UpdatedAtSince field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetUpdatedAtSince() time.Time {
	if o == nil || o.UpdatedAtSince == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAtSince
}

// GetUpdatedAtSinceOk returns a tuple with the UpdatedAtSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetUpdatedAtSinceOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAtSince == nil {
		return nil, false
	}
	return o.UpdatedAtSince, true
}

// HasUpdatedAtSince returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasUpdatedAtSince() bool {
	if o != nil && o.UpdatedAtSince != nil {
		return true
	}

	return false
}

// SetUpdatedAtSince gets a reference to the given time.Time and assigns it to the UpdatedAtSince field.
func (o *RouteFiltersModel) SetUpdatedAtSince(v time.Time) {
	o.UpdatedAtSince = &v
}

// GetUpdatedAtTill returns the UpdatedAtTill field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetUpdatedAtTill() time.Time {
	if o == nil || o.UpdatedAtTill == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAtTill
}

// GetUpdatedAtTillOk returns a tuple with the UpdatedAtTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetUpdatedAtTillOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAtTill == nil {
		return nil, false
	}
	return o.UpdatedAtTill, true
}

// HasUpdatedAtTill returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasUpdatedAtTill() bool {
	if o != nil && o.UpdatedAtTill != nil {
		return true
	}

	return false
}

// SetUpdatedAtTill gets a reference to the given time.Time and assigns it to the UpdatedAtTill field.
func (o *RouteFiltersModel) SetUpdatedAtTill(v time.Time) {
	o.UpdatedAtTill = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetActive() []int32 {
	if o == nil || o.Active == nil {
		var ret []int32
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetActiveOk() (*[]int32, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given []int32 and assigns it to the Active field.
func (o *RouteFiltersModel) SetActive(v []int32) {
	o.Active = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetStatus() []string {
	if o == nil || o.Status == nil {
		var ret []string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetStatusOk() (*[]string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given []string and assigns it to the Status field.
func (o *RouteFiltersModel) SetStatus(v []string) {
	o.Status = &v
}

// GetStatusId returns the StatusId field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetStatusId() []int32 {
	if o == nil || o.StatusId == nil {
		var ret []int32
		return ret
	}
	return *o.StatusId
}

// GetStatusIdOk returns a tuple with the StatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetStatusIdOk() (*[]int32, bool) {
	if o == nil || o.StatusId == nil {
		return nil, false
	}
	return o.StatusId, true
}

// HasStatusId returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasStatusId() bool {
	if o != nil && o.StatusId != nil {
		return true
	}

	return false
}

// SetStatusId gets a reference to the given []int32 and assigns it to the StatusId field.
func (o *RouteFiltersModel) SetStatusId(v []int32) {
	o.StatusId = &v
}

// GetDriverId returns the DriverId field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetDriverId() []int32 {
	if o == nil || o.DriverId == nil {
		var ret []int32
		return ret
	}
	return *o.DriverId
}

// GetDriverIdOk returns a tuple with the DriverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetDriverIdOk() (*[]int32, bool) {
	if o == nil || o.DriverId == nil {
		return nil, false
	}
	return o.DriverId, true
}

// HasDriverId returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasDriverId() bool {
	if o != nil && o.DriverId != nil {
		return true
	}

	return false
}

// SetDriverId gets a reference to the given []int32 and assigns it to the DriverId field.
func (o *RouteFiltersModel) SetDriverId(v []int32) {
	o.DriverId = &v
}

// GetRecurrenceId returns the RecurrenceId field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetRecurrenceId() int32 {
	if o == nil || o.RecurrenceId == nil {
		var ret int32
		return ret
	}
	return *o.RecurrenceId
}

// GetRecurrenceIdOk returns a tuple with the RecurrenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetRecurrenceIdOk() (*int32, bool) {
	if o == nil || o.RecurrenceId == nil {
		return nil, false
	}
	return o.RecurrenceId, true
}

// HasRecurrenceId returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasRecurrenceId() bool {
	if o != nil && o.RecurrenceId != nil {
		return true
	}

	return false
}

// SetRecurrenceId gets a reference to the given int32 and assigns it to the RecurrenceId field.
func (o *RouteFiltersModel) SetRecurrenceId(v int32) {
	o.RecurrenceId = &v
}

// GetTagNames returns the TagNames field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetTagNames() []string {
	if o == nil || o.TagNames == nil {
		var ret []string
		return ret
	}
	return *o.TagNames
}

// GetTagNamesOk returns a tuple with the TagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetTagNamesOk() (*[]string, bool) {
	if o == nil || o.TagNames == nil {
		return nil, false
	}
	return o.TagNames, true
}

// HasTagNames returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasTagNames() bool {
	if o != nil && o.TagNames != nil {
		return true
	}

	return false
}

// SetTagNames gets a reference to the given []string and assigns it to the TagNames field.
func (o *RouteFiltersModel) SetTagNames(v []string) {
	o.TagNames = &v
}

// GetZoneNames returns the ZoneNames field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetZoneNames() []string {
	if o == nil || o.ZoneNames == nil {
		var ret []string
		return ret
	}
	return *o.ZoneNames
}

// GetZoneNamesOk returns a tuple with the ZoneNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetZoneNamesOk() (*[]string, bool) {
	if o == nil || o.ZoneNames == nil {
		return nil, false
	}
	return o.ZoneNames, true
}

// HasZoneNames returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasZoneNames() bool {
	if o != nil && o.ZoneNames != nil {
		return true
	}

	return false
}

// SetZoneNames gets a reference to the given []string and assigns it to the ZoneNames field.
func (o *RouteFiltersModel) SetZoneNames(v []string) {
	o.ZoneNames = &v
}

// GetOptimized returns the Optimized field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetOptimized() []bool {
	if o == nil || o.Optimized == nil {
		var ret []bool
		return ret
	}
	return *o.Optimized
}

// GetOptimizedOk returns a tuple with the Optimized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetOptimizedOk() (*[]bool, bool) {
	if o == nil || o.Optimized == nil {
		return nil, false
	}
	return o.Optimized, true
}

// HasOptimized returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasOptimized() bool {
	if o != nil && o.Optimized != nil {
		return true
	}

	return false
}

// SetOptimized gets a reference to the given []bool and assigns it to the Optimized field.
func (o *RouteFiltersModel) SetOptimized(v []bool) {
	o.Optimized = &v
}

// GetBlocked returns the Blocked field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetBlocked() []bool {
	if o == nil || o.Blocked == nil {
		var ret []bool
		return ret
	}
	return *o.Blocked
}

// GetBlockedOk returns a tuple with the Blocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetBlockedOk() (*[]bool, bool) {
	if o == nil || o.Blocked == nil {
		return nil, false
	}
	return o.Blocked, true
}

// HasBlocked returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasBlocked() bool {
	if o != nil && o.Blocked != nil {
		return true
	}

	return false
}

// SetBlocked gets a reference to the given []bool and assigns it to the Blocked field.
func (o *RouteFiltersModel) SetBlocked(v []bool) {
	o.Blocked = &v
}

// GetNrOfStops returns the NrOfStops field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetNrOfStops() []int32 {
	if o == nil || o.NrOfStops == nil {
		var ret []int32
		return ret
	}
	return *o.NrOfStops
}

// GetNrOfStopsOk returns a tuple with the NrOfStops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetNrOfStopsOk() (*[]int32, bool) {
	if o == nil || o.NrOfStops == nil {
		return nil, false
	}
	return o.NrOfStops, true
}

// HasNrOfStops returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasNrOfStops() bool {
	if o != nil && o.NrOfStops != nil {
		return true
	}

	return false
}

// SetNrOfStops gets a reference to the given []int32 and assigns it to the NrOfStops field.
func (o *RouteFiltersModel) SetNrOfStops(v []int32) {
	o.NrOfStops = &v
}

// GetSearchText returns the SearchText field value if set, zero value otherwise.
func (o *RouteFiltersModel) GetSearchText() string {
	if o == nil || o.SearchText == nil {
		var ret string
		return ret
	}
	return *o.SearchText
}

// GetSearchTextOk returns a tuple with the SearchText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteFiltersModel) GetSearchTextOk() (*string, bool) {
	if o == nil || o.SearchText == nil {
		return nil, false
	}
	return o.SearchText, true
}

// HasSearchText returns a boolean if a field has been set.
func (o *RouteFiltersModel) HasSearchText() bool {
	if o != nil && o.SearchText != nil {
		return true
	}

	return false
}

// SetSearchText gets a reference to the given string and assigns it to the SearchText field.
func (o *RouteFiltersModel) SetSearchText(v string) {
	o.SearchText = &v
}

func (o RouteFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CoDriverIds != nil {
		toSerialize["co_driver_ids"] = o.CoDriverIds
	}
	if o.Nr != nil {
		toSerialize["nr"] = o.Nr
	}
	if o.DateTimeFrom != nil {
		toSerialize["date_time_from"] = o.DateTimeFrom
	}
	if o.DateTimeTo != nil {
		toSerialize["date_time_to"] = o.DateTimeTo
	}
	if o.EarliestDateTimeSince != nil {
		toSerialize["earliest_date_time_since"] = o.EarliestDateTimeSince
	}
	if o.EarliestDateTimeTill != nil {
		toSerialize["earliest_date_time_till"] = o.EarliestDateTimeTill
	}
	if o.LatestDateTimeSince != nil {
		toSerialize["latest_date_time_since"] = o.LatestDateTimeSince
	}
	if o.LatestDateTimeTill != nil {
		toSerialize["latest_date_time_till"] = o.LatestDateTimeTill
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.UpdatedAtSince != nil {
		toSerialize["updated_at_since"] = o.UpdatedAtSince
	}
	if o.UpdatedAtTill != nil {
		toSerialize["updated_at_till"] = o.UpdatedAtTill
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusId != nil {
		toSerialize["status_id"] = o.StatusId
	}
	if o.DriverId != nil {
		toSerialize["driver_id"] = o.DriverId
	}
	if o.RecurrenceId != nil {
		toSerialize["recurrence_id"] = o.RecurrenceId
	}
	if o.TagNames != nil {
		toSerialize["tag_names"] = o.TagNames
	}
	if o.ZoneNames != nil {
		toSerialize["zone_names"] = o.ZoneNames
	}
	if o.Optimized != nil {
		toSerialize["optimized"] = o.Optimized
	}
	if o.Blocked != nil {
		toSerialize["blocked"] = o.Blocked
	}
	if o.NrOfStops != nil {
		toSerialize["nr_of_stops"] = o.NrOfStops
	}
	if o.SearchText != nil {
		toSerialize["search_text"] = o.SearchText
	}
	return json.Marshal(toSerialize)
}

type NullableRouteFiltersModel struct {
	value *RouteFiltersModel
	isSet bool
}

func (v NullableRouteFiltersModel) Get() *RouteFiltersModel {
	return v.value
}

func (v *NullableRouteFiltersModel) Set(val *RouteFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteFiltersModel(val *RouteFiltersModel) *NullableRouteFiltersModel {
	return &NullableRouteFiltersModel{value: val, isSet: true}
}

func (v NullableRouteFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


