/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InstructionModel struct for InstructionModel
type InstructionModel struct {
	// Unique ID
	Id *int64 `json:"id,omitempty"`
	// Instructie voor chauffeur
	Content *string `json:"content,omitempty"`
}

// NewInstructionModel instantiates a new InstructionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstructionModel() *InstructionModel {
	this := InstructionModel{}
	return &this
}

// NewInstructionModelWithDefaults instantiates a new InstructionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstructionModelWithDefaults() *InstructionModel {
	this := InstructionModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InstructionModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstructionModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InstructionModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InstructionModel) SetId(v int64) {
	o.Id = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *InstructionModel) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstructionModel) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *InstructionModel) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *InstructionModel) SetContent(v string) {
	o.Content = &v
}

func (o InstructionModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}

type NullableInstructionModel struct {
	value *InstructionModel
	isSet bool
}

func (v NullableInstructionModel) Get() *InstructionModel {
	return v.value
}

func (v *NullableInstructionModel) Set(val *InstructionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableInstructionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableInstructionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstructionModel(val *InstructionModel) *NullableInstructionModel {
	return &NullableInstructionModel{value: val, isSet: true}
}

func (v NullableInstructionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstructionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


