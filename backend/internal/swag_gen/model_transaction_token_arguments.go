/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TransactionTokenArguments struct for TransactionTokenArguments
type TransactionTokenArguments struct {
	// Transaction ID
	TransactionId *int32 `json:"transaction_id,omitempty"`
}

// NewTransactionTokenArguments instantiates a new TransactionTokenArguments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionTokenArguments() *TransactionTokenArguments {
	this := TransactionTokenArguments{}
	return &this
}

// NewTransactionTokenArgumentsWithDefaults instantiates a new TransactionTokenArguments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionTokenArgumentsWithDefaults() *TransactionTokenArguments {
	this := TransactionTokenArguments{}
	return &this
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *TransactionTokenArguments) GetTransactionId() int32 {
	if o == nil || o.TransactionId == nil {
		var ret int32
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionTokenArguments) GetTransactionIdOk() (*int32, bool) {
	if o == nil || o.TransactionId == nil {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *TransactionTokenArguments) HasTransactionId() bool {
	if o != nil && o.TransactionId != nil {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given int32 and assigns it to the TransactionId field.
func (o *TransactionTokenArguments) SetTransactionId(v int32) {
	o.TransactionId = &v
}

func (o TransactionTokenArguments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TransactionId != nil {
		toSerialize["transaction_id"] = o.TransactionId
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionTokenArguments struct {
	value *TransactionTokenArguments
	isSet bool
}

func (v NullableTransactionTokenArguments) Get() *TransactionTokenArguments {
	return v.value
}

func (v *NullableTransactionTokenArguments) Set(val *TransactionTokenArguments) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionTokenArguments) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionTokenArguments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionTokenArguments(val *TransactionTokenArguments) *NullableTransactionTokenArguments {
	return &NullableTransactionTokenArguments{value: val, isSet: true}
}

func (v NullableTransactionTokenArguments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionTokenArguments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


