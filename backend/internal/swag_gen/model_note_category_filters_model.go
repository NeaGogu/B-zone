/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NoteCategoryFiltersModel struct for NoteCategoryFiltersModel
type NoteCategoryFiltersModel struct {
	// Bumbal note category id's
	Id *[]int32 `json:"id,omitempty"`
	// Bumbal note category names
	Name *[]string `json:"name,omitempty"`
	// whether notes of this category should be visible for the driver in the mobile app
	ShowInApp *[]bool `json:"show_in_app,omitempty"`
	// Bumbal note categories which can not be edited or removed
	Sys *[]bool `json:"sys,omitempty"`
}

// NewNoteCategoryFiltersModel instantiates a new NoteCategoryFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNoteCategoryFiltersModel() *NoteCategoryFiltersModel {
	this := NoteCategoryFiltersModel{}
	return &this
}

// NewNoteCategoryFiltersModelWithDefaults instantiates a new NoteCategoryFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNoteCategoryFiltersModelWithDefaults() *NoteCategoryFiltersModel {
	this := NoteCategoryFiltersModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NoteCategoryFiltersModel) GetId() []int32 {
	if o == nil || o.Id == nil {
		var ret []int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteCategoryFiltersModel) GetIdOk() (*[]int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NoteCategoryFiltersModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given []int32 and assigns it to the Id field.
func (o *NoteCategoryFiltersModel) SetId(v []int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NoteCategoryFiltersModel) GetName() []string {
	if o == nil || o.Name == nil {
		var ret []string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteCategoryFiltersModel) GetNameOk() (*[]string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NoteCategoryFiltersModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given []string and assigns it to the Name field.
func (o *NoteCategoryFiltersModel) SetName(v []string) {
	o.Name = &v
}

// GetShowInApp returns the ShowInApp field value if set, zero value otherwise.
func (o *NoteCategoryFiltersModel) GetShowInApp() []bool {
	if o == nil || o.ShowInApp == nil {
		var ret []bool
		return ret
	}
	return *o.ShowInApp
}

// GetShowInAppOk returns a tuple with the ShowInApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteCategoryFiltersModel) GetShowInAppOk() (*[]bool, bool) {
	if o == nil || o.ShowInApp == nil {
		return nil, false
	}
	return o.ShowInApp, true
}

// HasShowInApp returns a boolean if a field has been set.
func (o *NoteCategoryFiltersModel) HasShowInApp() bool {
	if o != nil && o.ShowInApp != nil {
		return true
	}

	return false
}

// SetShowInApp gets a reference to the given []bool and assigns it to the ShowInApp field.
func (o *NoteCategoryFiltersModel) SetShowInApp(v []bool) {
	o.ShowInApp = &v
}

// GetSys returns the Sys field value if set, zero value otherwise.
func (o *NoteCategoryFiltersModel) GetSys() []bool {
	if o == nil || o.Sys == nil {
		var ret []bool
		return ret
	}
	return *o.Sys
}

// GetSysOk returns a tuple with the Sys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NoteCategoryFiltersModel) GetSysOk() (*[]bool, bool) {
	if o == nil || o.Sys == nil {
		return nil, false
	}
	return o.Sys, true
}

// HasSys returns a boolean if a field has been set.
func (o *NoteCategoryFiltersModel) HasSys() bool {
	if o != nil && o.Sys != nil {
		return true
	}

	return false
}

// SetSys gets a reference to the given []bool and assigns it to the Sys field.
func (o *NoteCategoryFiltersModel) SetSys(v []bool) {
	o.Sys = &v
}

func (o NoteCategoryFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ShowInApp != nil {
		toSerialize["show_in_app"] = o.ShowInApp
	}
	if o.Sys != nil {
		toSerialize["sys"] = o.Sys
	}
	return json.Marshal(toSerialize)
}

type NullableNoteCategoryFiltersModel struct {
	value *NoteCategoryFiltersModel
	isSet bool
}

func (v NullableNoteCategoryFiltersModel) Get() *NoteCategoryFiltersModel {
	return v.value
}

func (v *NullableNoteCategoryFiltersModel) Set(val *NoteCategoryFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableNoteCategoryFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableNoteCategoryFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNoteCategoryFiltersModel(val *NoteCategoryFiltersModel) *NullableNoteCategoryFiltersModel {
	return &NullableNoteCategoryFiltersModel{value: val, isSet: true}
}

func (v NullableNoteCategoryFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNoteCategoryFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


