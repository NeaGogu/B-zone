/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QuestionnaireTemplateQuestionOptionTextModel struct for QuestionnaireTemplateQuestionOptionTextModel
type QuestionnaireTemplateQuestionOptionTextModel struct {
	// Unique Identifier
	Id *int64 `json:"id,omitempty"`
	// if active=0: note has been removed and is no longer visible in any bumbal interface
	Active *bool `json:"active,omitempty"`
	// Questionnaire Template Question Option ID
	QuestionnaireTemplateQuestionOptionId *string `json:"questionnaire_template_question_option_id,omitempty"`
	// ISO lang code
	LangCode *string `json:"lang_code,omitempty"`
	// Textual representation of the option
	Option *string `json:"option,omitempty"`
}

// NewQuestionnaireTemplateQuestionOptionTextModel instantiates a new QuestionnaireTemplateQuestionOptionTextModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuestionnaireTemplateQuestionOptionTextModel() *QuestionnaireTemplateQuestionOptionTextModel {
	this := QuestionnaireTemplateQuestionOptionTextModel{}
	return &this
}

// NewQuestionnaireTemplateQuestionOptionTextModelWithDefaults instantiates a new QuestionnaireTemplateQuestionOptionTextModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuestionnaireTemplateQuestionOptionTextModelWithDefaults() *QuestionnaireTemplateQuestionOptionTextModel {
	this := QuestionnaireTemplateQuestionOptionTextModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionTextModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionTextModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionTextModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *QuestionnaireTemplateQuestionOptionTextModel) SetId(v int64) {
	o.Id = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionTextModel) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionTextModel) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionTextModel) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *QuestionnaireTemplateQuestionOptionTextModel) SetActive(v bool) {
	o.Active = &v
}

// GetQuestionnaireTemplateQuestionOptionId returns the QuestionnaireTemplateQuestionOptionId field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionTextModel) GetQuestionnaireTemplateQuestionOptionId() string {
	if o == nil || o.QuestionnaireTemplateQuestionOptionId == nil {
		var ret string
		return ret
	}
	return *o.QuestionnaireTemplateQuestionOptionId
}

// GetQuestionnaireTemplateQuestionOptionIdOk returns a tuple with the QuestionnaireTemplateQuestionOptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionTextModel) GetQuestionnaireTemplateQuestionOptionIdOk() (*string, bool) {
	if o == nil || o.QuestionnaireTemplateQuestionOptionId == nil {
		return nil, false
	}
	return o.QuestionnaireTemplateQuestionOptionId, true
}

// HasQuestionnaireTemplateQuestionOptionId returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionTextModel) HasQuestionnaireTemplateQuestionOptionId() bool {
	if o != nil && o.QuestionnaireTemplateQuestionOptionId != nil {
		return true
	}

	return false
}

// SetQuestionnaireTemplateQuestionOptionId gets a reference to the given string and assigns it to the QuestionnaireTemplateQuestionOptionId field.
func (o *QuestionnaireTemplateQuestionOptionTextModel) SetQuestionnaireTemplateQuestionOptionId(v string) {
	o.QuestionnaireTemplateQuestionOptionId = &v
}

// GetLangCode returns the LangCode field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionTextModel) GetLangCode() string {
	if o == nil || o.LangCode == nil {
		var ret string
		return ret
	}
	return *o.LangCode
}

// GetLangCodeOk returns a tuple with the LangCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionTextModel) GetLangCodeOk() (*string, bool) {
	if o == nil || o.LangCode == nil {
		return nil, false
	}
	return o.LangCode, true
}

// HasLangCode returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionTextModel) HasLangCode() bool {
	if o != nil && o.LangCode != nil {
		return true
	}

	return false
}

// SetLangCode gets a reference to the given string and assigns it to the LangCode field.
func (o *QuestionnaireTemplateQuestionOptionTextModel) SetLangCode(v string) {
	o.LangCode = &v
}

// GetOption returns the Option field value if set, zero value otherwise.
func (o *QuestionnaireTemplateQuestionOptionTextModel) GetOption() string {
	if o == nil || o.Option == nil {
		var ret string
		return ret
	}
	return *o.Option
}

// GetOptionOk returns a tuple with the Option field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireTemplateQuestionOptionTextModel) GetOptionOk() (*string, bool) {
	if o == nil || o.Option == nil {
		return nil, false
	}
	return o.Option, true
}

// HasOption returns a boolean if a field has been set.
func (o *QuestionnaireTemplateQuestionOptionTextModel) HasOption() bool {
	if o != nil && o.Option != nil {
		return true
	}

	return false
}

// SetOption gets a reference to the given string and assigns it to the Option field.
func (o *QuestionnaireTemplateQuestionOptionTextModel) SetOption(v string) {
	o.Option = &v
}

func (o QuestionnaireTemplateQuestionOptionTextModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.QuestionnaireTemplateQuestionOptionId != nil {
		toSerialize["questionnaire_template_question_option_id"] = o.QuestionnaireTemplateQuestionOptionId
	}
	if o.LangCode != nil {
		toSerialize["lang_code"] = o.LangCode
	}
	if o.Option != nil {
		toSerialize["option"] = o.Option
	}
	return json.Marshal(toSerialize)
}

type NullableQuestionnaireTemplateQuestionOptionTextModel struct {
	value *QuestionnaireTemplateQuestionOptionTextModel
	isSet bool
}

func (v NullableQuestionnaireTemplateQuestionOptionTextModel) Get() *QuestionnaireTemplateQuestionOptionTextModel {
	return v.value
}

func (v *NullableQuestionnaireTemplateQuestionOptionTextModel) Set(val *QuestionnaireTemplateQuestionOptionTextModel) {
	v.value = val
	v.isSet = true
}

func (v NullableQuestionnaireTemplateQuestionOptionTextModel) IsSet() bool {
	return v.isSet
}

func (v *NullableQuestionnaireTemplateQuestionOptionTextModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuestionnaireTemplateQuestionOptionTextModel(val *QuestionnaireTemplateQuestionOptionTextModel) *NullableQuestionnaireTemplateQuestionOptionTextModel {
	return &NullableQuestionnaireTemplateQuestionOptionTextModel{value: val, isSet: true}
}

func (v NullableQuestionnaireTemplateQuestionOptionTextModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuestionnaireTemplateQuestionOptionTextModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


