/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddTagToObjectFiltersModel struct for AddTagToObjectFiltersModel
type AddTagToObjectFiltersModel struct {
	// The id of the object where the tag should be added to
	Id *int64 `json:"id,omitempty"`
	// The links to find the object where the tag should be added to
	Links *[]LinkModel `json:"links,omitempty"`
	// The object type id of the object where the tag should be added to
	ObjectType *int64 `json:"object_type,omitempty"`
	// The object type name of the object where the tag should be added to
	ObjectTypeName *string `json:"object_type_name,omitempty"`
}

// NewAddTagToObjectFiltersModel instantiates a new AddTagToObjectFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddTagToObjectFiltersModel() *AddTagToObjectFiltersModel {
	this := AddTagToObjectFiltersModel{}
	return &this
}

// NewAddTagToObjectFiltersModelWithDefaults instantiates a new AddTagToObjectFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddTagToObjectFiltersModelWithDefaults() *AddTagToObjectFiltersModel {
	this := AddTagToObjectFiltersModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddTagToObjectFiltersModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddTagToObjectFiltersModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AddTagToObjectFiltersModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AddTagToObjectFiltersModel) SetId(v int64) {
	o.Id = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AddTagToObjectFiltersModel) GetLinks() []LinkModel {
	if o == nil || o.Links == nil {
		var ret []LinkModel
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddTagToObjectFiltersModel) GetLinksOk() (*[]LinkModel, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AddTagToObjectFiltersModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkModel and assigns it to the Links field.
func (o *AddTagToObjectFiltersModel) SetLinks(v []LinkModel) {
	o.Links = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *AddTagToObjectFiltersModel) GetObjectType() int64 {
	if o == nil || o.ObjectType == nil {
		var ret int64
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddTagToObjectFiltersModel) GetObjectTypeOk() (*int64, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *AddTagToObjectFiltersModel) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given int64 and assigns it to the ObjectType field.
func (o *AddTagToObjectFiltersModel) SetObjectType(v int64) {
	o.ObjectType = &v
}

// GetObjectTypeName returns the ObjectTypeName field value if set, zero value otherwise.
func (o *AddTagToObjectFiltersModel) GetObjectTypeName() string {
	if o == nil || o.ObjectTypeName == nil {
		var ret string
		return ret
	}
	return *o.ObjectTypeName
}

// GetObjectTypeNameOk returns a tuple with the ObjectTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddTagToObjectFiltersModel) GetObjectTypeNameOk() (*string, bool) {
	if o == nil || o.ObjectTypeName == nil {
		return nil, false
	}
	return o.ObjectTypeName, true
}

// HasObjectTypeName returns a boolean if a field has been set.
func (o *AddTagToObjectFiltersModel) HasObjectTypeName() bool {
	if o != nil && o.ObjectTypeName != nil {
		return true
	}

	return false
}

// SetObjectTypeName gets a reference to the given string and assigns it to the ObjectTypeName field.
func (o *AddTagToObjectFiltersModel) SetObjectTypeName(v string) {
	o.ObjectTypeName = &v
}

func (o AddTagToObjectFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.ObjectType != nil {
		toSerialize["object_type"] = o.ObjectType
	}
	if o.ObjectTypeName != nil {
		toSerialize["object_type_name"] = o.ObjectTypeName
	}
	return json.Marshal(toSerialize)
}

type NullableAddTagToObjectFiltersModel struct {
	value *AddTagToObjectFiltersModel
	isSet bool
}

func (v NullableAddTagToObjectFiltersModel) Get() *AddTagToObjectFiltersModel {
	return v.value
}

func (v *NullableAddTagToObjectFiltersModel) Set(val *AddTagToObjectFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddTagToObjectFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddTagToObjectFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddTagToObjectFiltersModel(val *AddTagToObjectFiltersModel) *NullableAddTagToObjectFiltersModel {
	return &NullableAddTagToObjectFiltersModel{value: val, isSet: true}
}

func (v NullableAddTagToObjectFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddTagToObjectFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


