/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ActivityFiltersModel struct for ActivityFiltersModel
type ActivityFiltersModel struct {
	// Unique Identifier(s)
	Id *[]int32 `json:"id,omitempty"`
	// Activity nr
	Nr *[]string `json:"nr,omitempty"`
	// Identifier(s) assignment(s) for activities
	AssignmentId *[]int32 `json:"assignment_id,omitempty"`
	// Unique Identifier(s) partner shipment activity
	ShipmentActivityId *[]int32 `json:"shipment_activity_id,omitempty"`
	// Show activities with a earliest_delivery_date_time younger than filter value
	EarliestDeliveryDateTimeSince *time.Time `json:"earliest_delivery_date_time_since,omitempty"`
	// Show activities with a earliest_delivery_date_time older than filter value
	EarliestDeliveryDateTimeTill *time.Time `json:"earliest_delivery_date_time_till,omitempty"`
	// Show activities with a latest_delivery_date_time younger than filter value
	LatestDeliveryDateTimeSince *time.Time `json:"latest_delivery_date_time_since,omitempty"`
	// Show activities with a latest_delivery_date_time older than filter value
	LatestDeliveryDateTimeTill *time.Time `json:"latest_delivery_date_time_till,omitempty"`
	// Show activities with a earliest_delivery_date younger than filter value
	EarliestDeliveryDateSince *string `json:"earliest_delivery_date_since,omitempty"`
	// Show activities with a earliest_delivery_date older than filter value
	EarliestDeliveryDateTill *string `json:"earliest_delivery_date_till,omitempty"`
	// Show activities with a latest_delivery_date younger than filter value
	LatestDeliveryDateSince *string `json:"latest_delivery_date_since,omitempty"`
	// Show activities with a latest_delivery_date older than filter value
	LatestDeliveryDateTill *string `json:"latest_delivery_date_till,omitempty"`
	// DateTime From
	DateTimeFrom *time.Time `json:"date_time_from,omitempty"`
	// DateTime To
	DateTimeTo *time.Time `json:"date_time_to,omitempty"`
	// filter activities with a DateTime From since this input
	DateTimeFromSince *time.Time `json:"date_time_from_since,omitempty"`
	// filter activities with a DateTime From till this input
	DateTimeFromTill *time.Time `json:"date_time_from_till,omitempty"`
	// filter activities with a DateTime To since this input
	DateTimeToSince *time.Time `json:"date_time_to_since,omitempty"`
	// filter activities with a DateTime To till this input
	DateTimeToTill *time.Time `json:"date_time_to_till,omitempty"`
	// Planned DateTime From
	PlannedDateTimeFrom *time.Time `json:"planned_date_time_from,omitempty"`
	// Planned DateTime To
	PlannedDateTimeTo *time.Time `json:"planned_date_time_to,omitempty"`
	// filter activities with a planned DateTime From since this input
	PlannedDateTimeFromSince *time.Time `json:"planned_date_time_from_since,omitempty"`
	// filter activities with a planned DateTime From till this input
	PlannedDateTimeFromTill *time.Time `json:"planned_date_time_from_till,omitempty"`
	// filter activities with a planned DateTime To since this input
	PlannedDateTimeToSince *time.Time `json:"planned_date_time_to_since,omitempty"`
	// filter activities with a planned DateTime To till this input
	PlannedDateTimeToTill *time.Time `json:"planned_date_time_to_till,omitempty"`
	// Show updated since
	UpdatedAtSince *time.Time `json:"updated_at_since,omitempty"`
	// Show updated till
	UpdatedAtTill *time.Time `json:"updated_at_till,omitempty"`
	// Activity Status
	Status *[]string `json:"status,omitempty"`
	// Activity Status name
	StatusName *[]string `json:"status_name,omitempty"`
	// Active status of Activity, 0 values represent deleted activities
	Active *[]int32 `json:"active,omitempty"`
	// Activity Status id
	StatusId *[]int32 `json:"status_id,omitempty"`
	// Activity type id
	ActivityTypeId *[]int32 `json:"activity_type_id,omitempty"`
	// Activity locked status. 0: not locked, 1: locked on route and time, 2: only locked on route
	Locked *[]int32 `json:"locked,omitempty"`
	// Activity type name
	ActivityTypeName *[]string `json:"activity_type_name,omitempty"`
	// bundle activity id(s)
	BundleActivityId *[]int32 `json:"bundle_activity_id,omitempty"`
	// Activity description (not visible in Bumbal interface)
	Description *[]string `json:"description,omitempty"`
	// Activity reference
	Reference *[]string `json:"reference,omitempty"`
	// Priority. 1: low, 2: medium, 3: high
	Priority *[]int32 `json:"priority,omitempty"`
	// top priority
	TopPriority *bool `json:"top_priority,omitempty"`
	// has a properly geocoded address
	HasGeolocation *bool `json:"has_geolocation,omitempty"`
	// has a route assigned
	HasRouteAssigned *bool `json:"has_route_assigned,omitempty"`
	// free search through text and numeric type columns
	SearchText *string `json:"search_text,omitempty"`
	// Route id
	RouteId *[]int32 `json:"route_id,omitempty"`
	// ID of the user who will execute this activity
	UserId *int32 `json:"user_id,omitempty"`
	// Party ID
	PartyId *int32 `json:"party_id,omitempty"`
	// Recurrence ID
	RecurrenceId *int32 `json:"recurrence_id,omitempty"`
	// 
	DepotAddressLinks *[]LinkModel `json:"depot_address_links,omitempty"`
	// Tag names
	TagNames *[]string `json:"tag_names,omitempty"`
	// Zone names
	ZoneNames *[]string `json:"zone_names,omitempty"`
	// Activity Link ids
	Link *[]map[string]interface{} `json:"link,omitempty"`
	// Activity Link ids
	Links *[]map[string]interface{} `json:"links,omitempty"`
	// Filter by activity created at since
	CreatedAtSince *time.Time `json:"created_at_since,omitempty"`
	// Filter by activity created at till
	CreatedAtTill *time.Time `json:"created_at_till,omitempty"`
	// Filter by time_slots created at since
	TimeSlotsCreatedAtSince *time.Time `json:"time_slots_created_at_since,omitempty"`
	// Filter by time_slots created at till
	TimeSlotsCreatedAtTill *time.Time `json:"time_slots_created_at_till,omitempty"`
	// Depot address ID(s)
	DepotAddressId *[]int32 `json:"depot_address_id,omitempty"`
	// address ID(s) (from stored masterdata)
	AddressId *[]int32 `json:"address_id,omitempty"`
}

// NewActivityFiltersModel instantiates a new ActivityFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityFiltersModel() *ActivityFiltersModel {
	this := ActivityFiltersModel{}
	return &this
}

// NewActivityFiltersModelWithDefaults instantiates a new ActivityFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityFiltersModelWithDefaults() *ActivityFiltersModel {
	this := ActivityFiltersModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetId() []int32 {
	if o == nil || o.Id == nil {
		var ret []int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetIdOk() (*[]int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given []int32 and assigns it to the Id field.
func (o *ActivityFiltersModel) SetId(v []int32) {
	o.Id = &v
}

// GetNr returns the Nr field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetNr() []string {
	if o == nil || o.Nr == nil {
		var ret []string
		return ret
	}
	return *o.Nr
}

// GetNrOk returns a tuple with the Nr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetNrOk() (*[]string, bool) {
	if o == nil || o.Nr == nil {
		return nil, false
	}
	return o.Nr, true
}

// HasNr returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasNr() bool {
	if o != nil && o.Nr != nil {
		return true
	}

	return false
}

// SetNr gets a reference to the given []string and assigns it to the Nr field.
func (o *ActivityFiltersModel) SetNr(v []string) {
	o.Nr = &v
}

// GetAssignmentId returns the AssignmentId field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetAssignmentId() []int32 {
	if o == nil || o.AssignmentId == nil {
		var ret []int32
		return ret
	}
	return *o.AssignmentId
}

// GetAssignmentIdOk returns a tuple with the AssignmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetAssignmentIdOk() (*[]int32, bool) {
	if o == nil || o.AssignmentId == nil {
		return nil, false
	}
	return o.AssignmentId, true
}

// HasAssignmentId returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasAssignmentId() bool {
	if o != nil && o.AssignmentId != nil {
		return true
	}

	return false
}

// SetAssignmentId gets a reference to the given []int32 and assigns it to the AssignmentId field.
func (o *ActivityFiltersModel) SetAssignmentId(v []int32) {
	o.AssignmentId = &v
}

// GetShipmentActivityId returns the ShipmentActivityId field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetShipmentActivityId() []int32 {
	if o == nil || o.ShipmentActivityId == nil {
		var ret []int32
		return ret
	}
	return *o.ShipmentActivityId
}

// GetShipmentActivityIdOk returns a tuple with the ShipmentActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetShipmentActivityIdOk() (*[]int32, bool) {
	if o == nil || o.ShipmentActivityId == nil {
		return nil, false
	}
	return o.ShipmentActivityId, true
}

// HasShipmentActivityId returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasShipmentActivityId() bool {
	if o != nil && o.ShipmentActivityId != nil {
		return true
	}

	return false
}

// SetShipmentActivityId gets a reference to the given []int32 and assigns it to the ShipmentActivityId field.
func (o *ActivityFiltersModel) SetShipmentActivityId(v []int32) {
	o.ShipmentActivityId = &v
}

// GetEarliestDeliveryDateTimeSince returns the EarliestDeliveryDateTimeSince field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetEarliestDeliveryDateTimeSince() time.Time {
	if o == nil || o.EarliestDeliveryDateTimeSince == nil {
		var ret time.Time
		return ret
	}
	return *o.EarliestDeliveryDateTimeSince
}

// GetEarliestDeliveryDateTimeSinceOk returns a tuple with the EarliestDeliveryDateTimeSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetEarliestDeliveryDateTimeSinceOk() (*time.Time, bool) {
	if o == nil || o.EarliestDeliveryDateTimeSince == nil {
		return nil, false
	}
	return o.EarliestDeliveryDateTimeSince, true
}

// HasEarliestDeliveryDateTimeSince returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasEarliestDeliveryDateTimeSince() bool {
	if o != nil && o.EarliestDeliveryDateTimeSince != nil {
		return true
	}

	return false
}

// SetEarliestDeliveryDateTimeSince gets a reference to the given time.Time and assigns it to the EarliestDeliveryDateTimeSince field.
func (o *ActivityFiltersModel) SetEarliestDeliveryDateTimeSince(v time.Time) {
	o.EarliestDeliveryDateTimeSince = &v
}

// GetEarliestDeliveryDateTimeTill returns the EarliestDeliveryDateTimeTill field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetEarliestDeliveryDateTimeTill() time.Time {
	if o == nil || o.EarliestDeliveryDateTimeTill == nil {
		var ret time.Time
		return ret
	}
	return *o.EarliestDeliveryDateTimeTill
}

// GetEarliestDeliveryDateTimeTillOk returns a tuple with the EarliestDeliveryDateTimeTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetEarliestDeliveryDateTimeTillOk() (*time.Time, bool) {
	if o == nil || o.EarliestDeliveryDateTimeTill == nil {
		return nil, false
	}
	return o.EarliestDeliveryDateTimeTill, true
}

// HasEarliestDeliveryDateTimeTill returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasEarliestDeliveryDateTimeTill() bool {
	if o != nil && o.EarliestDeliveryDateTimeTill != nil {
		return true
	}

	return false
}

// SetEarliestDeliveryDateTimeTill gets a reference to the given time.Time and assigns it to the EarliestDeliveryDateTimeTill field.
func (o *ActivityFiltersModel) SetEarliestDeliveryDateTimeTill(v time.Time) {
	o.EarliestDeliveryDateTimeTill = &v
}

// GetLatestDeliveryDateTimeSince returns the LatestDeliveryDateTimeSince field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetLatestDeliveryDateTimeSince() time.Time {
	if o == nil || o.LatestDeliveryDateTimeSince == nil {
		var ret time.Time
		return ret
	}
	return *o.LatestDeliveryDateTimeSince
}

// GetLatestDeliveryDateTimeSinceOk returns a tuple with the LatestDeliveryDateTimeSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetLatestDeliveryDateTimeSinceOk() (*time.Time, bool) {
	if o == nil || o.LatestDeliveryDateTimeSince == nil {
		return nil, false
	}
	return o.LatestDeliveryDateTimeSince, true
}

// HasLatestDeliveryDateTimeSince returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasLatestDeliveryDateTimeSince() bool {
	if o != nil && o.LatestDeliveryDateTimeSince != nil {
		return true
	}

	return false
}

// SetLatestDeliveryDateTimeSince gets a reference to the given time.Time and assigns it to the LatestDeliveryDateTimeSince field.
func (o *ActivityFiltersModel) SetLatestDeliveryDateTimeSince(v time.Time) {
	o.LatestDeliveryDateTimeSince = &v
}

// GetLatestDeliveryDateTimeTill returns the LatestDeliveryDateTimeTill field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetLatestDeliveryDateTimeTill() time.Time {
	if o == nil || o.LatestDeliveryDateTimeTill == nil {
		var ret time.Time
		return ret
	}
	return *o.LatestDeliveryDateTimeTill
}

// GetLatestDeliveryDateTimeTillOk returns a tuple with the LatestDeliveryDateTimeTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetLatestDeliveryDateTimeTillOk() (*time.Time, bool) {
	if o == nil || o.LatestDeliveryDateTimeTill == nil {
		return nil, false
	}
	return o.LatestDeliveryDateTimeTill, true
}

// HasLatestDeliveryDateTimeTill returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasLatestDeliveryDateTimeTill() bool {
	if o != nil && o.LatestDeliveryDateTimeTill != nil {
		return true
	}

	return false
}

// SetLatestDeliveryDateTimeTill gets a reference to the given time.Time and assigns it to the LatestDeliveryDateTimeTill field.
func (o *ActivityFiltersModel) SetLatestDeliveryDateTimeTill(v time.Time) {
	o.LatestDeliveryDateTimeTill = &v
}

// GetEarliestDeliveryDateSince returns the EarliestDeliveryDateSince field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetEarliestDeliveryDateSince() string {
	if o == nil || o.EarliestDeliveryDateSince == nil {
		var ret string
		return ret
	}
	return *o.EarliestDeliveryDateSince
}

// GetEarliestDeliveryDateSinceOk returns a tuple with the EarliestDeliveryDateSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetEarliestDeliveryDateSinceOk() (*string, bool) {
	if o == nil || o.EarliestDeliveryDateSince == nil {
		return nil, false
	}
	return o.EarliestDeliveryDateSince, true
}

// HasEarliestDeliveryDateSince returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasEarliestDeliveryDateSince() bool {
	if o != nil && o.EarliestDeliveryDateSince != nil {
		return true
	}

	return false
}

// SetEarliestDeliveryDateSince gets a reference to the given string and assigns it to the EarliestDeliveryDateSince field.
func (o *ActivityFiltersModel) SetEarliestDeliveryDateSince(v string) {
	o.EarliestDeliveryDateSince = &v
}

// GetEarliestDeliveryDateTill returns the EarliestDeliveryDateTill field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetEarliestDeliveryDateTill() string {
	if o == nil || o.EarliestDeliveryDateTill == nil {
		var ret string
		return ret
	}
	return *o.EarliestDeliveryDateTill
}

// GetEarliestDeliveryDateTillOk returns a tuple with the EarliestDeliveryDateTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetEarliestDeliveryDateTillOk() (*string, bool) {
	if o == nil || o.EarliestDeliveryDateTill == nil {
		return nil, false
	}
	return o.EarliestDeliveryDateTill, true
}

// HasEarliestDeliveryDateTill returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasEarliestDeliveryDateTill() bool {
	if o != nil && o.EarliestDeliveryDateTill != nil {
		return true
	}

	return false
}

// SetEarliestDeliveryDateTill gets a reference to the given string and assigns it to the EarliestDeliveryDateTill field.
func (o *ActivityFiltersModel) SetEarliestDeliveryDateTill(v string) {
	o.EarliestDeliveryDateTill = &v
}

// GetLatestDeliveryDateSince returns the LatestDeliveryDateSince field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetLatestDeliveryDateSince() string {
	if o == nil || o.LatestDeliveryDateSince == nil {
		var ret string
		return ret
	}
	return *o.LatestDeliveryDateSince
}

// GetLatestDeliveryDateSinceOk returns a tuple with the LatestDeliveryDateSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetLatestDeliveryDateSinceOk() (*string, bool) {
	if o == nil || o.LatestDeliveryDateSince == nil {
		return nil, false
	}
	return o.LatestDeliveryDateSince, true
}

// HasLatestDeliveryDateSince returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasLatestDeliveryDateSince() bool {
	if o != nil && o.LatestDeliveryDateSince != nil {
		return true
	}

	return false
}

// SetLatestDeliveryDateSince gets a reference to the given string and assigns it to the LatestDeliveryDateSince field.
func (o *ActivityFiltersModel) SetLatestDeliveryDateSince(v string) {
	o.LatestDeliveryDateSince = &v
}

// GetLatestDeliveryDateTill returns the LatestDeliveryDateTill field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetLatestDeliveryDateTill() string {
	if o == nil || o.LatestDeliveryDateTill == nil {
		var ret string
		return ret
	}
	return *o.LatestDeliveryDateTill
}

// GetLatestDeliveryDateTillOk returns a tuple with the LatestDeliveryDateTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetLatestDeliveryDateTillOk() (*string, bool) {
	if o == nil || o.LatestDeliveryDateTill == nil {
		return nil, false
	}
	return o.LatestDeliveryDateTill, true
}

// HasLatestDeliveryDateTill returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasLatestDeliveryDateTill() bool {
	if o != nil && o.LatestDeliveryDateTill != nil {
		return true
	}

	return false
}

// SetLatestDeliveryDateTill gets a reference to the given string and assigns it to the LatestDeliveryDateTill field.
func (o *ActivityFiltersModel) SetLatestDeliveryDateTill(v string) {
	o.LatestDeliveryDateTill = &v
}

// GetDateTimeFrom returns the DateTimeFrom field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetDateTimeFrom() time.Time {
	if o == nil || o.DateTimeFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeFrom
}

// GetDateTimeFromOk returns a tuple with the DateTimeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetDateTimeFromOk() (*time.Time, bool) {
	if o == nil || o.DateTimeFrom == nil {
		return nil, false
	}
	return o.DateTimeFrom, true
}

// HasDateTimeFrom returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasDateTimeFrom() bool {
	if o != nil && o.DateTimeFrom != nil {
		return true
	}

	return false
}

// SetDateTimeFrom gets a reference to the given time.Time and assigns it to the DateTimeFrom field.
func (o *ActivityFiltersModel) SetDateTimeFrom(v time.Time) {
	o.DateTimeFrom = &v
}

// GetDateTimeTo returns the DateTimeTo field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetDateTimeTo() time.Time {
	if o == nil || o.DateTimeTo == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeTo
}

// GetDateTimeToOk returns a tuple with the DateTimeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetDateTimeToOk() (*time.Time, bool) {
	if o == nil || o.DateTimeTo == nil {
		return nil, false
	}
	return o.DateTimeTo, true
}

// HasDateTimeTo returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasDateTimeTo() bool {
	if o != nil && o.DateTimeTo != nil {
		return true
	}

	return false
}

// SetDateTimeTo gets a reference to the given time.Time and assigns it to the DateTimeTo field.
func (o *ActivityFiltersModel) SetDateTimeTo(v time.Time) {
	o.DateTimeTo = &v
}

// GetDateTimeFromSince returns the DateTimeFromSince field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetDateTimeFromSince() time.Time {
	if o == nil || o.DateTimeFromSince == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeFromSince
}

// GetDateTimeFromSinceOk returns a tuple with the DateTimeFromSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetDateTimeFromSinceOk() (*time.Time, bool) {
	if o == nil || o.DateTimeFromSince == nil {
		return nil, false
	}
	return o.DateTimeFromSince, true
}

// HasDateTimeFromSince returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasDateTimeFromSince() bool {
	if o != nil && o.DateTimeFromSince != nil {
		return true
	}

	return false
}

// SetDateTimeFromSince gets a reference to the given time.Time and assigns it to the DateTimeFromSince field.
func (o *ActivityFiltersModel) SetDateTimeFromSince(v time.Time) {
	o.DateTimeFromSince = &v
}

// GetDateTimeFromTill returns the DateTimeFromTill field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetDateTimeFromTill() time.Time {
	if o == nil || o.DateTimeFromTill == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeFromTill
}

// GetDateTimeFromTillOk returns a tuple with the DateTimeFromTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetDateTimeFromTillOk() (*time.Time, bool) {
	if o == nil || o.DateTimeFromTill == nil {
		return nil, false
	}
	return o.DateTimeFromTill, true
}

// HasDateTimeFromTill returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasDateTimeFromTill() bool {
	if o != nil && o.DateTimeFromTill != nil {
		return true
	}

	return false
}

// SetDateTimeFromTill gets a reference to the given time.Time and assigns it to the DateTimeFromTill field.
func (o *ActivityFiltersModel) SetDateTimeFromTill(v time.Time) {
	o.DateTimeFromTill = &v
}

// GetDateTimeToSince returns the DateTimeToSince field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetDateTimeToSince() time.Time {
	if o == nil || o.DateTimeToSince == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeToSince
}

// GetDateTimeToSinceOk returns a tuple with the DateTimeToSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetDateTimeToSinceOk() (*time.Time, bool) {
	if o == nil || o.DateTimeToSince == nil {
		return nil, false
	}
	return o.DateTimeToSince, true
}

// HasDateTimeToSince returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasDateTimeToSince() bool {
	if o != nil && o.DateTimeToSince != nil {
		return true
	}

	return false
}

// SetDateTimeToSince gets a reference to the given time.Time and assigns it to the DateTimeToSince field.
func (o *ActivityFiltersModel) SetDateTimeToSince(v time.Time) {
	o.DateTimeToSince = &v
}

// GetDateTimeToTill returns the DateTimeToTill field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetDateTimeToTill() time.Time {
	if o == nil || o.DateTimeToTill == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeToTill
}

// GetDateTimeToTillOk returns a tuple with the DateTimeToTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetDateTimeToTillOk() (*time.Time, bool) {
	if o == nil || o.DateTimeToTill == nil {
		return nil, false
	}
	return o.DateTimeToTill, true
}

// HasDateTimeToTill returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasDateTimeToTill() bool {
	if o != nil && o.DateTimeToTill != nil {
		return true
	}

	return false
}

// SetDateTimeToTill gets a reference to the given time.Time and assigns it to the DateTimeToTill field.
func (o *ActivityFiltersModel) SetDateTimeToTill(v time.Time) {
	o.DateTimeToTill = &v
}

// GetPlannedDateTimeFrom returns the PlannedDateTimeFrom field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetPlannedDateTimeFrom() time.Time {
	if o == nil || o.PlannedDateTimeFrom == nil {
		var ret time.Time
		return ret
	}
	return *o.PlannedDateTimeFrom
}

// GetPlannedDateTimeFromOk returns a tuple with the PlannedDateTimeFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetPlannedDateTimeFromOk() (*time.Time, bool) {
	if o == nil || o.PlannedDateTimeFrom == nil {
		return nil, false
	}
	return o.PlannedDateTimeFrom, true
}

// HasPlannedDateTimeFrom returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasPlannedDateTimeFrom() bool {
	if o != nil && o.PlannedDateTimeFrom != nil {
		return true
	}

	return false
}

// SetPlannedDateTimeFrom gets a reference to the given time.Time and assigns it to the PlannedDateTimeFrom field.
func (o *ActivityFiltersModel) SetPlannedDateTimeFrom(v time.Time) {
	o.PlannedDateTimeFrom = &v
}

// GetPlannedDateTimeTo returns the PlannedDateTimeTo field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetPlannedDateTimeTo() time.Time {
	if o == nil || o.PlannedDateTimeTo == nil {
		var ret time.Time
		return ret
	}
	return *o.PlannedDateTimeTo
}

// GetPlannedDateTimeToOk returns a tuple with the PlannedDateTimeTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetPlannedDateTimeToOk() (*time.Time, bool) {
	if o == nil || o.PlannedDateTimeTo == nil {
		return nil, false
	}
	return o.PlannedDateTimeTo, true
}

// HasPlannedDateTimeTo returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasPlannedDateTimeTo() bool {
	if o != nil && o.PlannedDateTimeTo != nil {
		return true
	}

	return false
}

// SetPlannedDateTimeTo gets a reference to the given time.Time and assigns it to the PlannedDateTimeTo field.
func (o *ActivityFiltersModel) SetPlannedDateTimeTo(v time.Time) {
	o.PlannedDateTimeTo = &v
}

// GetPlannedDateTimeFromSince returns the PlannedDateTimeFromSince field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetPlannedDateTimeFromSince() time.Time {
	if o == nil || o.PlannedDateTimeFromSince == nil {
		var ret time.Time
		return ret
	}
	return *o.PlannedDateTimeFromSince
}

// GetPlannedDateTimeFromSinceOk returns a tuple with the PlannedDateTimeFromSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetPlannedDateTimeFromSinceOk() (*time.Time, bool) {
	if o == nil || o.PlannedDateTimeFromSince == nil {
		return nil, false
	}
	return o.PlannedDateTimeFromSince, true
}

// HasPlannedDateTimeFromSince returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasPlannedDateTimeFromSince() bool {
	if o != nil && o.PlannedDateTimeFromSince != nil {
		return true
	}

	return false
}

// SetPlannedDateTimeFromSince gets a reference to the given time.Time and assigns it to the PlannedDateTimeFromSince field.
func (o *ActivityFiltersModel) SetPlannedDateTimeFromSince(v time.Time) {
	o.PlannedDateTimeFromSince = &v
}

// GetPlannedDateTimeFromTill returns the PlannedDateTimeFromTill field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetPlannedDateTimeFromTill() time.Time {
	if o == nil || o.PlannedDateTimeFromTill == nil {
		var ret time.Time
		return ret
	}
	return *o.PlannedDateTimeFromTill
}

// GetPlannedDateTimeFromTillOk returns a tuple with the PlannedDateTimeFromTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetPlannedDateTimeFromTillOk() (*time.Time, bool) {
	if o == nil || o.PlannedDateTimeFromTill == nil {
		return nil, false
	}
	return o.PlannedDateTimeFromTill, true
}

// HasPlannedDateTimeFromTill returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasPlannedDateTimeFromTill() bool {
	if o != nil && o.PlannedDateTimeFromTill != nil {
		return true
	}

	return false
}

// SetPlannedDateTimeFromTill gets a reference to the given time.Time and assigns it to the PlannedDateTimeFromTill field.
func (o *ActivityFiltersModel) SetPlannedDateTimeFromTill(v time.Time) {
	o.PlannedDateTimeFromTill = &v
}

// GetPlannedDateTimeToSince returns the PlannedDateTimeToSince field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetPlannedDateTimeToSince() time.Time {
	if o == nil || o.PlannedDateTimeToSince == nil {
		var ret time.Time
		return ret
	}
	return *o.PlannedDateTimeToSince
}

// GetPlannedDateTimeToSinceOk returns a tuple with the PlannedDateTimeToSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetPlannedDateTimeToSinceOk() (*time.Time, bool) {
	if o == nil || o.PlannedDateTimeToSince == nil {
		return nil, false
	}
	return o.PlannedDateTimeToSince, true
}

// HasPlannedDateTimeToSince returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasPlannedDateTimeToSince() bool {
	if o != nil && o.PlannedDateTimeToSince != nil {
		return true
	}

	return false
}

// SetPlannedDateTimeToSince gets a reference to the given time.Time and assigns it to the PlannedDateTimeToSince field.
func (o *ActivityFiltersModel) SetPlannedDateTimeToSince(v time.Time) {
	o.PlannedDateTimeToSince = &v
}

// GetPlannedDateTimeToTill returns the PlannedDateTimeToTill field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetPlannedDateTimeToTill() time.Time {
	if o == nil || o.PlannedDateTimeToTill == nil {
		var ret time.Time
		return ret
	}
	return *o.PlannedDateTimeToTill
}

// GetPlannedDateTimeToTillOk returns a tuple with the PlannedDateTimeToTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetPlannedDateTimeToTillOk() (*time.Time, bool) {
	if o == nil || o.PlannedDateTimeToTill == nil {
		return nil, false
	}
	return o.PlannedDateTimeToTill, true
}

// HasPlannedDateTimeToTill returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasPlannedDateTimeToTill() bool {
	if o != nil && o.PlannedDateTimeToTill != nil {
		return true
	}

	return false
}

// SetPlannedDateTimeToTill gets a reference to the given time.Time and assigns it to the PlannedDateTimeToTill field.
func (o *ActivityFiltersModel) SetPlannedDateTimeToTill(v time.Time) {
	o.PlannedDateTimeToTill = &v
}

// GetUpdatedAtSince returns the UpdatedAtSince field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetUpdatedAtSince() time.Time {
	if o == nil || o.UpdatedAtSince == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAtSince
}

// GetUpdatedAtSinceOk returns a tuple with the UpdatedAtSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetUpdatedAtSinceOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAtSince == nil {
		return nil, false
	}
	return o.UpdatedAtSince, true
}

// HasUpdatedAtSince returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasUpdatedAtSince() bool {
	if o != nil && o.UpdatedAtSince != nil {
		return true
	}

	return false
}

// SetUpdatedAtSince gets a reference to the given time.Time and assigns it to the UpdatedAtSince field.
func (o *ActivityFiltersModel) SetUpdatedAtSince(v time.Time) {
	o.UpdatedAtSince = &v
}

// GetUpdatedAtTill returns the UpdatedAtTill field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetUpdatedAtTill() time.Time {
	if o == nil || o.UpdatedAtTill == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAtTill
}

// GetUpdatedAtTillOk returns a tuple with the UpdatedAtTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetUpdatedAtTillOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAtTill == nil {
		return nil, false
	}
	return o.UpdatedAtTill, true
}

// HasUpdatedAtTill returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasUpdatedAtTill() bool {
	if o != nil && o.UpdatedAtTill != nil {
		return true
	}

	return false
}

// SetUpdatedAtTill gets a reference to the given time.Time and assigns it to the UpdatedAtTill field.
func (o *ActivityFiltersModel) SetUpdatedAtTill(v time.Time) {
	o.UpdatedAtTill = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetStatus() []string {
	if o == nil || o.Status == nil {
		var ret []string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetStatusOk() (*[]string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given []string and assigns it to the Status field.
func (o *ActivityFiltersModel) SetStatus(v []string) {
	o.Status = &v
}

// GetStatusName returns the StatusName field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetStatusName() []string {
	if o == nil || o.StatusName == nil {
		var ret []string
		return ret
	}
	return *o.StatusName
}

// GetStatusNameOk returns a tuple with the StatusName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetStatusNameOk() (*[]string, bool) {
	if o == nil || o.StatusName == nil {
		return nil, false
	}
	return o.StatusName, true
}

// HasStatusName returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasStatusName() bool {
	if o != nil && o.StatusName != nil {
		return true
	}

	return false
}

// SetStatusName gets a reference to the given []string and assigns it to the StatusName field.
func (o *ActivityFiltersModel) SetStatusName(v []string) {
	o.StatusName = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetActive() []int32 {
	if o == nil || o.Active == nil {
		var ret []int32
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetActiveOk() (*[]int32, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given []int32 and assigns it to the Active field.
func (o *ActivityFiltersModel) SetActive(v []int32) {
	o.Active = &v
}

// GetStatusId returns the StatusId field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetStatusId() []int32 {
	if o == nil || o.StatusId == nil {
		var ret []int32
		return ret
	}
	return *o.StatusId
}

// GetStatusIdOk returns a tuple with the StatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetStatusIdOk() (*[]int32, bool) {
	if o == nil || o.StatusId == nil {
		return nil, false
	}
	return o.StatusId, true
}

// HasStatusId returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasStatusId() bool {
	if o != nil && o.StatusId != nil {
		return true
	}

	return false
}

// SetStatusId gets a reference to the given []int32 and assigns it to the StatusId field.
func (o *ActivityFiltersModel) SetStatusId(v []int32) {
	o.StatusId = &v
}

// GetActivityTypeId returns the ActivityTypeId field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetActivityTypeId() []int32 {
	if o == nil || o.ActivityTypeId == nil {
		var ret []int32
		return ret
	}
	return *o.ActivityTypeId
}

// GetActivityTypeIdOk returns a tuple with the ActivityTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetActivityTypeIdOk() (*[]int32, bool) {
	if o == nil || o.ActivityTypeId == nil {
		return nil, false
	}
	return o.ActivityTypeId, true
}

// HasActivityTypeId returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasActivityTypeId() bool {
	if o != nil && o.ActivityTypeId != nil {
		return true
	}

	return false
}

// SetActivityTypeId gets a reference to the given []int32 and assigns it to the ActivityTypeId field.
func (o *ActivityFiltersModel) SetActivityTypeId(v []int32) {
	o.ActivityTypeId = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetLocked() []int32 {
	if o == nil || o.Locked == nil {
		var ret []int32
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetLockedOk() (*[]int32, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given []int32 and assigns it to the Locked field.
func (o *ActivityFiltersModel) SetLocked(v []int32) {
	o.Locked = &v
}

// GetActivityTypeName returns the ActivityTypeName field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetActivityTypeName() []string {
	if o == nil || o.ActivityTypeName == nil {
		var ret []string
		return ret
	}
	return *o.ActivityTypeName
}

// GetActivityTypeNameOk returns a tuple with the ActivityTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetActivityTypeNameOk() (*[]string, bool) {
	if o == nil || o.ActivityTypeName == nil {
		return nil, false
	}
	return o.ActivityTypeName, true
}

// HasActivityTypeName returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasActivityTypeName() bool {
	if o != nil && o.ActivityTypeName != nil {
		return true
	}

	return false
}

// SetActivityTypeName gets a reference to the given []string and assigns it to the ActivityTypeName field.
func (o *ActivityFiltersModel) SetActivityTypeName(v []string) {
	o.ActivityTypeName = &v
}

// GetBundleActivityId returns the BundleActivityId field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetBundleActivityId() []int32 {
	if o == nil || o.BundleActivityId == nil {
		var ret []int32
		return ret
	}
	return *o.BundleActivityId
}

// GetBundleActivityIdOk returns a tuple with the BundleActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetBundleActivityIdOk() (*[]int32, bool) {
	if o == nil || o.BundleActivityId == nil {
		return nil, false
	}
	return o.BundleActivityId, true
}

// HasBundleActivityId returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasBundleActivityId() bool {
	if o != nil && o.BundleActivityId != nil {
		return true
	}

	return false
}

// SetBundleActivityId gets a reference to the given []int32 and assigns it to the BundleActivityId field.
func (o *ActivityFiltersModel) SetBundleActivityId(v []int32) {
	o.BundleActivityId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetDescription() []string {
	if o == nil || o.Description == nil {
		var ret []string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetDescriptionOk() (*[]string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given []string and assigns it to the Description field.
func (o *ActivityFiltersModel) SetDescription(v []string) {
	o.Description = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetReference() []string {
	if o == nil || o.Reference == nil {
		var ret []string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetReferenceOk() (*[]string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given []string and assigns it to the Reference field.
func (o *ActivityFiltersModel) SetReference(v []string) {
	o.Reference = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetPriority() []int32 {
	if o == nil || o.Priority == nil {
		var ret []int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetPriorityOk() (*[]int32, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given []int32 and assigns it to the Priority field.
func (o *ActivityFiltersModel) SetPriority(v []int32) {
	o.Priority = &v
}

// GetTopPriority returns the TopPriority field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetTopPriority() bool {
	if o == nil || o.TopPriority == nil {
		var ret bool
		return ret
	}
	return *o.TopPriority
}

// GetTopPriorityOk returns a tuple with the TopPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetTopPriorityOk() (*bool, bool) {
	if o == nil || o.TopPriority == nil {
		return nil, false
	}
	return o.TopPriority, true
}

// HasTopPriority returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasTopPriority() bool {
	if o != nil && o.TopPriority != nil {
		return true
	}

	return false
}

// SetTopPriority gets a reference to the given bool and assigns it to the TopPriority field.
func (o *ActivityFiltersModel) SetTopPriority(v bool) {
	o.TopPriority = &v
}

// GetHasGeolocation returns the HasGeolocation field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetHasGeolocation() bool {
	if o == nil || o.HasGeolocation == nil {
		var ret bool
		return ret
	}
	return *o.HasGeolocation
}

// GetHasGeolocationOk returns a tuple with the HasGeolocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetHasGeolocationOk() (*bool, bool) {
	if o == nil || o.HasGeolocation == nil {
		return nil, false
	}
	return o.HasGeolocation, true
}

// HasHasGeolocation returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasHasGeolocation() bool {
	if o != nil && o.HasGeolocation != nil {
		return true
	}

	return false
}

// SetHasGeolocation gets a reference to the given bool and assigns it to the HasGeolocation field.
func (o *ActivityFiltersModel) SetHasGeolocation(v bool) {
	o.HasGeolocation = &v
}

// GetHasRouteAssigned returns the HasRouteAssigned field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetHasRouteAssigned() bool {
	if o == nil || o.HasRouteAssigned == nil {
		var ret bool
		return ret
	}
	return *o.HasRouteAssigned
}

// GetHasRouteAssignedOk returns a tuple with the HasRouteAssigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetHasRouteAssignedOk() (*bool, bool) {
	if o == nil || o.HasRouteAssigned == nil {
		return nil, false
	}
	return o.HasRouteAssigned, true
}

// HasHasRouteAssigned returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasHasRouteAssigned() bool {
	if o != nil && o.HasRouteAssigned != nil {
		return true
	}

	return false
}

// SetHasRouteAssigned gets a reference to the given bool and assigns it to the HasRouteAssigned field.
func (o *ActivityFiltersModel) SetHasRouteAssigned(v bool) {
	o.HasRouteAssigned = &v
}

// GetSearchText returns the SearchText field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetSearchText() string {
	if o == nil || o.SearchText == nil {
		var ret string
		return ret
	}
	return *o.SearchText
}

// GetSearchTextOk returns a tuple with the SearchText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetSearchTextOk() (*string, bool) {
	if o == nil || o.SearchText == nil {
		return nil, false
	}
	return o.SearchText, true
}

// HasSearchText returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasSearchText() bool {
	if o != nil && o.SearchText != nil {
		return true
	}

	return false
}

// SetSearchText gets a reference to the given string and assigns it to the SearchText field.
func (o *ActivityFiltersModel) SetSearchText(v string) {
	o.SearchText = &v
}

// GetRouteId returns the RouteId field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetRouteId() []int32 {
	if o == nil || o.RouteId == nil {
		var ret []int32
		return ret
	}
	return *o.RouteId
}

// GetRouteIdOk returns a tuple with the RouteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetRouteIdOk() (*[]int32, bool) {
	if o == nil || o.RouteId == nil {
		return nil, false
	}
	return o.RouteId, true
}

// HasRouteId returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasRouteId() bool {
	if o != nil && o.RouteId != nil {
		return true
	}

	return false
}

// SetRouteId gets a reference to the given []int32 and assigns it to the RouteId field.
func (o *ActivityFiltersModel) SetRouteId(v []int32) {
	o.RouteId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetUserId() int32 {
	if o == nil || o.UserId == nil {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetUserIdOk() (*int32, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *ActivityFiltersModel) SetUserId(v int32) {
	o.UserId = &v
}

// GetPartyId returns the PartyId field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetPartyId() int32 {
	if o == nil || o.PartyId == nil {
		var ret int32
		return ret
	}
	return *o.PartyId
}

// GetPartyIdOk returns a tuple with the PartyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetPartyIdOk() (*int32, bool) {
	if o == nil || o.PartyId == nil {
		return nil, false
	}
	return o.PartyId, true
}

// HasPartyId returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasPartyId() bool {
	if o != nil && o.PartyId != nil {
		return true
	}

	return false
}

// SetPartyId gets a reference to the given int32 and assigns it to the PartyId field.
func (o *ActivityFiltersModel) SetPartyId(v int32) {
	o.PartyId = &v
}

// GetRecurrenceId returns the RecurrenceId field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetRecurrenceId() int32 {
	if o == nil || o.RecurrenceId == nil {
		var ret int32
		return ret
	}
	return *o.RecurrenceId
}

// GetRecurrenceIdOk returns a tuple with the RecurrenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetRecurrenceIdOk() (*int32, bool) {
	if o == nil || o.RecurrenceId == nil {
		return nil, false
	}
	return o.RecurrenceId, true
}

// HasRecurrenceId returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasRecurrenceId() bool {
	if o != nil && o.RecurrenceId != nil {
		return true
	}

	return false
}

// SetRecurrenceId gets a reference to the given int32 and assigns it to the RecurrenceId field.
func (o *ActivityFiltersModel) SetRecurrenceId(v int32) {
	o.RecurrenceId = &v
}

// GetDepotAddressLinks returns the DepotAddressLinks field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetDepotAddressLinks() []LinkModel {
	if o == nil || o.DepotAddressLinks == nil {
		var ret []LinkModel
		return ret
	}
	return *o.DepotAddressLinks
}

// GetDepotAddressLinksOk returns a tuple with the DepotAddressLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetDepotAddressLinksOk() (*[]LinkModel, bool) {
	if o == nil || o.DepotAddressLinks == nil {
		return nil, false
	}
	return o.DepotAddressLinks, true
}

// HasDepotAddressLinks returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasDepotAddressLinks() bool {
	if o != nil && o.DepotAddressLinks != nil {
		return true
	}

	return false
}

// SetDepotAddressLinks gets a reference to the given []LinkModel and assigns it to the DepotAddressLinks field.
func (o *ActivityFiltersModel) SetDepotAddressLinks(v []LinkModel) {
	o.DepotAddressLinks = &v
}

// GetTagNames returns the TagNames field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetTagNames() []string {
	if o == nil || o.TagNames == nil {
		var ret []string
		return ret
	}
	return *o.TagNames
}

// GetTagNamesOk returns a tuple with the TagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetTagNamesOk() (*[]string, bool) {
	if o == nil || o.TagNames == nil {
		return nil, false
	}
	return o.TagNames, true
}

// HasTagNames returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasTagNames() bool {
	if o != nil && o.TagNames != nil {
		return true
	}

	return false
}

// SetTagNames gets a reference to the given []string and assigns it to the TagNames field.
func (o *ActivityFiltersModel) SetTagNames(v []string) {
	o.TagNames = &v
}

// GetZoneNames returns the ZoneNames field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetZoneNames() []string {
	if o == nil || o.ZoneNames == nil {
		var ret []string
		return ret
	}
	return *o.ZoneNames
}

// GetZoneNamesOk returns a tuple with the ZoneNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetZoneNamesOk() (*[]string, bool) {
	if o == nil || o.ZoneNames == nil {
		return nil, false
	}
	return o.ZoneNames, true
}

// HasZoneNames returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasZoneNames() bool {
	if o != nil && o.ZoneNames != nil {
		return true
	}

	return false
}

// SetZoneNames gets a reference to the given []string and assigns it to the ZoneNames field.
func (o *ActivityFiltersModel) SetZoneNames(v []string) {
	o.ZoneNames = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetLink() []map[string]interface{} {
	if o == nil || o.Link == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetLinkOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Link == nil {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasLink() bool {
	if o != nil && o.Link != nil {
		return true
	}

	return false
}

// SetLink gets a reference to the given []map[string]interface{} and assigns it to the Link field.
func (o *ActivityFiltersModel) SetLink(v []map[string]interface{}) {
	o.Link = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetLinks() []map[string]interface{} {
	if o == nil || o.Links == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetLinksOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []map[string]interface{} and assigns it to the Links field.
func (o *ActivityFiltersModel) SetLinks(v []map[string]interface{}) {
	o.Links = &v
}

// GetCreatedAtSince returns the CreatedAtSince field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetCreatedAtSince() time.Time {
	if o == nil || o.CreatedAtSince == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtSince
}

// GetCreatedAtSinceOk returns a tuple with the CreatedAtSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetCreatedAtSinceOk() (*time.Time, bool) {
	if o == nil || o.CreatedAtSince == nil {
		return nil, false
	}
	return o.CreatedAtSince, true
}

// HasCreatedAtSince returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasCreatedAtSince() bool {
	if o != nil && o.CreatedAtSince != nil {
		return true
	}

	return false
}

// SetCreatedAtSince gets a reference to the given time.Time and assigns it to the CreatedAtSince field.
func (o *ActivityFiltersModel) SetCreatedAtSince(v time.Time) {
	o.CreatedAtSince = &v
}

// GetCreatedAtTill returns the CreatedAtTill field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetCreatedAtTill() time.Time {
	if o == nil || o.CreatedAtTill == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtTill
}

// GetCreatedAtTillOk returns a tuple with the CreatedAtTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetCreatedAtTillOk() (*time.Time, bool) {
	if o == nil || o.CreatedAtTill == nil {
		return nil, false
	}
	return o.CreatedAtTill, true
}

// HasCreatedAtTill returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasCreatedAtTill() bool {
	if o != nil && o.CreatedAtTill != nil {
		return true
	}

	return false
}

// SetCreatedAtTill gets a reference to the given time.Time and assigns it to the CreatedAtTill field.
func (o *ActivityFiltersModel) SetCreatedAtTill(v time.Time) {
	o.CreatedAtTill = &v
}

// GetTimeSlotsCreatedAtSince returns the TimeSlotsCreatedAtSince field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetTimeSlotsCreatedAtSince() time.Time {
	if o == nil || o.TimeSlotsCreatedAtSince == nil {
		var ret time.Time
		return ret
	}
	return *o.TimeSlotsCreatedAtSince
}

// GetTimeSlotsCreatedAtSinceOk returns a tuple with the TimeSlotsCreatedAtSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetTimeSlotsCreatedAtSinceOk() (*time.Time, bool) {
	if o == nil || o.TimeSlotsCreatedAtSince == nil {
		return nil, false
	}
	return o.TimeSlotsCreatedAtSince, true
}

// HasTimeSlotsCreatedAtSince returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasTimeSlotsCreatedAtSince() bool {
	if o != nil && o.TimeSlotsCreatedAtSince != nil {
		return true
	}

	return false
}

// SetTimeSlotsCreatedAtSince gets a reference to the given time.Time and assigns it to the TimeSlotsCreatedAtSince field.
func (o *ActivityFiltersModel) SetTimeSlotsCreatedAtSince(v time.Time) {
	o.TimeSlotsCreatedAtSince = &v
}

// GetTimeSlotsCreatedAtTill returns the TimeSlotsCreatedAtTill field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetTimeSlotsCreatedAtTill() time.Time {
	if o == nil || o.TimeSlotsCreatedAtTill == nil {
		var ret time.Time
		return ret
	}
	return *o.TimeSlotsCreatedAtTill
}

// GetTimeSlotsCreatedAtTillOk returns a tuple with the TimeSlotsCreatedAtTill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetTimeSlotsCreatedAtTillOk() (*time.Time, bool) {
	if o == nil || o.TimeSlotsCreatedAtTill == nil {
		return nil, false
	}
	return o.TimeSlotsCreatedAtTill, true
}

// HasTimeSlotsCreatedAtTill returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasTimeSlotsCreatedAtTill() bool {
	if o != nil && o.TimeSlotsCreatedAtTill != nil {
		return true
	}

	return false
}

// SetTimeSlotsCreatedAtTill gets a reference to the given time.Time and assigns it to the TimeSlotsCreatedAtTill field.
func (o *ActivityFiltersModel) SetTimeSlotsCreatedAtTill(v time.Time) {
	o.TimeSlotsCreatedAtTill = &v
}

// GetDepotAddressId returns the DepotAddressId field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetDepotAddressId() []int32 {
	if o == nil || o.DepotAddressId == nil {
		var ret []int32
		return ret
	}
	return *o.DepotAddressId
}

// GetDepotAddressIdOk returns a tuple with the DepotAddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetDepotAddressIdOk() (*[]int32, bool) {
	if o == nil || o.DepotAddressId == nil {
		return nil, false
	}
	return o.DepotAddressId, true
}

// HasDepotAddressId returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasDepotAddressId() bool {
	if o != nil && o.DepotAddressId != nil {
		return true
	}

	return false
}

// SetDepotAddressId gets a reference to the given []int32 and assigns it to the DepotAddressId field.
func (o *ActivityFiltersModel) SetDepotAddressId(v []int32) {
	o.DepotAddressId = &v
}

// GetAddressId returns the AddressId field value if set, zero value otherwise.
func (o *ActivityFiltersModel) GetAddressId() []int32 {
	if o == nil || o.AddressId == nil {
		var ret []int32
		return ret
	}
	return *o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityFiltersModel) GetAddressIdOk() (*[]int32, bool) {
	if o == nil || o.AddressId == nil {
		return nil, false
	}
	return o.AddressId, true
}

// HasAddressId returns a boolean if a field has been set.
func (o *ActivityFiltersModel) HasAddressId() bool {
	if o != nil && o.AddressId != nil {
		return true
	}

	return false
}

// SetAddressId gets a reference to the given []int32 and assigns it to the AddressId field.
func (o *ActivityFiltersModel) SetAddressId(v []int32) {
	o.AddressId = &v
}

func (o ActivityFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Nr != nil {
		toSerialize["nr"] = o.Nr
	}
	if o.AssignmentId != nil {
		toSerialize["assignment_id"] = o.AssignmentId
	}
	if o.ShipmentActivityId != nil {
		toSerialize["shipment_activity_id"] = o.ShipmentActivityId
	}
	if o.EarliestDeliveryDateTimeSince != nil {
		toSerialize["earliest_delivery_date_time_since"] = o.EarliestDeliveryDateTimeSince
	}
	if o.EarliestDeliveryDateTimeTill != nil {
		toSerialize["earliest_delivery_date_time_till"] = o.EarliestDeliveryDateTimeTill
	}
	if o.LatestDeliveryDateTimeSince != nil {
		toSerialize["latest_delivery_date_time_since"] = o.LatestDeliveryDateTimeSince
	}
	if o.LatestDeliveryDateTimeTill != nil {
		toSerialize["latest_delivery_date_time_till"] = o.LatestDeliveryDateTimeTill
	}
	if o.EarliestDeliveryDateSince != nil {
		toSerialize["earliest_delivery_date_since"] = o.EarliestDeliveryDateSince
	}
	if o.EarliestDeliveryDateTill != nil {
		toSerialize["earliest_delivery_date_till"] = o.EarliestDeliveryDateTill
	}
	if o.LatestDeliveryDateSince != nil {
		toSerialize["latest_delivery_date_since"] = o.LatestDeliveryDateSince
	}
	if o.LatestDeliveryDateTill != nil {
		toSerialize["latest_delivery_date_till"] = o.LatestDeliveryDateTill
	}
	if o.DateTimeFrom != nil {
		toSerialize["date_time_from"] = o.DateTimeFrom
	}
	if o.DateTimeTo != nil {
		toSerialize["date_time_to"] = o.DateTimeTo
	}
	if o.DateTimeFromSince != nil {
		toSerialize["date_time_from_since"] = o.DateTimeFromSince
	}
	if o.DateTimeFromTill != nil {
		toSerialize["date_time_from_till"] = o.DateTimeFromTill
	}
	if o.DateTimeToSince != nil {
		toSerialize["date_time_to_since"] = o.DateTimeToSince
	}
	if o.DateTimeToTill != nil {
		toSerialize["date_time_to_till"] = o.DateTimeToTill
	}
	if o.PlannedDateTimeFrom != nil {
		toSerialize["planned_date_time_from"] = o.PlannedDateTimeFrom
	}
	if o.PlannedDateTimeTo != nil {
		toSerialize["planned_date_time_to"] = o.PlannedDateTimeTo
	}
	if o.PlannedDateTimeFromSince != nil {
		toSerialize["planned_date_time_from_since"] = o.PlannedDateTimeFromSince
	}
	if o.PlannedDateTimeFromTill != nil {
		toSerialize["planned_date_time_from_till"] = o.PlannedDateTimeFromTill
	}
	if o.PlannedDateTimeToSince != nil {
		toSerialize["planned_date_time_to_since"] = o.PlannedDateTimeToSince
	}
	if o.PlannedDateTimeToTill != nil {
		toSerialize["planned_date_time_to_till"] = o.PlannedDateTimeToTill
	}
	if o.UpdatedAtSince != nil {
		toSerialize["updated_at_since"] = o.UpdatedAtSince
	}
	if o.UpdatedAtTill != nil {
		toSerialize["updated_at_till"] = o.UpdatedAtTill
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusName != nil {
		toSerialize["status_name"] = o.StatusName
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.StatusId != nil {
		toSerialize["status_id"] = o.StatusId
	}
	if o.ActivityTypeId != nil {
		toSerialize["activity_type_id"] = o.ActivityTypeId
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.ActivityTypeName != nil {
		toSerialize["activity_type_name"] = o.ActivityTypeName
	}
	if o.BundleActivityId != nil {
		toSerialize["bundle_activity_id"] = o.BundleActivityId
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.TopPriority != nil {
		toSerialize["top_priority"] = o.TopPriority
	}
	if o.HasGeolocation != nil {
		toSerialize["has_geolocation"] = o.HasGeolocation
	}
	if o.HasRouteAssigned != nil {
		toSerialize["has_route_assigned"] = o.HasRouteAssigned
	}
	if o.SearchText != nil {
		toSerialize["search_text"] = o.SearchText
	}
	if o.RouteId != nil {
		toSerialize["route_id"] = o.RouteId
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	if o.PartyId != nil {
		toSerialize["party_id"] = o.PartyId
	}
	if o.RecurrenceId != nil {
		toSerialize["recurrence_id"] = o.RecurrenceId
	}
	if o.DepotAddressLinks != nil {
		toSerialize["depot_address_links"] = o.DepotAddressLinks
	}
	if o.TagNames != nil {
		toSerialize["tag_names"] = o.TagNames
	}
	if o.ZoneNames != nil {
		toSerialize["zone_names"] = o.ZoneNames
	}
	if o.Link != nil {
		toSerialize["link"] = o.Link
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.CreatedAtSince != nil {
		toSerialize["created_at_since"] = o.CreatedAtSince
	}
	if o.CreatedAtTill != nil {
		toSerialize["created_at_till"] = o.CreatedAtTill
	}
	if o.TimeSlotsCreatedAtSince != nil {
		toSerialize["time_slots_created_at_since"] = o.TimeSlotsCreatedAtSince
	}
	if o.TimeSlotsCreatedAtTill != nil {
		toSerialize["time_slots_created_at_till"] = o.TimeSlotsCreatedAtTill
	}
	if o.DepotAddressId != nil {
		toSerialize["depot_address_id"] = o.DepotAddressId
	}
	if o.AddressId != nil {
		toSerialize["address_id"] = o.AddressId
	}
	return json.Marshal(toSerialize)
}

type NullableActivityFiltersModel struct {
	value *ActivityFiltersModel
	isSet bool
}

func (v NullableActivityFiltersModel) Get() *ActivityFiltersModel {
	return v.value
}

func (v *NullableActivityFiltersModel) Set(val *ActivityFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityFiltersModel(val *ActivityFiltersModel) *NullableActivityFiltersModel {
	return &NullableActivityFiltersModel{value: val, isSet: true}
}

func (v NullableActivityFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


