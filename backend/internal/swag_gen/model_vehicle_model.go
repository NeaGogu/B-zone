/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// VehicleModel struct for VehicleModel
type VehicleModel struct {
	// Unique Identifier
	Id *int64 `json:"id,omitempty"`
	// Bumbal id for vehicle_type
	VehicleTypeId *int64 `json:"vehicle_type_id,omitempty"`
	// Bumbal id for vehicle_type
	VehicleTypeName *string `json:"vehicle_type_name,omitempty"`
	// name
	Name *string `json:"name,omitempty"`
	// registration_nr
	RegistrationNr *string `json:"registration_nr,omitempty"`
	// Max Speed in km/h
	MaxSpeed *int64 `json:"max_speed,omitempty"`
	// Speed Factor
	SpeedFactor *float64 `json:"speed_factor,omitempty"`
	// Start duration of using this vehicle in minutes
	StartDuration *int64 `json:"start_duration,omitempty"`
	// End duration of using this vehicle in minutes
	EndDuration *int64 `json:"end_duration,omitempty"`
	// Duration Factor
	DurationFactor *float64 `json:"duration_factor,omitempty"`
	// Cost per meter
	CostPerMeter *float64 `json:"cost_per_meter,omitempty"`
	// Cost per route
	CostPerRoute *float64 `json:"cost_per_route,omitempty"`
	// Cost per driving minute
	CostPerDrivingMinute *float64 `json:"cost_per_driving_minute,omitempty"`
	// Cost per waiting minute
	CostPerWaitingMinute *float64 `json:"cost_per_waiting_minute,omitempty"`
	// Cost per service minute
	CostPerServiceMinute *float64 `json:"cost_per_service_minute,omitempty"`
	// 
	AppliedCapacities *map[string]interface{} `json:"applied_capacities,omitempty"`
	// 
	Capacities *[]CapacityModel `json:"capacities,omitempty"`
	// 
	Tags *[]TagModel `json:"tags,omitempty"`
	// 
	MetaData *[]MetaDataModel `json:"meta_data,omitempty"`
	// 
	Links *[]LinkModel `json:"links,omitempty"`
	// 
	Files *[]FileModel `json:"files,omitempty"`
	// created_at date time
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// updated_at date time
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// Vehicle updated by user full name
	UpdatedByName *string `json:"updated_by_name,omitempty"`
}

// NewVehicleModel instantiates a new VehicleModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVehicleModel() *VehicleModel {
	this := VehicleModel{}
	return &this
}

// NewVehicleModelWithDefaults instantiates a new VehicleModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVehicleModelWithDefaults() *VehicleModel {
	this := VehicleModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VehicleModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VehicleModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *VehicleModel) SetId(v int64) {
	o.Id = &v
}

// GetVehicleTypeId returns the VehicleTypeId field value if set, zero value otherwise.
func (o *VehicleModel) GetVehicleTypeId() int64 {
	if o == nil || o.VehicleTypeId == nil {
		var ret int64
		return ret
	}
	return *o.VehicleTypeId
}

// GetVehicleTypeIdOk returns a tuple with the VehicleTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetVehicleTypeIdOk() (*int64, bool) {
	if o == nil || o.VehicleTypeId == nil {
		return nil, false
	}
	return o.VehicleTypeId, true
}

// HasVehicleTypeId returns a boolean if a field has been set.
func (o *VehicleModel) HasVehicleTypeId() bool {
	if o != nil && o.VehicleTypeId != nil {
		return true
	}

	return false
}

// SetVehicleTypeId gets a reference to the given int64 and assigns it to the VehicleTypeId field.
func (o *VehicleModel) SetVehicleTypeId(v int64) {
	o.VehicleTypeId = &v
}

// GetVehicleTypeName returns the VehicleTypeName field value if set, zero value otherwise.
func (o *VehicleModel) GetVehicleTypeName() string {
	if o == nil || o.VehicleTypeName == nil {
		var ret string
		return ret
	}
	return *o.VehicleTypeName
}

// GetVehicleTypeNameOk returns a tuple with the VehicleTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetVehicleTypeNameOk() (*string, bool) {
	if o == nil || o.VehicleTypeName == nil {
		return nil, false
	}
	return o.VehicleTypeName, true
}

// HasVehicleTypeName returns a boolean if a field has been set.
func (o *VehicleModel) HasVehicleTypeName() bool {
	if o != nil && o.VehicleTypeName != nil {
		return true
	}

	return false
}

// SetVehicleTypeName gets a reference to the given string and assigns it to the VehicleTypeName field.
func (o *VehicleModel) SetVehicleTypeName(v string) {
	o.VehicleTypeName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VehicleModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VehicleModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VehicleModel) SetName(v string) {
	o.Name = &v
}

// GetRegistrationNr returns the RegistrationNr field value if set, zero value otherwise.
func (o *VehicleModel) GetRegistrationNr() string {
	if o == nil || o.RegistrationNr == nil {
		var ret string
		return ret
	}
	return *o.RegistrationNr
}

// GetRegistrationNrOk returns a tuple with the RegistrationNr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetRegistrationNrOk() (*string, bool) {
	if o == nil || o.RegistrationNr == nil {
		return nil, false
	}
	return o.RegistrationNr, true
}

// HasRegistrationNr returns a boolean if a field has been set.
func (o *VehicleModel) HasRegistrationNr() bool {
	if o != nil && o.RegistrationNr != nil {
		return true
	}

	return false
}

// SetRegistrationNr gets a reference to the given string and assigns it to the RegistrationNr field.
func (o *VehicleModel) SetRegistrationNr(v string) {
	o.RegistrationNr = &v
}

// GetMaxSpeed returns the MaxSpeed field value if set, zero value otherwise.
func (o *VehicleModel) GetMaxSpeed() int64 {
	if o == nil || o.MaxSpeed == nil {
		var ret int64
		return ret
	}
	return *o.MaxSpeed
}

// GetMaxSpeedOk returns a tuple with the MaxSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetMaxSpeedOk() (*int64, bool) {
	if o == nil || o.MaxSpeed == nil {
		return nil, false
	}
	return o.MaxSpeed, true
}

// HasMaxSpeed returns a boolean if a field has been set.
func (o *VehicleModel) HasMaxSpeed() bool {
	if o != nil && o.MaxSpeed != nil {
		return true
	}

	return false
}

// SetMaxSpeed gets a reference to the given int64 and assigns it to the MaxSpeed field.
func (o *VehicleModel) SetMaxSpeed(v int64) {
	o.MaxSpeed = &v
}

// GetSpeedFactor returns the SpeedFactor field value if set, zero value otherwise.
func (o *VehicleModel) GetSpeedFactor() float64 {
	if o == nil || o.SpeedFactor == nil {
		var ret float64
		return ret
	}
	return *o.SpeedFactor
}

// GetSpeedFactorOk returns a tuple with the SpeedFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetSpeedFactorOk() (*float64, bool) {
	if o == nil || o.SpeedFactor == nil {
		return nil, false
	}
	return o.SpeedFactor, true
}

// HasSpeedFactor returns a boolean if a field has been set.
func (o *VehicleModel) HasSpeedFactor() bool {
	if o != nil && o.SpeedFactor != nil {
		return true
	}

	return false
}

// SetSpeedFactor gets a reference to the given float64 and assigns it to the SpeedFactor field.
func (o *VehicleModel) SetSpeedFactor(v float64) {
	o.SpeedFactor = &v
}

// GetStartDuration returns the StartDuration field value if set, zero value otherwise.
func (o *VehicleModel) GetStartDuration() int64 {
	if o == nil || o.StartDuration == nil {
		var ret int64
		return ret
	}
	return *o.StartDuration
}

// GetStartDurationOk returns a tuple with the StartDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetStartDurationOk() (*int64, bool) {
	if o == nil || o.StartDuration == nil {
		return nil, false
	}
	return o.StartDuration, true
}

// HasStartDuration returns a boolean if a field has been set.
func (o *VehicleModel) HasStartDuration() bool {
	if o != nil && o.StartDuration != nil {
		return true
	}

	return false
}

// SetStartDuration gets a reference to the given int64 and assigns it to the StartDuration field.
func (o *VehicleModel) SetStartDuration(v int64) {
	o.StartDuration = &v
}

// GetEndDuration returns the EndDuration field value if set, zero value otherwise.
func (o *VehicleModel) GetEndDuration() int64 {
	if o == nil || o.EndDuration == nil {
		var ret int64
		return ret
	}
	return *o.EndDuration
}

// GetEndDurationOk returns a tuple with the EndDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetEndDurationOk() (*int64, bool) {
	if o == nil || o.EndDuration == nil {
		return nil, false
	}
	return o.EndDuration, true
}

// HasEndDuration returns a boolean if a field has been set.
func (o *VehicleModel) HasEndDuration() bool {
	if o != nil && o.EndDuration != nil {
		return true
	}

	return false
}

// SetEndDuration gets a reference to the given int64 and assigns it to the EndDuration field.
func (o *VehicleModel) SetEndDuration(v int64) {
	o.EndDuration = &v
}

// GetDurationFactor returns the DurationFactor field value if set, zero value otherwise.
func (o *VehicleModel) GetDurationFactor() float64 {
	if o == nil || o.DurationFactor == nil {
		var ret float64
		return ret
	}
	return *o.DurationFactor
}

// GetDurationFactorOk returns a tuple with the DurationFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetDurationFactorOk() (*float64, bool) {
	if o == nil || o.DurationFactor == nil {
		return nil, false
	}
	return o.DurationFactor, true
}

// HasDurationFactor returns a boolean if a field has been set.
func (o *VehicleModel) HasDurationFactor() bool {
	if o != nil && o.DurationFactor != nil {
		return true
	}

	return false
}

// SetDurationFactor gets a reference to the given float64 and assigns it to the DurationFactor field.
func (o *VehicleModel) SetDurationFactor(v float64) {
	o.DurationFactor = &v
}

// GetCostPerMeter returns the CostPerMeter field value if set, zero value otherwise.
func (o *VehicleModel) GetCostPerMeter() float64 {
	if o == nil || o.CostPerMeter == nil {
		var ret float64
		return ret
	}
	return *o.CostPerMeter
}

// GetCostPerMeterOk returns a tuple with the CostPerMeter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetCostPerMeterOk() (*float64, bool) {
	if o == nil || o.CostPerMeter == nil {
		return nil, false
	}
	return o.CostPerMeter, true
}

// HasCostPerMeter returns a boolean if a field has been set.
func (o *VehicleModel) HasCostPerMeter() bool {
	if o != nil && o.CostPerMeter != nil {
		return true
	}

	return false
}

// SetCostPerMeter gets a reference to the given float64 and assigns it to the CostPerMeter field.
func (o *VehicleModel) SetCostPerMeter(v float64) {
	o.CostPerMeter = &v
}

// GetCostPerRoute returns the CostPerRoute field value if set, zero value otherwise.
func (o *VehicleModel) GetCostPerRoute() float64 {
	if o == nil || o.CostPerRoute == nil {
		var ret float64
		return ret
	}
	return *o.CostPerRoute
}

// GetCostPerRouteOk returns a tuple with the CostPerRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetCostPerRouteOk() (*float64, bool) {
	if o == nil || o.CostPerRoute == nil {
		return nil, false
	}
	return o.CostPerRoute, true
}

// HasCostPerRoute returns a boolean if a field has been set.
func (o *VehicleModel) HasCostPerRoute() bool {
	if o != nil && o.CostPerRoute != nil {
		return true
	}

	return false
}

// SetCostPerRoute gets a reference to the given float64 and assigns it to the CostPerRoute field.
func (o *VehicleModel) SetCostPerRoute(v float64) {
	o.CostPerRoute = &v
}

// GetCostPerDrivingMinute returns the CostPerDrivingMinute field value if set, zero value otherwise.
func (o *VehicleModel) GetCostPerDrivingMinute() float64 {
	if o == nil || o.CostPerDrivingMinute == nil {
		var ret float64
		return ret
	}
	return *o.CostPerDrivingMinute
}

// GetCostPerDrivingMinuteOk returns a tuple with the CostPerDrivingMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetCostPerDrivingMinuteOk() (*float64, bool) {
	if o == nil || o.CostPerDrivingMinute == nil {
		return nil, false
	}
	return o.CostPerDrivingMinute, true
}

// HasCostPerDrivingMinute returns a boolean if a field has been set.
func (o *VehicleModel) HasCostPerDrivingMinute() bool {
	if o != nil && o.CostPerDrivingMinute != nil {
		return true
	}

	return false
}

// SetCostPerDrivingMinute gets a reference to the given float64 and assigns it to the CostPerDrivingMinute field.
func (o *VehicleModel) SetCostPerDrivingMinute(v float64) {
	o.CostPerDrivingMinute = &v
}

// GetCostPerWaitingMinute returns the CostPerWaitingMinute field value if set, zero value otherwise.
func (o *VehicleModel) GetCostPerWaitingMinute() float64 {
	if o == nil || o.CostPerWaitingMinute == nil {
		var ret float64
		return ret
	}
	return *o.CostPerWaitingMinute
}

// GetCostPerWaitingMinuteOk returns a tuple with the CostPerWaitingMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetCostPerWaitingMinuteOk() (*float64, bool) {
	if o == nil || o.CostPerWaitingMinute == nil {
		return nil, false
	}
	return o.CostPerWaitingMinute, true
}

// HasCostPerWaitingMinute returns a boolean if a field has been set.
func (o *VehicleModel) HasCostPerWaitingMinute() bool {
	if o != nil && o.CostPerWaitingMinute != nil {
		return true
	}

	return false
}

// SetCostPerWaitingMinute gets a reference to the given float64 and assigns it to the CostPerWaitingMinute field.
func (o *VehicleModel) SetCostPerWaitingMinute(v float64) {
	o.CostPerWaitingMinute = &v
}

// GetCostPerServiceMinute returns the CostPerServiceMinute field value if set, zero value otherwise.
func (o *VehicleModel) GetCostPerServiceMinute() float64 {
	if o == nil || o.CostPerServiceMinute == nil {
		var ret float64
		return ret
	}
	return *o.CostPerServiceMinute
}

// GetCostPerServiceMinuteOk returns a tuple with the CostPerServiceMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetCostPerServiceMinuteOk() (*float64, bool) {
	if o == nil || o.CostPerServiceMinute == nil {
		return nil, false
	}
	return o.CostPerServiceMinute, true
}

// HasCostPerServiceMinute returns a boolean if a field has been set.
func (o *VehicleModel) HasCostPerServiceMinute() bool {
	if o != nil && o.CostPerServiceMinute != nil {
		return true
	}

	return false
}

// SetCostPerServiceMinute gets a reference to the given float64 and assigns it to the CostPerServiceMinute field.
func (o *VehicleModel) SetCostPerServiceMinute(v float64) {
	o.CostPerServiceMinute = &v
}

// GetAppliedCapacities returns the AppliedCapacities field value if set, zero value otherwise.
func (o *VehicleModel) GetAppliedCapacities() map[string]interface{} {
	if o == nil || o.AppliedCapacities == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.AppliedCapacities
}

// GetAppliedCapacitiesOk returns a tuple with the AppliedCapacities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetAppliedCapacitiesOk() (*map[string]interface{}, bool) {
	if o == nil || o.AppliedCapacities == nil {
		return nil, false
	}
	return o.AppliedCapacities, true
}

// HasAppliedCapacities returns a boolean if a field has been set.
func (o *VehicleModel) HasAppliedCapacities() bool {
	if o != nil && o.AppliedCapacities != nil {
		return true
	}

	return false
}

// SetAppliedCapacities gets a reference to the given map[string]interface{} and assigns it to the AppliedCapacities field.
func (o *VehicleModel) SetAppliedCapacities(v map[string]interface{}) {
	o.AppliedCapacities = &v
}

// GetCapacities returns the Capacities field value if set, zero value otherwise.
func (o *VehicleModel) GetCapacities() []CapacityModel {
	if o == nil || o.Capacities == nil {
		var ret []CapacityModel
		return ret
	}
	return *o.Capacities
}

// GetCapacitiesOk returns a tuple with the Capacities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetCapacitiesOk() (*[]CapacityModel, bool) {
	if o == nil || o.Capacities == nil {
		return nil, false
	}
	return o.Capacities, true
}

// HasCapacities returns a boolean if a field has been set.
func (o *VehicleModel) HasCapacities() bool {
	if o != nil && o.Capacities != nil {
		return true
	}

	return false
}

// SetCapacities gets a reference to the given []CapacityModel and assigns it to the Capacities field.
func (o *VehicleModel) SetCapacities(v []CapacityModel) {
	o.Capacities = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *VehicleModel) GetTags() []TagModel {
	if o == nil || o.Tags == nil {
		var ret []TagModel
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetTagsOk() (*[]TagModel, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VehicleModel) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagModel and assigns it to the Tags field.
func (o *VehicleModel) SetTags(v []TagModel) {
	o.Tags = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *VehicleModel) GetMetaData() []MetaDataModel {
	if o == nil || o.MetaData == nil {
		var ret []MetaDataModel
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetMetaDataOk() (*[]MetaDataModel, bool) {
	if o == nil || o.MetaData == nil {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *VehicleModel) HasMetaData() bool {
	if o != nil && o.MetaData != nil {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given []MetaDataModel and assigns it to the MetaData field.
func (o *VehicleModel) SetMetaData(v []MetaDataModel) {
	o.MetaData = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *VehicleModel) GetLinks() []LinkModel {
	if o == nil || o.Links == nil {
		var ret []LinkModel
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetLinksOk() (*[]LinkModel, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *VehicleModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkModel and assigns it to the Links field.
func (o *VehicleModel) SetLinks(v []LinkModel) {
	o.Links = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *VehicleModel) GetFiles() []FileModel {
	if o == nil || o.Files == nil {
		var ret []FileModel
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetFilesOk() (*[]FileModel, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *VehicleModel) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []FileModel and assigns it to the Files field.
func (o *VehicleModel) SetFiles(v []FileModel) {
	o.Files = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VehicleModel) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VehicleModel) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *VehicleModel) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *VehicleModel) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VehicleModel) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *VehicleModel) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUpdatedByName returns the UpdatedByName field value if set, zero value otherwise.
func (o *VehicleModel) GetUpdatedByName() string {
	if o == nil || o.UpdatedByName == nil {
		var ret string
		return ret
	}
	return *o.UpdatedByName
}

// GetUpdatedByNameOk returns a tuple with the UpdatedByName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleModel) GetUpdatedByNameOk() (*string, bool) {
	if o == nil || o.UpdatedByName == nil {
		return nil, false
	}
	return o.UpdatedByName, true
}

// HasUpdatedByName returns a boolean if a field has been set.
func (o *VehicleModel) HasUpdatedByName() bool {
	if o != nil && o.UpdatedByName != nil {
		return true
	}

	return false
}

// SetUpdatedByName gets a reference to the given string and assigns it to the UpdatedByName field.
func (o *VehicleModel) SetUpdatedByName(v string) {
	o.UpdatedByName = &v
}

func (o VehicleModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.VehicleTypeId != nil {
		toSerialize["vehicle_type_id"] = o.VehicleTypeId
	}
	if o.VehicleTypeName != nil {
		toSerialize["vehicle_type_name"] = o.VehicleTypeName
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.RegistrationNr != nil {
		toSerialize["registration_nr"] = o.RegistrationNr
	}
	if o.MaxSpeed != nil {
		toSerialize["max_speed"] = o.MaxSpeed
	}
	if o.SpeedFactor != nil {
		toSerialize["speed_factor"] = o.SpeedFactor
	}
	if o.StartDuration != nil {
		toSerialize["start_duration"] = o.StartDuration
	}
	if o.EndDuration != nil {
		toSerialize["end_duration"] = o.EndDuration
	}
	if o.DurationFactor != nil {
		toSerialize["duration_factor"] = o.DurationFactor
	}
	if o.CostPerMeter != nil {
		toSerialize["cost_per_meter"] = o.CostPerMeter
	}
	if o.CostPerRoute != nil {
		toSerialize["cost_per_route"] = o.CostPerRoute
	}
	if o.CostPerDrivingMinute != nil {
		toSerialize["cost_per_driving_minute"] = o.CostPerDrivingMinute
	}
	if o.CostPerWaitingMinute != nil {
		toSerialize["cost_per_waiting_minute"] = o.CostPerWaitingMinute
	}
	if o.CostPerServiceMinute != nil {
		toSerialize["cost_per_service_minute"] = o.CostPerServiceMinute
	}
	if o.AppliedCapacities != nil {
		toSerialize["applied_capacities"] = o.AppliedCapacities
	}
	if o.Capacities != nil {
		toSerialize["capacities"] = o.Capacities
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.MetaData != nil {
		toSerialize["meta_data"] = o.MetaData
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.UpdatedByName != nil {
		toSerialize["updated_by_name"] = o.UpdatedByName
	}
	return json.Marshal(toSerialize)
}

type NullableVehicleModel struct {
	value *VehicleModel
	isSet bool
}

func (v NullableVehicleModel) Get() *VehicleModel {
	return v.value
}

func (v *NullableVehicleModel) Set(val *VehicleModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVehicleModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVehicleModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVehicleModel(val *VehicleModel) *NullableVehicleModel {
	return &NullableVehicleModel{value: val, isSet: true}
}

func (v NullableVehicleModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVehicleModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


