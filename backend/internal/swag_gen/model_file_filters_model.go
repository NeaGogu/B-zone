/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FileFiltersModel struct for FileFiltersModel
type FileFiltersModel struct {
	// Object id
	ObjectId *[]int32 `json:"object_id,omitempty"`
	// Object type
	ObjectType *[]int32 `json:"object_type,omitempty"`
}

// NewFileFiltersModel instantiates a new FileFiltersModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileFiltersModel() *FileFiltersModel {
	this := FileFiltersModel{}
	return &this
}

// NewFileFiltersModelWithDefaults instantiates a new FileFiltersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileFiltersModelWithDefaults() *FileFiltersModel {
	this := FileFiltersModel{}
	return &this
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *FileFiltersModel) GetObjectId() []int32 {
	if o == nil || o.ObjectId == nil {
		var ret []int32
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileFiltersModel) GetObjectIdOk() (*[]int32, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *FileFiltersModel) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given []int32 and assigns it to the ObjectId field.
func (o *FileFiltersModel) SetObjectId(v []int32) {
	o.ObjectId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *FileFiltersModel) GetObjectType() []int32 {
	if o == nil || o.ObjectType == nil {
		var ret []int32
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileFiltersModel) GetObjectTypeOk() (*[]int32, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *FileFiltersModel) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given []int32 and assigns it to the ObjectType field.
func (o *FileFiltersModel) SetObjectType(v []int32) {
	o.ObjectType = &v
}

func (o FileFiltersModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ObjectId != nil {
		toSerialize["object_id"] = o.ObjectId
	}
	if o.ObjectType != nil {
		toSerialize["object_type"] = o.ObjectType
	}
	return json.Marshal(toSerialize)
}

type NullableFileFiltersModel struct {
	value *FileFiltersModel
	isSet bool
}

func (v NullableFileFiltersModel) Get() *FileFiltersModel {
	return v.value
}

func (v *NullableFileFiltersModel) Set(val *FileFiltersModel) {
	v.value = val
	v.isSet = true
}

func (v NullableFileFiltersModel) IsSet() bool {
	return v.isSet
}

func (v *NullableFileFiltersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileFiltersModel(val *FileFiltersModel) *NullableFileFiltersModel {
	return &NullableFileFiltersModel{value: val, isSet: true}
}

func (v NullableFileFiltersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileFiltersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


