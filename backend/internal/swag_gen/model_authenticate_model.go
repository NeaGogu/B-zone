/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AuthenticateModel struct for AuthenticateModel
type AuthenticateModel struct {
	// your access token. If request was made with 'return_jwt', then this token will be a JWT token. Use this token in a header Authorization:Bearer <jwt goes here>. This token currently has an expiration time of 8 hours, but will also be invalidated when signing out
	Token *string `json:"token,omitempty"`
	User *UsersModel `json:"user,omitempty"`
}

// NewAuthenticateModel instantiates a new AuthenticateModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticateModel() *AuthenticateModel {
	this := AuthenticateModel{}
	return &this
}

// NewAuthenticateModelWithDefaults instantiates a new AuthenticateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticateModelWithDefaults() *AuthenticateModel {
	this := AuthenticateModel{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *AuthenticateModel) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticateModel) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *AuthenticateModel) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *AuthenticateModel) SetToken(v string) {
	o.Token = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AuthenticateModel) GetUser() UsersModel {
	if o == nil || o.User == nil {
		var ret UsersModel
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticateModel) GetUserOk() (*UsersModel, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *AuthenticateModel) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given UsersModel and assigns it to the User field.
func (o *AuthenticateModel) SetUser(v UsersModel) {
	o.User = &v
}

func (o AuthenticateModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableAuthenticateModel struct {
	value *AuthenticateModel
	isSet bool
}

func (v NullableAuthenticateModel) Get() *AuthenticateModel {
	return v.value
}

func (v *NullableAuthenticateModel) Set(val *AuthenticateModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticateModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticateModel(val *AuthenticateModel) *NullableAuthenticateModel {
	return &NullableAuthenticateModel{value: val, isSet: true}
}

func (v NullableAuthenticateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


