/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QuestionnaireAnswerModel struct for QuestionnaireAnswerModel
type QuestionnaireAnswerModel struct {
	// Unique Identifier
	Id *int64 `json:"id,omitempty"`
	// if active=0: QuestionnaireAnswer has been removed and is no longer visible in any bumbal interface
	Active *bool `json:"active,omitempty"`
	// Questionnaire ID
	QuestionnaireId *int64 `json:"questionnaire_id,omitempty"`
	// Questionnaire Question ID
	QuestionnaireQuestionId *int64 `json:"questionnaire_question_id,omitempty"`
	// Order
	Order *int64 `json:"order,omitempty"`
	// Textuale representation of the question
	Question *string `json:"question,omitempty"`
	// Textuale representation of the answer
	Answer *string `json:"answer,omitempty"`
	// Chosen options id's
	ChosenOptions *[]int32 `json:"chosen_options,omitempty"`
	// 
	AnswerOptions *[]QuestionnaireQuestionOptionModel `json:"answer_options,omitempty"`
	// Question type name
	QuestionnaireQuestionTypeName *string `json:"questionnaire_question_type_name,omitempty"`
}

// NewQuestionnaireAnswerModel instantiates a new QuestionnaireAnswerModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuestionnaireAnswerModel() *QuestionnaireAnswerModel {
	this := QuestionnaireAnswerModel{}
	return &this
}

// NewQuestionnaireAnswerModelWithDefaults instantiates a new QuestionnaireAnswerModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuestionnaireAnswerModelWithDefaults() *QuestionnaireAnswerModel {
	this := QuestionnaireAnswerModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *QuestionnaireAnswerModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireAnswerModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *QuestionnaireAnswerModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *QuestionnaireAnswerModel) SetId(v int64) {
	o.Id = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *QuestionnaireAnswerModel) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireAnswerModel) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *QuestionnaireAnswerModel) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *QuestionnaireAnswerModel) SetActive(v bool) {
	o.Active = &v
}

// GetQuestionnaireId returns the QuestionnaireId field value if set, zero value otherwise.
func (o *QuestionnaireAnswerModel) GetQuestionnaireId() int64 {
	if o == nil || o.QuestionnaireId == nil {
		var ret int64
		return ret
	}
	return *o.QuestionnaireId
}

// GetQuestionnaireIdOk returns a tuple with the QuestionnaireId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireAnswerModel) GetQuestionnaireIdOk() (*int64, bool) {
	if o == nil || o.QuestionnaireId == nil {
		return nil, false
	}
	return o.QuestionnaireId, true
}

// HasQuestionnaireId returns a boolean if a field has been set.
func (o *QuestionnaireAnswerModel) HasQuestionnaireId() bool {
	if o != nil && o.QuestionnaireId != nil {
		return true
	}

	return false
}

// SetQuestionnaireId gets a reference to the given int64 and assigns it to the QuestionnaireId field.
func (o *QuestionnaireAnswerModel) SetQuestionnaireId(v int64) {
	o.QuestionnaireId = &v
}

// GetQuestionnaireQuestionId returns the QuestionnaireQuestionId field value if set, zero value otherwise.
func (o *QuestionnaireAnswerModel) GetQuestionnaireQuestionId() int64 {
	if o == nil || o.QuestionnaireQuestionId == nil {
		var ret int64
		return ret
	}
	return *o.QuestionnaireQuestionId
}

// GetQuestionnaireQuestionIdOk returns a tuple with the QuestionnaireQuestionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireAnswerModel) GetQuestionnaireQuestionIdOk() (*int64, bool) {
	if o == nil || o.QuestionnaireQuestionId == nil {
		return nil, false
	}
	return o.QuestionnaireQuestionId, true
}

// HasQuestionnaireQuestionId returns a boolean if a field has been set.
func (o *QuestionnaireAnswerModel) HasQuestionnaireQuestionId() bool {
	if o != nil && o.QuestionnaireQuestionId != nil {
		return true
	}

	return false
}

// SetQuestionnaireQuestionId gets a reference to the given int64 and assigns it to the QuestionnaireQuestionId field.
func (o *QuestionnaireAnswerModel) SetQuestionnaireQuestionId(v int64) {
	o.QuestionnaireQuestionId = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *QuestionnaireAnswerModel) GetOrder() int64 {
	if o == nil || o.Order == nil {
		var ret int64
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireAnswerModel) GetOrderOk() (*int64, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *QuestionnaireAnswerModel) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int64 and assigns it to the Order field.
func (o *QuestionnaireAnswerModel) SetOrder(v int64) {
	o.Order = &v
}

// GetQuestion returns the Question field value if set, zero value otherwise.
func (o *QuestionnaireAnswerModel) GetQuestion() string {
	if o == nil || o.Question == nil {
		var ret string
		return ret
	}
	return *o.Question
}

// GetQuestionOk returns a tuple with the Question field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireAnswerModel) GetQuestionOk() (*string, bool) {
	if o == nil || o.Question == nil {
		return nil, false
	}
	return o.Question, true
}

// HasQuestion returns a boolean if a field has been set.
func (o *QuestionnaireAnswerModel) HasQuestion() bool {
	if o != nil && o.Question != nil {
		return true
	}

	return false
}

// SetQuestion gets a reference to the given string and assigns it to the Question field.
func (o *QuestionnaireAnswerModel) SetQuestion(v string) {
	o.Question = &v
}

// GetAnswer returns the Answer field value if set, zero value otherwise.
func (o *QuestionnaireAnswerModel) GetAnswer() string {
	if o == nil || o.Answer == nil {
		var ret string
		return ret
	}
	return *o.Answer
}

// GetAnswerOk returns a tuple with the Answer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireAnswerModel) GetAnswerOk() (*string, bool) {
	if o == nil || o.Answer == nil {
		return nil, false
	}
	return o.Answer, true
}

// HasAnswer returns a boolean if a field has been set.
func (o *QuestionnaireAnswerModel) HasAnswer() bool {
	if o != nil && o.Answer != nil {
		return true
	}

	return false
}

// SetAnswer gets a reference to the given string and assigns it to the Answer field.
func (o *QuestionnaireAnswerModel) SetAnswer(v string) {
	o.Answer = &v
}

// GetChosenOptions returns the ChosenOptions field value if set, zero value otherwise.
func (o *QuestionnaireAnswerModel) GetChosenOptions() []int32 {
	if o == nil || o.ChosenOptions == nil {
		var ret []int32
		return ret
	}
	return *o.ChosenOptions
}

// GetChosenOptionsOk returns a tuple with the ChosenOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireAnswerModel) GetChosenOptionsOk() (*[]int32, bool) {
	if o == nil || o.ChosenOptions == nil {
		return nil, false
	}
	return o.ChosenOptions, true
}

// HasChosenOptions returns a boolean if a field has been set.
func (o *QuestionnaireAnswerModel) HasChosenOptions() bool {
	if o != nil && o.ChosenOptions != nil {
		return true
	}

	return false
}

// SetChosenOptions gets a reference to the given []int32 and assigns it to the ChosenOptions field.
func (o *QuestionnaireAnswerModel) SetChosenOptions(v []int32) {
	o.ChosenOptions = &v
}

// GetAnswerOptions returns the AnswerOptions field value if set, zero value otherwise.
func (o *QuestionnaireAnswerModel) GetAnswerOptions() []QuestionnaireQuestionOptionModel {
	if o == nil || o.AnswerOptions == nil {
		var ret []QuestionnaireQuestionOptionModel
		return ret
	}
	return *o.AnswerOptions
}

// GetAnswerOptionsOk returns a tuple with the AnswerOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireAnswerModel) GetAnswerOptionsOk() (*[]QuestionnaireQuestionOptionModel, bool) {
	if o == nil || o.AnswerOptions == nil {
		return nil, false
	}
	return o.AnswerOptions, true
}

// HasAnswerOptions returns a boolean if a field has been set.
func (o *QuestionnaireAnswerModel) HasAnswerOptions() bool {
	if o != nil && o.AnswerOptions != nil {
		return true
	}

	return false
}

// SetAnswerOptions gets a reference to the given []QuestionnaireQuestionOptionModel and assigns it to the AnswerOptions field.
func (o *QuestionnaireAnswerModel) SetAnswerOptions(v []QuestionnaireQuestionOptionModel) {
	o.AnswerOptions = &v
}

// GetQuestionnaireQuestionTypeName returns the QuestionnaireQuestionTypeName field value if set, zero value otherwise.
func (o *QuestionnaireAnswerModel) GetQuestionnaireQuestionTypeName() string {
	if o == nil || o.QuestionnaireQuestionTypeName == nil {
		var ret string
		return ret
	}
	return *o.QuestionnaireQuestionTypeName
}

// GetQuestionnaireQuestionTypeNameOk returns a tuple with the QuestionnaireQuestionTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuestionnaireAnswerModel) GetQuestionnaireQuestionTypeNameOk() (*string, bool) {
	if o == nil || o.QuestionnaireQuestionTypeName == nil {
		return nil, false
	}
	return o.QuestionnaireQuestionTypeName, true
}

// HasQuestionnaireQuestionTypeName returns a boolean if a field has been set.
func (o *QuestionnaireAnswerModel) HasQuestionnaireQuestionTypeName() bool {
	if o != nil && o.QuestionnaireQuestionTypeName != nil {
		return true
	}

	return false
}

// SetQuestionnaireQuestionTypeName gets a reference to the given string and assigns it to the QuestionnaireQuestionTypeName field.
func (o *QuestionnaireAnswerModel) SetQuestionnaireQuestionTypeName(v string) {
	o.QuestionnaireQuestionTypeName = &v
}

func (o QuestionnaireAnswerModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.QuestionnaireId != nil {
		toSerialize["questionnaire_id"] = o.QuestionnaireId
	}
	if o.QuestionnaireQuestionId != nil {
		toSerialize["questionnaire_question_id"] = o.QuestionnaireQuestionId
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	if o.Question != nil {
		toSerialize["question"] = o.Question
	}
	if o.Answer != nil {
		toSerialize["answer"] = o.Answer
	}
	if o.ChosenOptions != nil {
		toSerialize["chosen_options"] = o.ChosenOptions
	}
	if o.AnswerOptions != nil {
		toSerialize["answer_options"] = o.AnswerOptions
	}
	if o.QuestionnaireQuestionTypeName != nil {
		toSerialize["questionnaire_question_type_name"] = o.QuestionnaireQuestionTypeName
	}
	return json.Marshal(toSerialize)
}

type NullableQuestionnaireAnswerModel struct {
	value *QuestionnaireAnswerModel
	isSet bool
}

func (v NullableQuestionnaireAnswerModel) Get() *QuestionnaireAnswerModel {
	return v.value
}

func (v *NullableQuestionnaireAnswerModel) Set(val *QuestionnaireAnswerModel) {
	v.value = val
	v.isSet = true
}

func (v NullableQuestionnaireAnswerModel) IsSet() bool {
	return v.isSet
}

func (v *NullableQuestionnaireAnswerModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuestionnaireAnswerModel(val *QuestionnaireAnswerModel) *NullableQuestionnaireAnswerModel {
	return &NullableQuestionnaireAnswerModel{value: val, isSet: true}
}

func (v NullableQuestionnaireAnswerModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuestionnaireAnswerModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


