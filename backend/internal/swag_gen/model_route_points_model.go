/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RoutePointsModel struct for RoutePointsModel
type RoutePointsModel struct {
	// RouteId
	RouteId *int64 `json:"route_id,omitempty"`
	Points *RoutePointsModelPoints `json:"points,omitempty"`
	// Reason why retrieving this route point failed
	Failed *string `json:"failed,omitempty"`
}

// NewRoutePointsModel instantiates a new RoutePointsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutePointsModel() *RoutePointsModel {
	this := RoutePointsModel{}
	return &this
}

// NewRoutePointsModelWithDefaults instantiates a new RoutePointsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutePointsModelWithDefaults() *RoutePointsModel {
	this := RoutePointsModel{}
	return &this
}

// GetRouteId returns the RouteId field value if set, zero value otherwise.
func (o *RoutePointsModel) GetRouteId() int64 {
	if o == nil || o.RouteId == nil {
		var ret int64
		return ret
	}
	return *o.RouteId
}

// GetRouteIdOk returns a tuple with the RouteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutePointsModel) GetRouteIdOk() (*int64, bool) {
	if o == nil || o.RouteId == nil {
		return nil, false
	}
	return o.RouteId, true
}

// HasRouteId returns a boolean if a field has been set.
func (o *RoutePointsModel) HasRouteId() bool {
	if o != nil && o.RouteId != nil {
		return true
	}

	return false
}

// SetRouteId gets a reference to the given int64 and assigns it to the RouteId field.
func (o *RoutePointsModel) SetRouteId(v int64) {
	o.RouteId = &v
}

// GetPoints returns the Points field value if set, zero value otherwise.
func (o *RoutePointsModel) GetPoints() RoutePointsModelPoints {
	if o == nil || o.Points == nil {
		var ret RoutePointsModelPoints
		return ret
	}
	return *o.Points
}

// GetPointsOk returns a tuple with the Points field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutePointsModel) GetPointsOk() (*RoutePointsModelPoints, bool) {
	if o == nil || o.Points == nil {
		return nil, false
	}
	return o.Points, true
}

// HasPoints returns a boolean if a field has been set.
func (o *RoutePointsModel) HasPoints() bool {
	if o != nil && o.Points != nil {
		return true
	}

	return false
}

// SetPoints gets a reference to the given RoutePointsModelPoints and assigns it to the Points field.
func (o *RoutePointsModel) SetPoints(v RoutePointsModelPoints) {
	o.Points = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *RoutePointsModel) GetFailed() string {
	if o == nil || o.Failed == nil {
		var ret string
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutePointsModel) GetFailedOk() (*string, bool) {
	if o == nil || o.Failed == nil {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *RoutePointsModel) HasFailed() bool {
	if o != nil && o.Failed != nil {
		return true
	}

	return false
}

// SetFailed gets a reference to the given string and assigns it to the Failed field.
func (o *RoutePointsModel) SetFailed(v string) {
	o.Failed = &v
}

func (o RoutePointsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RouteId != nil {
		toSerialize["route_id"] = o.RouteId
	}
	if o.Points != nil {
		toSerialize["points"] = o.Points
	}
	if o.Failed != nil {
		toSerialize["failed"] = o.Failed
	}
	return json.Marshal(toSerialize)
}

type NullableRoutePointsModel struct {
	value *RoutePointsModel
	isSet bool
}

func (v NullableRoutePointsModel) Get() *RoutePointsModel {
	return v.value
}

func (v *NullableRoutePointsModel) Set(val *RoutePointsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutePointsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutePointsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutePointsModel(val *RoutePointsModel) *NullableRoutePointsModel {
	return &NullableRoutePointsModel{value: val, isSet: true}
}

func (v NullableRoutePointsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutePointsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


