/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AppliedCapacitiesModel struct for AppliedCapacitiesModel
type AppliedCapacitiesModel struct {
	// 
	Route *[]AppliedCapacityModel `json:"route,omitempty"`
	// 
	Trailer *[]AppliedCapacityModel `json:"trailer,omitempty"`
	// 
	Vehicle *[]AppliedCapacityModel `json:"vehicle,omitempty"`
	// 
	Equipment *[]AppliedCapacityModel `json:"equipment,omitempty"`
	// 
	Activity *[]AppliedCapacityModel `json:"activity,omitempty"`
	// 
	Totals *[]AppliedCapacityModel `json:"totals,omitempty"`
}

// NewAppliedCapacitiesModel instantiates a new AppliedCapacitiesModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppliedCapacitiesModel() *AppliedCapacitiesModel {
	this := AppliedCapacitiesModel{}
	return &this
}

// NewAppliedCapacitiesModelWithDefaults instantiates a new AppliedCapacitiesModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppliedCapacitiesModelWithDefaults() *AppliedCapacitiesModel {
	this := AppliedCapacitiesModel{}
	return &this
}

// GetRoute returns the Route field value if set, zero value otherwise.
func (o *AppliedCapacitiesModel) GetRoute() []AppliedCapacityModel {
	if o == nil || o.Route == nil {
		var ret []AppliedCapacityModel
		return ret
	}
	return *o.Route
}

// GetRouteOk returns a tuple with the Route field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppliedCapacitiesModel) GetRouteOk() (*[]AppliedCapacityModel, bool) {
	if o == nil || o.Route == nil {
		return nil, false
	}
	return o.Route, true
}

// HasRoute returns a boolean if a field has been set.
func (o *AppliedCapacitiesModel) HasRoute() bool {
	if o != nil && o.Route != nil {
		return true
	}

	return false
}

// SetRoute gets a reference to the given []AppliedCapacityModel and assigns it to the Route field.
func (o *AppliedCapacitiesModel) SetRoute(v []AppliedCapacityModel) {
	o.Route = &v
}

// GetTrailer returns the Trailer field value if set, zero value otherwise.
func (o *AppliedCapacitiesModel) GetTrailer() []AppliedCapacityModel {
	if o == nil || o.Trailer == nil {
		var ret []AppliedCapacityModel
		return ret
	}
	return *o.Trailer
}

// GetTrailerOk returns a tuple with the Trailer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppliedCapacitiesModel) GetTrailerOk() (*[]AppliedCapacityModel, bool) {
	if o == nil || o.Trailer == nil {
		return nil, false
	}
	return o.Trailer, true
}

// HasTrailer returns a boolean if a field has been set.
func (o *AppliedCapacitiesModel) HasTrailer() bool {
	if o != nil && o.Trailer != nil {
		return true
	}

	return false
}

// SetTrailer gets a reference to the given []AppliedCapacityModel and assigns it to the Trailer field.
func (o *AppliedCapacitiesModel) SetTrailer(v []AppliedCapacityModel) {
	o.Trailer = &v
}

// GetVehicle returns the Vehicle field value if set, zero value otherwise.
func (o *AppliedCapacitiesModel) GetVehicle() []AppliedCapacityModel {
	if o == nil || o.Vehicle == nil {
		var ret []AppliedCapacityModel
		return ret
	}
	return *o.Vehicle
}

// GetVehicleOk returns a tuple with the Vehicle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppliedCapacitiesModel) GetVehicleOk() (*[]AppliedCapacityModel, bool) {
	if o == nil || o.Vehicle == nil {
		return nil, false
	}
	return o.Vehicle, true
}

// HasVehicle returns a boolean if a field has been set.
func (o *AppliedCapacitiesModel) HasVehicle() bool {
	if o != nil && o.Vehicle != nil {
		return true
	}

	return false
}

// SetVehicle gets a reference to the given []AppliedCapacityModel and assigns it to the Vehicle field.
func (o *AppliedCapacitiesModel) SetVehicle(v []AppliedCapacityModel) {
	o.Vehicle = &v
}

// GetEquipment returns the Equipment field value if set, zero value otherwise.
func (o *AppliedCapacitiesModel) GetEquipment() []AppliedCapacityModel {
	if o == nil || o.Equipment == nil {
		var ret []AppliedCapacityModel
		return ret
	}
	return *o.Equipment
}

// GetEquipmentOk returns a tuple with the Equipment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppliedCapacitiesModel) GetEquipmentOk() (*[]AppliedCapacityModel, bool) {
	if o == nil || o.Equipment == nil {
		return nil, false
	}
	return o.Equipment, true
}

// HasEquipment returns a boolean if a field has been set.
func (o *AppliedCapacitiesModel) HasEquipment() bool {
	if o != nil && o.Equipment != nil {
		return true
	}

	return false
}

// SetEquipment gets a reference to the given []AppliedCapacityModel and assigns it to the Equipment field.
func (o *AppliedCapacitiesModel) SetEquipment(v []AppliedCapacityModel) {
	o.Equipment = &v
}

// GetActivity returns the Activity field value if set, zero value otherwise.
func (o *AppliedCapacitiesModel) GetActivity() []AppliedCapacityModel {
	if o == nil || o.Activity == nil {
		var ret []AppliedCapacityModel
		return ret
	}
	return *o.Activity
}

// GetActivityOk returns a tuple with the Activity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppliedCapacitiesModel) GetActivityOk() (*[]AppliedCapacityModel, bool) {
	if o == nil || o.Activity == nil {
		return nil, false
	}
	return o.Activity, true
}

// HasActivity returns a boolean if a field has been set.
func (o *AppliedCapacitiesModel) HasActivity() bool {
	if o != nil && o.Activity != nil {
		return true
	}

	return false
}

// SetActivity gets a reference to the given []AppliedCapacityModel and assigns it to the Activity field.
func (o *AppliedCapacitiesModel) SetActivity(v []AppliedCapacityModel) {
	o.Activity = &v
}

// GetTotals returns the Totals field value if set, zero value otherwise.
func (o *AppliedCapacitiesModel) GetTotals() []AppliedCapacityModel {
	if o == nil || o.Totals == nil {
		var ret []AppliedCapacityModel
		return ret
	}
	return *o.Totals
}

// GetTotalsOk returns a tuple with the Totals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppliedCapacitiesModel) GetTotalsOk() (*[]AppliedCapacityModel, bool) {
	if o == nil || o.Totals == nil {
		return nil, false
	}
	return o.Totals, true
}

// HasTotals returns a boolean if a field has been set.
func (o *AppliedCapacitiesModel) HasTotals() bool {
	if o != nil && o.Totals != nil {
		return true
	}

	return false
}

// SetTotals gets a reference to the given []AppliedCapacityModel and assigns it to the Totals field.
func (o *AppliedCapacitiesModel) SetTotals(v []AppliedCapacityModel) {
	o.Totals = &v
}

func (o AppliedCapacitiesModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Route != nil {
		toSerialize["route"] = o.Route
	}
	if o.Trailer != nil {
		toSerialize["trailer"] = o.Trailer
	}
	if o.Vehicle != nil {
		toSerialize["vehicle"] = o.Vehicle
	}
	if o.Equipment != nil {
		toSerialize["equipment"] = o.Equipment
	}
	if o.Activity != nil {
		toSerialize["activity"] = o.Activity
	}
	if o.Totals != nil {
		toSerialize["totals"] = o.Totals
	}
	return json.Marshal(toSerialize)
}

type NullableAppliedCapacitiesModel struct {
	value *AppliedCapacitiesModel
	isSet bool
}

func (v NullableAppliedCapacitiesModel) Get() *AppliedCapacitiesModel {
	return v.value
}

func (v *NullableAppliedCapacitiesModel) Set(val *AppliedCapacitiesModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAppliedCapacitiesModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAppliedCapacitiesModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppliedCapacitiesModel(val *AppliedCapacitiesModel) *NullableAppliedCapacitiesModel {
	return &NullableAppliedCapacitiesModel{value: val, isSet: true}
}

func (v NullableAppliedCapacitiesModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppliedCapacitiesModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


