/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PortalModel struct for PortalModel
type PortalModel struct {
	// Unique Identifier
	Id *int64 `json:"id,omitempty"`
	// Name of brand
	Name *string `json:"name,omitempty"`
	// 
	PortalSettings *[]PortalSettingModel `json:"portal_settings,omitempty"`
}

// NewPortalModel instantiates a new PortalModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortalModel() *PortalModel {
	this := PortalModel{}
	return &this
}

// NewPortalModelWithDefaults instantiates a new PortalModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortalModelWithDefaults() *PortalModel {
	this := PortalModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PortalModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PortalModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *PortalModel) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PortalModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PortalModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PortalModel) SetName(v string) {
	o.Name = &v
}

// GetPortalSettings returns the PortalSettings field value if set, zero value otherwise.
func (o *PortalModel) GetPortalSettings() []PortalSettingModel {
	if o == nil || o.PortalSettings == nil {
		var ret []PortalSettingModel
		return ret
	}
	return *o.PortalSettings
}

// GetPortalSettingsOk returns a tuple with the PortalSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortalModel) GetPortalSettingsOk() (*[]PortalSettingModel, bool) {
	if o == nil || o.PortalSettings == nil {
		return nil, false
	}
	return o.PortalSettings, true
}

// HasPortalSettings returns a boolean if a field has been set.
func (o *PortalModel) HasPortalSettings() bool {
	if o != nil && o.PortalSettings != nil {
		return true
	}

	return false
}

// SetPortalSettings gets a reference to the given []PortalSettingModel and assigns it to the PortalSettings field.
func (o *PortalModel) SetPortalSettings(v []PortalSettingModel) {
	o.PortalSettings = &v
}

func (o PortalModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PortalSettings != nil {
		toSerialize["portal_settings"] = o.PortalSettings
	}
	return json.Marshal(toSerialize)
}

type NullablePortalModel struct {
	value *PortalModel
	isSet bool
}

func (v NullablePortalModel) Get() *PortalModel {
	return v.value
}

func (v *NullablePortalModel) Set(val *PortalModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePortalModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePortalModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortalModel(val *PortalModel) *NullablePortalModel {
	return &NullablePortalModel{value: val, isSet: true}
}

func (v NullablePortalModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortalModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


