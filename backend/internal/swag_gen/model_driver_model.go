/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// DriverModel struct for DriverModel
type DriverModel struct {
	// Unique Identifier
	Id *int64 `json:"id,omitempty"`
	// id of pause scheme to apply
	PauseId *int32 `json:"pause_id,omitempty"`
	// unique per user
	Uuid *string `json:"uuid,omitempty"`
	// user address (mostly interesting for drivers)
	Addresses *[]AddressModel `json:"addresses,omitempty"`
	// Tag names
	TagNames *[]string `json:"tag_names,omitempty"`
	// Tag type ids
	TagIds *[]int32 `json:"tag_ids,omitempty"`
	// First Name
	FirstName *string `json:"first_name,omitempty"`
	// Last Name
	LastName *string `json:"last_name,omitempty"`
	// Name Prefix
	NamePrefix *string `json:"name_prefix,omitempty"`
	// Full name
	FullName *string `json:"full_name,omitempty"`
	// Full name
	Initials *string `json:"initials,omitempty"`
	// Email
	Email *string `json:"email,omitempty"`
	// 
	Tags *[]TagModel `json:"tags,omitempty"`
	// 
	Zones *[]ZoneModel `json:"zones,omitempty"`
	// Zone names
	ZoneNames *[]string `json:"zone_names,omitempty"`
	// Zone ids
	ZoneIds *[]int32 `json:"zone_ids,omitempty"`
	// 
	Links *[]LinkModel `json:"links,omitempty"`
	// 
	Notes *[]NoteModel `json:"notes,omitempty"`
	// Whether user is removed or not
	Removed *bool `json:"removed,omitempty"`
	// Whether user is still active or not
	Active *bool `json:"active,omitempty"`
	// 
	MetaData *[]MetaDataModel `json:"meta_data,omitempty"`
	// 
	Files *[]FileModel `json:"files,omitempty"`
	// created_at date time
	DriverCreatedAt *time.Time `json:"driver_created_at,omitempty"`
	// updated_at date time
	DriverUpdatedAt *time.Time `json:"driver_updated_at,omitempty"`
	// created_by user id
	DriverCreatedBy *int32 `json:"driver_created_by,omitempty"`
	// created_by user id
	DriverUpdatedBy *int32 `json:"driver_updated_by,omitempty"`
	// Driver updated by user full name
	UpdatedByName *string `json:"updated_by_name,omitempty"`
}

// NewDriverModel instantiates a new DriverModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriverModel() *DriverModel {
	this := DriverModel{}
	return &this
}

// NewDriverModelWithDefaults instantiates a new DriverModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriverModelWithDefaults() *DriverModel {
	this := DriverModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DriverModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DriverModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DriverModel) SetId(v int64) {
	o.Id = &v
}

// GetPauseId returns the PauseId field value if set, zero value otherwise.
func (o *DriverModel) GetPauseId() int32 {
	if o == nil || o.PauseId == nil {
		var ret int32
		return ret
	}
	return *o.PauseId
}

// GetPauseIdOk returns a tuple with the PauseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetPauseIdOk() (*int32, bool) {
	if o == nil || o.PauseId == nil {
		return nil, false
	}
	return o.PauseId, true
}

// HasPauseId returns a boolean if a field has been set.
func (o *DriverModel) HasPauseId() bool {
	if o != nil && o.PauseId != nil {
		return true
	}

	return false
}

// SetPauseId gets a reference to the given int32 and assigns it to the PauseId field.
func (o *DriverModel) SetPauseId(v int32) {
	o.PauseId = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *DriverModel) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *DriverModel) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *DriverModel) SetUuid(v string) {
	o.Uuid = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *DriverModel) GetAddresses() []AddressModel {
	if o == nil || o.Addresses == nil {
		var ret []AddressModel
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetAddressesOk() (*[]AddressModel, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *DriverModel) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []AddressModel and assigns it to the Addresses field.
func (o *DriverModel) SetAddresses(v []AddressModel) {
	o.Addresses = &v
}

// GetTagNames returns the TagNames field value if set, zero value otherwise.
func (o *DriverModel) GetTagNames() []string {
	if o == nil || o.TagNames == nil {
		var ret []string
		return ret
	}
	return *o.TagNames
}

// GetTagNamesOk returns a tuple with the TagNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetTagNamesOk() (*[]string, bool) {
	if o == nil || o.TagNames == nil {
		return nil, false
	}
	return o.TagNames, true
}

// HasTagNames returns a boolean if a field has been set.
func (o *DriverModel) HasTagNames() bool {
	if o != nil && o.TagNames != nil {
		return true
	}

	return false
}

// SetTagNames gets a reference to the given []string and assigns it to the TagNames field.
func (o *DriverModel) SetTagNames(v []string) {
	o.TagNames = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *DriverModel) GetTagIds() []int32 {
	if o == nil || o.TagIds == nil {
		var ret []int32
		return ret
	}
	return *o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetTagIdsOk() (*[]int32, bool) {
	if o == nil || o.TagIds == nil {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *DriverModel) HasTagIds() bool {
	if o != nil && o.TagIds != nil {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []int32 and assigns it to the TagIds field.
func (o *DriverModel) SetTagIds(v []int32) {
	o.TagIds = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *DriverModel) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *DriverModel) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *DriverModel) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *DriverModel) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *DriverModel) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *DriverModel) SetLastName(v string) {
	o.LastName = &v
}

// GetNamePrefix returns the NamePrefix field value if set, zero value otherwise.
func (o *DriverModel) GetNamePrefix() string {
	if o == nil || o.NamePrefix == nil {
		var ret string
		return ret
	}
	return *o.NamePrefix
}

// GetNamePrefixOk returns a tuple with the NamePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetNamePrefixOk() (*string, bool) {
	if o == nil || o.NamePrefix == nil {
		return nil, false
	}
	return o.NamePrefix, true
}

// HasNamePrefix returns a boolean if a field has been set.
func (o *DriverModel) HasNamePrefix() bool {
	if o != nil && o.NamePrefix != nil {
		return true
	}

	return false
}

// SetNamePrefix gets a reference to the given string and assigns it to the NamePrefix field.
func (o *DriverModel) SetNamePrefix(v string) {
	o.NamePrefix = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *DriverModel) GetFullName() string {
	if o == nil || o.FullName == nil {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetFullNameOk() (*string, bool) {
	if o == nil || o.FullName == nil {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *DriverModel) HasFullName() bool {
	if o != nil && o.FullName != nil {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *DriverModel) SetFullName(v string) {
	o.FullName = &v
}

// GetInitials returns the Initials field value if set, zero value otherwise.
func (o *DriverModel) GetInitials() string {
	if o == nil || o.Initials == nil {
		var ret string
		return ret
	}
	return *o.Initials
}

// GetInitialsOk returns a tuple with the Initials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetInitialsOk() (*string, bool) {
	if o == nil || o.Initials == nil {
		return nil, false
	}
	return o.Initials, true
}

// HasInitials returns a boolean if a field has been set.
func (o *DriverModel) HasInitials() bool {
	if o != nil && o.Initials != nil {
		return true
	}

	return false
}

// SetInitials gets a reference to the given string and assigns it to the Initials field.
func (o *DriverModel) SetInitials(v string) {
	o.Initials = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *DriverModel) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *DriverModel) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *DriverModel) SetEmail(v string) {
	o.Email = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *DriverModel) GetTags() []TagModel {
	if o == nil || o.Tags == nil {
		var ret []TagModel
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetTagsOk() (*[]TagModel, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *DriverModel) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagModel and assigns it to the Tags field.
func (o *DriverModel) SetTags(v []TagModel) {
	o.Tags = &v
}

// GetZones returns the Zones field value if set, zero value otherwise.
func (o *DriverModel) GetZones() []ZoneModel {
	if o == nil || o.Zones == nil {
		var ret []ZoneModel
		return ret
	}
	return *o.Zones
}

// GetZonesOk returns a tuple with the Zones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetZonesOk() (*[]ZoneModel, bool) {
	if o == nil || o.Zones == nil {
		return nil, false
	}
	return o.Zones, true
}

// HasZones returns a boolean if a field has been set.
func (o *DriverModel) HasZones() bool {
	if o != nil && o.Zones != nil {
		return true
	}

	return false
}

// SetZones gets a reference to the given []ZoneModel and assigns it to the Zones field.
func (o *DriverModel) SetZones(v []ZoneModel) {
	o.Zones = &v
}

// GetZoneNames returns the ZoneNames field value if set, zero value otherwise.
func (o *DriverModel) GetZoneNames() []string {
	if o == nil || o.ZoneNames == nil {
		var ret []string
		return ret
	}
	return *o.ZoneNames
}

// GetZoneNamesOk returns a tuple with the ZoneNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetZoneNamesOk() (*[]string, bool) {
	if o == nil || o.ZoneNames == nil {
		return nil, false
	}
	return o.ZoneNames, true
}

// HasZoneNames returns a boolean if a field has been set.
func (o *DriverModel) HasZoneNames() bool {
	if o != nil && o.ZoneNames != nil {
		return true
	}

	return false
}

// SetZoneNames gets a reference to the given []string and assigns it to the ZoneNames field.
func (o *DriverModel) SetZoneNames(v []string) {
	o.ZoneNames = &v
}

// GetZoneIds returns the ZoneIds field value if set, zero value otherwise.
func (o *DriverModel) GetZoneIds() []int32 {
	if o == nil || o.ZoneIds == nil {
		var ret []int32
		return ret
	}
	return *o.ZoneIds
}

// GetZoneIdsOk returns a tuple with the ZoneIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetZoneIdsOk() (*[]int32, bool) {
	if o == nil || o.ZoneIds == nil {
		return nil, false
	}
	return o.ZoneIds, true
}

// HasZoneIds returns a boolean if a field has been set.
func (o *DriverModel) HasZoneIds() bool {
	if o != nil && o.ZoneIds != nil {
		return true
	}

	return false
}

// SetZoneIds gets a reference to the given []int32 and assigns it to the ZoneIds field.
func (o *DriverModel) SetZoneIds(v []int32) {
	o.ZoneIds = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *DriverModel) GetLinks() []LinkModel {
	if o == nil || o.Links == nil {
		var ret []LinkModel
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetLinksOk() (*[]LinkModel, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *DriverModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkModel and assigns it to the Links field.
func (o *DriverModel) SetLinks(v []LinkModel) {
	o.Links = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *DriverModel) GetNotes() []NoteModel {
	if o == nil || o.Notes == nil {
		var ret []NoteModel
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetNotesOk() (*[]NoteModel, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *DriverModel) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given []NoteModel and assigns it to the Notes field.
func (o *DriverModel) SetNotes(v []NoteModel) {
	o.Notes = &v
}

// GetRemoved returns the Removed field value if set, zero value otherwise.
func (o *DriverModel) GetRemoved() bool {
	if o == nil || o.Removed == nil {
		var ret bool
		return ret
	}
	return *o.Removed
}

// GetRemovedOk returns a tuple with the Removed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetRemovedOk() (*bool, bool) {
	if o == nil || o.Removed == nil {
		return nil, false
	}
	return o.Removed, true
}

// HasRemoved returns a boolean if a field has been set.
func (o *DriverModel) HasRemoved() bool {
	if o != nil && o.Removed != nil {
		return true
	}

	return false
}

// SetRemoved gets a reference to the given bool and assigns it to the Removed field.
func (o *DriverModel) SetRemoved(v bool) {
	o.Removed = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *DriverModel) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *DriverModel) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *DriverModel) SetActive(v bool) {
	o.Active = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *DriverModel) GetMetaData() []MetaDataModel {
	if o == nil || o.MetaData == nil {
		var ret []MetaDataModel
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetMetaDataOk() (*[]MetaDataModel, bool) {
	if o == nil || o.MetaData == nil {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *DriverModel) HasMetaData() bool {
	if o != nil && o.MetaData != nil {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given []MetaDataModel and assigns it to the MetaData field.
func (o *DriverModel) SetMetaData(v []MetaDataModel) {
	o.MetaData = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *DriverModel) GetFiles() []FileModel {
	if o == nil || o.Files == nil {
		var ret []FileModel
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetFilesOk() (*[]FileModel, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *DriverModel) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []FileModel and assigns it to the Files field.
func (o *DriverModel) SetFiles(v []FileModel) {
	o.Files = &v
}

// GetDriverCreatedAt returns the DriverCreatedAt field value if set, zero value otherwise.
func (o *DriverModel) GetDriverCreatedAt() time.Time {
	if o == nil || o.DriverCreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.DriverCreatedAt
}

// GetDriverCreatedAtOk returns a tuple with the DriverCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetDriverCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.DriverCreatedAt == nil {
		return nil, false
	}
	return o.DriverCreatedAt, true
}

// HasDriverCreatedAt returns a boolean if a field has been set.
func (o *DriverModel) HasDriverCreatedAt() bool {
	if o != nil && o.DriverCreatedAt != nil {
		return true
	}

	return false
}

// SetDriverCreatedAt gets a reference to the given time.Time and assigns it to the DriverCreatedAt field.
func (o *DriverModel) SetDriverCreatedAt(v time.Time) {
	o.DriverCreatedAt = &v
}

// GetDriverUpdatedAt returns the DriverUpdatedAt field value if set, zero value otherwise.
func (o *DriverModel) GetDriverUpdatedAt() time.Time {
	if o == nil || o.DriverUpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.DriverUpdatedAt
}

// GetDriverUpdatedAtOk returns a tuple with the DriverUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetDriverUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.DriverUpdatedAt == nil {
		return nil, false
	}
	return o.DriverUpdatedAt, true
}

// HasDriverUpdatedAt returns a boolean if a field has been set.
func (o *DriverModel) HasDriverUpdatedAt() bool {
	if o != nil && o.DriverUpdatedAt != nil {
		return true
	}

	return false
}

// SetDriverUpdatedAt gets a reference to the given time.Time and assigns it to the DriverUpdatedAt field.
func (o *DriverModel) SetDriverUpdatedAt(v time.Time) {
	o.DriverUpdatedAt = &v
}

// GetDriverCreatedBy returns the DriverCreatedBy field value if set, zero value otherwise.
func (o *DriverModel) GetDriverCreatedBy() int32 {
	if o == nil || o.DriverCreatedBy == nil {
		var ret int32
		return ret
	}
	return *o.DriverCreatedBy
}

// GetDriverCreatedByOk returns a tuple with the DriverCreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetDriverCreatedByOk() (*int32, bool) {
	if o == nil || o.DriverCreatedBy == nil {
		return nil, false
	}
	return o.DriverCreatedBy, true
}

// HasDriverCreatedBy returns a boolean if a field has been set.
func (o *DriverModel) HasDriverCreatedBy() bool {
	if o != nil && o.DriverCreatedBy != nil {
		return true
	}

	return false
}

// SetDriverCreatedBy gets a reference to the given int32 and assigns it to the DriverCreatedBy field.
func (o *DriverModel) SetDriverCreatedBy(v int32) {
	o.DriverCreatedBy = &v
}

// GetDriverUpdatedBy returns the DriverUpdatedBy field value if set, zero value otherwise.
func (o *DriverModel) GetDriverUpdatedBy() int32 {
	if o == nil || o.DriverUpdatedBy == nil {
		var ret int32
		return ret
	}
	return *o.DriverUpdatedBy
}

// GetDriverUpdatedByOk returns a tuple with the DriverUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetDriverUpdatedByOk() (*int32, bool) {
	if o == nil || o.DriverUpdatedBy == nil {
		return nil, false
	}
	return o.DriverUpdatedBy, true
}

// HasDriverUpdatedBy returns a boolean if a field has been set.
func (o *DriverModel) HasDriverUpdatedBy() bool {
	if o != nil && o.DriverUpdatedBy != nil {
		return true
	}

	return false
}

// SetDriverUpdatedBy gets a reference to the given int32 and assigns it to the DriverUpdatedBy field.
func (o *DriverModel) SetDriverUpdatedBy(v int32) {
	o.DriverUpdatedBy = &v
}

// GetUpdatedByName returns the UpdatedByName field value if set, zero value otherwise.
func (o *DriverModel) GetUpdatedByName() string {
	if o == nil || o.UpdatedByName == nil {
		var ret string
		return ret
	}
	return *o.UpdatedByName
}

// GetUpdatedByNameOk returns a tuple with the UpdatedByName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriverModel) GetUpdatedByNameOk() (*string, bool) {
	if o == nil || o.UpdatedByName == nil {
		return nil, false
	}
	return o.UpdatedByName, true
}

// HasUpdatedByName returns a boolean if a field has been set.
func (o *DriverModel) HasUpdatedByName() bool {
	if o != nil && o.UpdatedByName != nil {
		return true
	}

	return false
}

// SetUpdatedByName gets a reference to the given string and assigns it to the UpdatedByName field.
func (o *DriverModel) SetUpdatedByName(v string) {
	o.UpdatedByName = &v
}

func (o DriverModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.PauseId != nil {
		toSerialize["pause_id"] = o.PauseId
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	if o.TagNames != nil {
		toSerialize["tag_names"] = o.TagNames
	}
	if o.TagIds != nil {
		toSerialize["tag_ids"] = o.TagIds
	}
	if o.FirstName != nil {
		toSerialize["first_name"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["last_name"] = o.LastName
	}
	if o.NamePrefix != nil {
		toSerialize["name_prefix"] = o.NamePrefix
	}
	if o.FullName != nil {
		toSerialize["full_name"] = o.FullName
	}
	if o.Initials != nil {
		toSerialize["initials"] = o.Initials
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Zones != nil {
		toSerialize["zones"] = o.Zones
	}
	if o.ZoneNames != nil {
		toSerialize["zone_names"] = o.ZoneNames
	}
	if o.ZoneIds != nil {
		toSerialize["zone_ids"] = o.ZoneIds
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.Removed != nil {
		toSerialize["removed"] = o.Removed
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.MetaData != nil {
		toSerialize["meta_data"] = o.MetaData
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if o.DriverCreatedAt != nil {
		toSerialize["driver_created_at"] = o.DriverCreatedAt
	}
	if o.DriverUpdatedAt != nil {
		toSerialize["driver_updated_at"] = o.DriverUpdatedAt
	}
	if o.DriverCreatedBy != nil {
		toSerialize["driver_created_by"] = o.DriverCreatedBy
	}
	if o.DriverUpdatedBy != nil {
		toSerialize["driver_updated_by"] = o.DriverUpdatedBy
	}
	if o.UpdatedByName != nil {
		toSerialize["updated_by_name"] = o.UpdatedByName
	}
	return json.Marshal(toSerialize)
}

type NullableDriverModel struct {
	value *DriverModel
	isSet bool
}

func (v NullableDriverModel) Get() *DriverModel {
	return v.value
}

func (v *NullableDriverModel) Set(val *DriverModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDriverModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDriverModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriverModel(val *DriverModel) *NullableDriverModel {
	return &NullableDriverModel{value: val, isSet: true}
}

func (v NullableDriverModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriverModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


