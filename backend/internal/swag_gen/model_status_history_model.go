/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StatusHistoryModel struct for StatusHistoryModel
type StatusHistoryModel struct {
	// Unique ID
	Id *int64 `json:"id,omitempty"`
	// Service windows scheme ID
	OldStatusId *int64 `json:"old_status_id,omitempty"`
	// Service windows scheme ID
	NewStatusId *int64 `json:"new_status_id,omitempty"`
	// Service windows scheme ID
	ObjectType *int64 `json:"object_type,omitempty"`
	// Service windows scheme ID
	ObjectId *int64 `json:"object_id,omitempty"`
	// Service windows scheme ID
	RecordSnapshot *string `json:"record_snapshot,omitempty"`
	// Service windows scheme ID
	StatusHistoryCreatedBy *string `json:"status_history_created_by,omitempty"`
	// Service windows scheme ID
	StatusHistoryCreatedAt *string `json:"status_history_created_at,omitempty"`
	// user first name
	UserFirstName *string `json:"user_first_name,omitempty"`
	// user last name
	UserLastName *string `json:"user_last_name,omitempty"`
	// User name prefix
	UserNamePrefix *string `json:"user_name_prefix,omitempty"`
	// User full name
	UserFullName *string `json:"user_full_name,omitempty"`
	// User email
	UserEmail *string `json:"user_email,omitempty"`
	// user uuid
	UserUuid *string `json:"user_uuid,omitempty"`
	// old status name
	OldStatusName *string `json:"old_status_name,omitempty"`
	// new status name
	NewStatusName *string `json:"new_status_name,omitempty"`
}

// NewStatusHistoryModel instantiates a new StatusHistoryModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusHistoryModel() *StatusHistoryModel {
	this := StatusHistoryModel{}
	return &this
}

// NewStatusHistoryModelWithDefaults instantiates a new StatusHistoryModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusHistoryModelWithDefaults() *StatusHistoryModel {
	this := StatusHistoryModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *StatusHistoryModel) SetId(v int64) {
	o.Id = &v
}

// GetOldStatusId returns the OldStatusId field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetOldStatusId() int64 {
	if o == nil || o.OldStatusId == nil {
		var ret int64
		return ret
	}
	return *o.OldStatusId
}

// GetOldStatusIdOk returns a tuple with the OldStatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetOldStatusIdOk() (*int64, bool) {
	if o == nil || o.OldStatusId == nil {
		return nil, false
	}
	return o.OldStatusId, true
}

// HasOldStatusId returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasOldStatusId() bool {
	if o != nil && o.OldStatusId != nil {
		return true
	}

	return false
}

// SetOldStatusId gets a reference to the given int64 and assigns it to the OldStatusId field.
func (o *StatusHistoryModel) SetOldStatusId(v int64) {
	o.OldStatusId = &v
}

// GetNewStatusId returns the NewStatusId field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetNewStatusId() int64 {
	if o == nil || o.NewStatusId == nil {
		var ret int64
		return ret
	}
	return *o.NewStatusId
}

// GetNewStatusIdOk returns a tuple with the NewStatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetNewStatusIdOk() (*int64, bool) {
	if o == nil || o.NewStatusId == nil {
		return nil, false
	}
	return o.NewStatusId, true
}

// HasNewStatusId returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasNewStatusId() bool {
	if o != nil && o.NewStatusId != nil {
		return true
	}

	return false
}

// SetNewStatusId gets a reference to the given int64 and assigns it to the NewStatusId field.
func (o *StatusHistoryModel) SetNewStatusId(v int64) {
	o.NewStatusId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetObjectType() int64 {
	if o == nil || o.ObjectType == nil {
		var ret int64
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetObjectTypeOk() (*int64, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given int64 and assigns it to the ObjectType field.
func (o *StatusHistoryModel) SetObjectType(v int64) {
	o.ObjectType = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetObjectId() int64 {
	if o == nil || o.ObjectId == nil {
		var ret int64
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetObjectIdOk() (*int64, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given int64 and assigns it to the ObjectId field.
func (o *StatusHistoryModel) SetObjectId(v int64) {
	o.ObjectId = &v
}

// GetRecordSnapshot returns the RecordSnapshot field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetRecordSnapshot() string {
	if o == nil || o.RecordSnapshot == nil {
		var ret string
		return ret
	}
	return *o.RecordSnapshot
}

// GetRecordSnapshotOk returns a tuple with the RecordSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetRecordSnapshotOk() (*string, bool) {
	if o == nil || o.RecordSnapshot == nil {
		return nil, false
	}
	return o.RecordSnapshot, true
}

// HasRecordSnapshot returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasRecordSnapshot() bool {
	if o != nil && o.RecordSnapshot != nil {
		return true
	}

	return false
}

// SetRecordSnapshot gets a reference to the given string and assigns it to the RecordSnapshot field.
func (o *StatusHistoryModel) SetRecordSnapshot(v string) {
	o.RecordSnapshot = &v
}

// GetStatusHistoryCreatedBy returns the StatusHistoryCreatedBy field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetStatusHistoryCreatedBy() string {
	if o == nil || o.StatusHistoryCreatedBy == nil {
		var ret string
		return ret
	}
	return *o.StatusHistoryCreatedBy
}

// GetStatusHistoryCreatedByOk returns a tuple with the StatusHistoryCreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetStatusHistoryCreatedByOk() (*string, bool) {
	if o == nil || o.StatusHistoryCreatedBy == nil {
		return nil, false
	}
	return o.StatusHistoryCreatedBy, true
}

// HasStatusHistoryCreatedBy returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasStatusHistoryCreatedBy() bool {
	if o != nil && o.StatusHistoryCreatedBy != nil {
		return true
	}

	return false
}

// SetStatusHistoryCreatedBy gets a reference to the given string and assigns it to the StatusHistoryCreatedBy field.
func (o *StatusHistoryModel) SetStatusHistoryCreatedBy(v string) {
	o.StatusHistoryCreatedBy = &v
}

// GetStatusHistoryCreatedAt returns the StatusHistoryCreatedAt field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetStatusHistoryCreatedAt() string {
	if o == nil || o.StatusHistoryCreatedAt == nil {
		var ret string
		return ret
	}
	return *o.StatusHistoryCreatedAt
}

// GetStatusHistoryCreatedAtOk returns a tuple with the StatusHistoryCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetStatusHistoryCreatedAtOk() (*string, bool) {
	if o == nil || o.StatusHistoryCreatedAt == nil {
		return nil, false
	}
	return o.StatusHistoryCreatedAt, true
}

// HasStatusHistoryCreatedAt returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasStatusHistoryCreatedAt() bool {
	if o != nil && o.StatusHistoryCreatedAt != nil {
		return true
	}

	return false
}

// SetStatusHistoryCreatedAt gets a reference to the given string and assigns it to the StatusHistoryCreatedAt field.
func (o *StatusHistoryModel) SetStatusHistoryCreatedAt(v string) {
	o.StatusHistoryCreatedAt = &v
}

// GetUserFirstName returns the UserFirstName field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetUserFirstName() string {
	if o == nil || o.UserFirstName == nil {
		var ret string
		return ret
	}
	return *o.UserFirstName
}

// GetUserFirstNameOk returns a tuple with the UserFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetUserFirstNameOk() (*string, bool) {
	if o == nil || o.UserFirstName == nil {
		return nil, false
	}
	return o.UserFirstName, true
}

// HasUserFirstName returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasUserFirstName() bool {
	if o != nil && o.UserFirstName != nil {
		return true
	}

	return false
}

// SetUserFirstName gets a reference to the given string and assigns it to the UserFirstName field.
func (o *StatusHistoryModel) SetUserFirstName(v string) {
	o.UserFirstName = &v
}

// GetUserLastName returns the UserLastName field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetUserLastName() string {
	if o == nil || o.UserLastName == nil {
		var ret string
		return ret
	}
	return *o.UserLastName
}

// GetUserLastNameOk returns a tuple with the UserLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetUserLastNameOk() (*string, bool) {
	if o == nil || o.UserLastName == nil {
		return nil, false
	}
	return o.UserLastName, true
}

// HasUserLastName returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasUserLastName() bool {
	if o != nil && o.UserLastName != nil {
		return true
	}

	return false
}

// SetUserLastName gets a reference to the given string and assigns it to the UserLastName field.
func (o *StatusHistoryModel) SetUserLastName(v string) {
	o.UserLastName = &v
}

// GetUserNamePrefix returns the UserNamePrefix field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetUserNamePrefix() string {
	if o == nil || o.UserNamePrefix == nil {
		var ret string
		return ret
	}
	return *o.UserNamePrefix
}

// GetUserNamePrefixOk returns a tuple with the UserNamePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetUserNamePrefixOk() (*string, bool) {
	if o == nil || o.UserNamePrefix == nil {
		return nil, false
	}
	return o.UserNamePrefix, true
}

// HasUserNamePrefix returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasUserNamePrefix() bool {
	if o != nil && o.UserNamePrefix != nil {
		return true
	}

	return false
}

// SetUserNamePrefix gets a reference to the given string and assigns it to the UserNamePrefix field.
func (o *StatusHistoryModel) SetUserNamePrefix(v string) {
	o.UserNamePrefix = &v
}

// GetUserFullName returns the UserFullName field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetUserFullName() string {
	if o == nil || o.UserFullName == nil {
		var ret string
		return ret
	}
	return *o.UserFullName
}

// GetUserFullNameOk returns a tuple with the UserFullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetUserFullNameOk() (*string, bool) {
	if o == nil || o.UserFullName == nil {
		return nil, false
	}
	return o.UserFullName, true
}

// HasUserFullName returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasUserFullName() bool {
	if o != nil && o.UserFullName != nil {
		return true
	}

	return false
}

// SetUserFullName gets a reference to the given string and assigns it to the UserFullName field.
func (o *StatusHistoryModel) SetUserFullName(v string) {
	o.UserFullName = &v
}

// GetUserEmail returns the UserEmail field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetUserEmail() string {
	if o == nil || o.UserEmail == nil {
		var ret string
		return ret
	}
	return *o.UserEmail
}

// GetUserEmailOk returns a tuple with the UserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetUserEmailOk() (*string, bool) {
	if o == nil || o.UserEmail == nil {
		return nil, false
	}
	return o.UserEmail, true
}

// HasUserEmail returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasUserEmail() bool {
	if o != nil && o.UserEmail != nil {
		return true
	}

	return false
}

// SetUserEmail gets a reference to the given string and assigns it to the UserEmail field.
func (o *StatusHistoryModel) SetUserEmail(v string) {
	o.UserEmail = &v
}

// GetUserUuid returns the UserUuid field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetUserUuid() string {
	if o == nil || o.UserUuid == nil {
		var ret string
		return ret
	}
	return *o.UserUuid
}

// GetUserUuidOk returns a tuple with the UserUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetUserUuidOk() (*string, bool) {
	if o == nil || o.UserUuid == nil {
		return nil, false
	}
	return o.UserUuid, true
}

// HasUserUuid returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasUserUuid() bool {
	if o != nil && o.UserUuid != nil {
		return true
	}

	return false
}

// SetUserUuid gets a reference to the given string and assigns it to the UserUuid field.
func (o *StatusHistoryModel) SetUserUuid(v string) {
	o.UserUuid = &v
}

// GetOldStatusName returns the OldStatusName field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetOldStatusName() string {
	if o == nil || o.OldStatusName == nil {
		var ret string
		return ret
	}
	return *o.OldStatusName
}

// GetOldStatusNameOk returns a tuple with the OldStatusName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetOldStatusNameOk() (*string, bool) {
	if o == nil || o.OldStatusName == nil {
		return nil, false
	}
	return o.OldStatusName, true
}

// HasOldStatusName returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasOldStatusName() bool {
	if o != nil && o.OldStatusName != nil {
		return true
	}

	return false
}

// SetOldStatusName gets a reference to the given string and assigns it to the OldStatusName field.
func (o *StatusHistoryModel) SetOldStatusName(v string) {
	o.OldStatusName = &v
}

// GetNewStatusName returns the NewStatusName field value if set, zero value otherwise.
func (o *StatusHistoryModel) GetNewStatusName() string {
	if o == nil || o.NewStatusName == nil {
		var ret string
		return ret
	}
	return *o.NewStatusName
}

// GetNewStatusNameOk returns a tuple with the NewStatusName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusHistoryModel) GetNewStatusNameOk() (*string, bool) {
	if o == nil || o.NewStatusName == nil {
		return nil, false
	}
	return o.NewStatusName, true
}

// HasNewStatusName returns a boolean if a field has been set.
func (o *StatusHistoryModel) HasNewStatusName() bool {
	if o != nil && o.NewStatusName != nil {
		return true
	}

	return false
}

// SetNewStatusName gets a reference to the given string and assigns it to the NewStatusName field.
func (o *StatusHistoryModel) SetNewStatusName(v string) {
	o.NewStatusName = &v
}

func (o StatusHistoryModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.OldStatusId != nil {
		toSerialize["old_status_id"] = o.OldStatusId
	}
	if o.NewStatusId != nil {
		toSerialize["new_status_id"] = o.NewStatusId
	}
	if o.ObjectType != nil {
		toSerialize["object_type"] = o.ObjectType
	}
	if o.ObjectId != nil {
		toSerialize["object_id"] = o.ObjectId
	}
	if o.RecordSnapshot != nil {
		toSerialize["record_snapshot"] = o.RecordSnapshot
	}
	if o.StatusHistoryCreatedBy != nil {
		toSerialize["status_history_created_by"] = o.StatusHistoryCreatedBy
	}
	if o.StatusHistoryCreatedAt != nil {
		toSerialize["status_history_created_at"] = o.StatusHistoryCreatedAt
	}
	if o.UserFirstName != nil {
		toSerialize["user_first_name"] = o.UserFirstName
	}
	if o.UserLastName != nil {
		toSerialize["user_last_name"] = o.UserLastName
	}
	if o.UserNamePrefix != nil {
		toSerialize["user_name_prefix"] = o.UserNamePrefix
	}
	if o.UserFullName != nil {
		toSerialize["user_full_name"] = o.UserFullName
	}
	if o.UserEmail != nil {
		toSerialize["user_email"] = o.UserEmail
	}
	if o.UserUuid != nil {
		toSerialize["user_uuid"] = o.UserUuid
	}
	if o.OldStatusName != nil {
		toSerialize["old_status_name"] = o.OldStatusName
	}
	if o.NewStatusName != nil {
		toSerialize["new_status_name"] = o.NewStatusName
	}
	return json.Marshal(toSerialize)
}

type NullableStatusHistoryModel struct {
	value *StatusHistoryModel
	isSet bool
}

func (v NullableStatusHistoryModel) Get() *StatusHistoryModel {
	return v.value
}

func (v *NullableStatusHistoryModel) Set(val *StatusHistoryModel) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusHistoryModel) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusHistoryModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusHistoryModel(val *StatusHistoryModel) *NullableStatusHistoryModel {
	return &NullableStatusHistoryModel{value: val, isSet: true}
}

func (v NullableStatusHistoryModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusHistoryModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


