/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SettingsOptionsModel struct for SettingsOptionsModel
type SettingsOptionsModel struct {
	// 
	IncludeSettingsGroupName *bool `json:"include_settings_group_name,omitempty"`
	// 
	IncludeRecordInfo *bool `json:"include_record_info,omitempty"`
	// 
	IncludeRecordObject *bool `json:"include_record_object,omitempty"`
	// 
	IncludeValueOptions *bool `json:"include_value_options,omitempty"`
}

// NewSettingsOptionsModel instantiates a new SettingsOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettingsOptionsModel() *SettingsOptionsModel {
	this := SettingsOptionsModel{}
	return &this
}

// NewSettingsOptionsModelWithDefaults instantiates a new SettingsOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettingsOptionsModelWithDefaults() *SettingsOptionsModel {
	this := SettingsOptionsModel{}
	return &this
}

// GetIncludeSettingsGroupName returns the IncludeSettingsGroupName field value if set, zero value otherwise.
func (o *SettingsOptionsModel) GetIncludeSettingsGroupName() bool {
	if o == nil || o.IncludeSettingsGroupName == nil {
		var ret bool
		return ret
	}
	return *o.IncludeSettingsGroupName
}

// GetIncludeSettingsGroupNameOk returns a tuple with the IncludeSettingsGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsOptionsModel) GetIncludeSettingsGroupNameOk() (*bool, bool) {
	if o == nil || o.IncludeSettingsGroupName == nil {
		return nil, false
	}
	return o.IncludeSettingsGroupName, true
}

// HasIncludeSettingsGroupName returns a boolean if a field has been set.
func (o *SettingsOptionsModel) HasIncludeSettingsGroupName() bool {
	if o != nil && o.IncludeSettingsGroupName != nil {
		return true
	}

	return false
}

// SetIncludeSettingsGroupName gets a reference to the given bool and assigns it to the IncludeSettingsGroupName field.
func (o *SettingsOptionsModel) SetIncludeSettingsGroupName(v bool) {
	o.IncludeSettingsGroupName = &v
}

// GetIncludeRecordInfo returns the IncludeRecordInfo field value if set, zero value otherwise.
func (o *SettingsOptionsModel) GetIncludeRecordInfo() bool {
	if o == nil || o.IncludeRecordInfo == nil {
		var ret bool
		return ret
	}
	return *o.IncludeRecordInfo
}

// GetIncludeRecordInfoOk returns a tuple with the IncludeRecordInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsOptionsModel) GetIncludeRecordInfoOk() (*bool, bool) {
	if o == nil || o.IncludeRecordInfo == nil {
		return nil, false
	}
	return o.IncludeRecordInfo, true
}

// HasIncludeRecordInfo returns a boolean if a field has been set.
func (o *SettingsOptionsModel) HasIncludeRecordInfo() bool {
	if o != nil && o.IncludeRecordInfo != nil {
		return true
	}

	return false
}

// SetIncludeRecordInfo gets a reference to the given bool and assigns it to the IncludeRecordInfo field.
func (o *SettingsOptionsModel) SetIncludeRecordInfo(v bool) {
	o.IncludeRecordInfo = &v
}

// GetIncludeRecordObject returns the IncludeRecordObject field value if set, zero value otherwise.
func (o *SettingsOptionsModel) GetIncludeRecordObject() bool {
	if o == nil || o.IncludeRecordObject == nil {
		var ret bool
		return ret
	}
	return *o.IncludeRecordObject
}

// GetIncludeRecordObjectOk returns a tuple with the IncludeRecordObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsOptionsModel) GetIncludeRecordObjectOk() (*bool, bool) {
	if o == nil || o.IncludeRecordObject == nil {
		return nil, false
	}
	return o.IncludeRecordObject, true
}

// HasIncludeRecordObject returns a boolean if a field has been set.
func (o *SettingsOptionsModel) HasIncludeRecordObject() bool {
	if o != nil && o.IncludeRecordObject != nil {
		return true
	}

	return false
}

// SetIncludeRecordObject gets a reference to the given bool and assigns it to the IncludeRecordObject field.
func (o *SettingsOptionsModel) SetIncludeRecordObject(v bool) {
	o.IncludeRecordObject = &v
}

// GetIncludeValueOptions returns the IncludeValueOptions field value if set, zero value otherwise.
func (o *SettingsOptionsModel) GetIncludeValueOptions() bool {
	if o == nil || o.IncludeValueOptions == nil {
		var ret bool
		return ret
	}
	return *o.IncludeValueOptions
}

// GetIncludeValueOptionsOk returns a tuple with the IncludeValueOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsOptionsModel) GetIncludeValueOptionsOk() (*bool, bool) {
	if o == nil || o.IncludeValueOptions == nil {
		return nil, false
	}
	return o.IncludeValueOptions, true
}

// HasIncludeValueOptions returns a boolean if a field has been set.
func (o *SettingsOptionsModel) HasIncludeValueOptions() bool {
	if o != nil && o.IncludeValueOptions != nil {
		return true
	}

	return false
}

// SetIncludeValueOptions gets a reference to the given bool and assigns it to the IncludeValueOptions field.
func (o *SettingsOptionsModel) SetIncludeValueOptions(v bool) {
	o.IncludeValueOptions = &v
}

func (o SettingsOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeSettingsGroupName != nil {
		toSerialize["include_settings_group_name"] = o.IncludeSettingsGroupName
	}
	if o.IncludeRecordInfo != nil {
		toSerialize["include_record_info"] = o.IncludeRecordInfo
	}
	if o.IncludeRecordObject != nil {
		toSerialize["include_record_object"] = o.IncludeRecordObject
	}
	if o.IncludeValueOptions != nil {
		toSerialize["include_value_options"] = o.IncludeValueOptions
	}
	return json.Marshal(toSerialize)
}

type NullableSettingsOptionsModel struct {
	value *SettingsOptionsModel
	isSet bool
}

func (v NullableSettingsOptionsModel) Get() *SettingsOptionsModel {
	return v.value
}

func (v *NullableSettingsOptionsModel) Set(val *SettingsOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSettingsOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSettingsOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettingsOptionsModel(val *SettingsOptionsModel) *NullableSettingsOptionsModel {
	return &NullableSettingsOptionsModel{value: val, isSet: true}
}

func (v NullableSettingsOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettingsOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


