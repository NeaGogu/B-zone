/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BrandOptionsModel struct for BrandOptionsModel
type BrandOptionsModel struct {
	// 
	IncludeTags *bool `json:"include_tags,omitempty"`
	// 
	IncludeBrandColours *bool `json:"include_brand_colours,omitempty"`
	// 
	IncludeLinks *bool `json:"include_links,omitempty"`
	// 
	IncludeRecordInfo *bool `json:"include_record_info,omitempty"`
	// 
	IncludeFiles *bool `json:"include_files,omitempty"`
	// 
	IncludeMetaData *bool `json:"include_meta_data,omitempty"`
	// 
	IncludeNotes *bool `json:"include_notes,omitempty"`
	// 
	IncludePortalSettings *bool `json:"include_portal_settings,omitempty"`
}

// NewBrandOptionsModel instantiates a new BrandOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandOptionsModel() *BrandOptionsModel {
	this := BrandOptionsModel{}
	return &this
}

// NewBrandOptionsModelWithDefaults instantiates a new BrandOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandOptionsModelWithDefaults() *BrandOptionsModel {
	this := BrandOptionsModel{}
	return &this
}

// GetIncludeTags returns the IncludeTags field value if set, zero value otherwise.
func (o *BrandOptionsModel) GetIncludeTags() bool {
	if o == nil || o.IncludeTags == nil {
		var ret bool
		return ret
	}
	return *o.IncludeTags
}

// GetIncludeTagsOk returns a tuple with the IncludeTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandOptionsModel) GetIncludeTagsOk() (*bool, bool) {
	if o == nil || o.IncludeTags == nil {
		return nil, false
	}
	return o.IncludeTags, true
}

// HasIncludeTags returns a boolean if a field has been set.
func (o *BrandOptionsModel) HasIncludeTags() bool {
	if o != nil && o.IncludeTags != nil {
		return true
	}

	return false
}

// SetIncludeTags gets a reference to the given bool and assigns it to the IncludeTags field.
func (o *BrandOptionsModel) SetIncludeTags(v bool) {
	o.IncludeTags = &v
}

// GetIncludeBrandColours returns the IncludeBrandColours field value if set, zero value otherwise.
func (o *BrandOptionsModel) GetIncludeBrandColours() bool {
	if o == nil || o.IncludeBrandColours == nil {
		var ret bool
		return ret
	}
	return *o.IncludeBrandColours
}

// GetIncludeBrandColoursOk returns a tuple with the IncludeBrandColours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandOptionsModel) GetIncludeBrandColoursOk() (*bool, bool) {
	if o == nil || o.IncludeBrandColours == nil {
		return nil, false
	}
	return o.IncludeBrandColours, true
}

// HasIncludeBrandColours returns a boolean if a field has been set.
func (o *BrandOptionsModel) HasIncludeBrandColours() bool {
	if o != nil && o.IncludeBrandColours != nil {
		return true
	}

	return false
}

// SetIncludeBrandColours gets a reference to the given bool and assigns it to the IncludeBrandColours field.
func (o *BrandOptionsModel) SetIncludeBrandColours(v bool) {
	o.IncludeBrandColours = &v
}

// GetIncludeLinks returns the IncludeLinks field value if set, zero value otherwise.
func (o *BrandOptionsModel) GetIncludeLinks() bool {
	if o == nil || o.IncludeLinks == nil {
		var ret bool
		return ret
	}
	return *o.IncludeLinks
}

// GetIncludeLinksOk returns a tuple with the IncludeLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandOptionsModel) GetIncludeLinksOk() (*bool, bool) {
	if o == nil || o.IncludeLinks == nil {
		return nil, false
	}
	return o.IncludeLinks, true
}

// HasIncludeLinks returns a boolean if a field has been set.
func (o *BrandOptionsModel) HasIncludeLinks() bool {
	if o != nil && o.IncludeLinks != nil {
		return true
	}

	return false
}

// SetIncludeLinks gets a reference to the given bool and assigns it to the IncludeLinks field.
func (o *BrandOptionsModel) SetIncludeLinks(v bool) {
	o.IncludeLinks = &v
}

// GetIncludeRecordInfo returns the IncludeRecordInfo field value if set, zero value otherwise.
func (o *BrandOptionsModel) GetIncludeRecordInfo() bool {
	if o == nil || o.IncludeRecordInfo == nil {
		var ret bool
		return ret
	}
	return *o.IncludeRecordInfo
}

// GetIncludeRecordInfoOk returns a tuple with the IncludeRecordInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandOptionsModel) GetIncludeRecordInfoOk() (*bool, bool) {
	if o == nil || o.IncludeRecordInfo == nil {
		return nil, false
	}
	return o.IncludeRecordInfo, true
}

// HasIncludeRecordInfo returns a boolean if a field has been set.
func (o *BrandOptionsModel) HasIncludeRecordInfo() bool {
	if o != nil && o.IncludeRecordInfo != nil {
		return true
	}

	return false
}

// SetIncludeRecordInfo gets a reference to the given bool and assigns it to the IncludeRecordInfo field.
func (o *BrandOptionsModel) SetIncludeRecordInfo(v bool) {
	o.IncludeRecordInfo = &v
}

// GetIncludeFiles returns the IncludeFiles field value if set, zero value otherwise.
func (o *BrandOptionsModel) GetIncludeFiles() bool {
	if o == nil || o.IncludeFiles == nil {
		var ret bool
		return ret
	}
	return *o.IncludeFiles
}

// GetIncludeFilesOk returns a tuple with the IncludeFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandOptionsModel) GetIncludeFilesOk() (*bool, bool) {
	if o == nil || o.IncludeFiles == nil {
		return nil, false
	}
	return o.IncludeFiles, true
}

// HasIncludeFiles returns a boolean if a field has been set.
func (o *BrandOptionsModel) HasIncludeFiles() bool {
	if o != nil && o.IncludeFiles != nil {
		return true
	}

	return false
}

// SetIncludeFiles gets a reference to the given bool and assigns it to the IncludeFiles field.
func (o *BrandOptionsModel) SetIncludeFiles(v bool) {
	o.IncludeFiles = &v
}

// GetIncludeMetaData returns the IncludeMetaData field value if set, zero value otherwise.
func (o *BrandOptionsModel) GetIncludeMetaData() bool {
	if o == nil || o.IncludeMetaData == nil {
		var ret bool
		return ret
	}
	return *o.IncludeMetaData
}

// GetIncludeMetaDataOk returns a tuple with the IncludeMetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandOptionsModel) GetIncludeMetaDataOk() (*bool, bool) {
	if o == nil || o.IncludeMetaData == nil {
		return nil, false
	}
	return o.IncludeMetaData, true
}

// HasIncludeMetaData returns a boolean if a field has been set.
func (o *BrandOptionsModel) HasIncludeMetaData() bool {
	if o != nil && o.IncludeMetaData != nil {
		return true
	}

	return false
}

// SetIncludeMetaData gets a reference to the given bool and assigns it to the IncludeMetaData field.
func (o *BrandOptionsModel) SetIncludeMetaData(v bool) {
	o.IncludeMetaData = &v
}

// GetIncludeNotes returns the IncludeNotes field value if set, zero value otherwise.
func (o *BrandOptionsModel) GetIncludeNotes() bool {
	if o == nil || o.IncludeNotes == nil {
		var ret bool
		return ret
	}
	return *o.IncludeNotes
}

// GetIncludeNotesOk returns a tuple with the IncludeNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandOptionsModel) GetIncludeNotesOk() (*bool, bool) {
	if o == nil || o.IncludeNotes == nil {
		return nil, false
	}
	return o.IncludeNotes, true
}

// HasIncludeNotes returns a boolean if a field has been set.
func (o *BrandOptionsModel) HasIncludeNotes() bool {
	if o != nil && o.IncludeNotes != nil {
		return true
	}

	return false
}

// SetIncludeNotes gets a reference to the given bool and assigns it to the IncludeNotes field.
func (o *BrandOptionsModel) SetIncludeNotes(v bool) {
	o.IncludeNotes = &v
}

// GetIncludePortalSettings returns the IncludePortalSettings field value if set, zero value otherwise.
func (o *BrandOptionsModel) GetIncludePortalSettings() bool {
	if o == nil || o.IncludePortalSettings == nil {
		var ret bool
		return ret
	}
	return *o.IncludePortalSettings
}

// GetIncludePortalSettingsOk returns a tuple with the IncludePortalSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrandOptionsModel) GetIncludePortalSettingsOk() (*bool, bool) {
	if o == nil || o.IncludePortalSettings == nil {
		return nil, false
	}
	return o.IncludePortalSettings, true
}

// HasIncludePortalSettings returns a boolean if a field has been set.
func (o *BrandOptionsModel) HasIncludePortalSettings() bool {
	if o != nil && o.IncludePortalSettings != nil {
		return true
	}

	return false
}

// SetIncludePortalSettings gets a reference to the given bool and assigns it to the IncludePortalSettings field.
func (o *BrandOptionsModel) SetIncludePortalSettings(v bool) {
	o.IncludePortalSettings = &v
}

func (o BrandOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IncludeTags != nil {
		toSerialize["include_tags"] = o.IncludeTags
	}
	if o.IncludeBrandColours != nil {
		toSerialize["include_brand_colours"] = o.IncludeBrandColours
	}
	if o.IncludeLinks != nil {
		toSerialize["include_links"] = o.IncludeLinks
	}
	if o.IncludeRecordInfo != nil {
		toSerialize["include_record_info"] = o.IncludeRecordInfo
	}
	if o.IncludeFiles != nil {
		toSerialize["include_files"] = o.IncludeFiles
	}
	if o.IncludeMetaData != nil {
		toSerialize["include_meta_data"] = o.IncludeMetaData
	}
	if o.IncludeNotes != nil {
		toSerialize["include_notes"] = o.IncludeNotes
	}
	if o.IncludePortalSettings != nil {
		toSerialize["include_portal_settings"] = o.IncludePortalSettings
	}
	return json.Marshal(toSerialize)
}

type NullableBrandOptionsModel struct {
	value *BrandOptionsModel
	isSet bool
}

func (v NullableBrandOptionsModel) Get() *BrandOptionsModel {
	return v.value
}

func (v *NullableBrandOptionsModel) Set(val *BrandOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandOptionsModel(val *BrandOptionsModel) *NullableBrandOptionsModel {
	return &NullableBrandOptionsModel{value: val, isSet: true}
}

func (v NullableBrandOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


