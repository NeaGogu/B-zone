/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RoutePointsRetrieveListArguments struct for RoutePointsRetrieveListArguments
type RoutePointsRetrieveListArguments struct {
	// RouteIds, maxItems=10 to prevent memory limit errors
	RouteIds *[]int64 `json:"route_ids,omitempty"`
}

// NewRoutePointsRetrieveListArguments instantiates a new RoutePointsRetrieveListArguments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutePointsRetrieveListArguments() *RoutePointsRetrieveListArguments {
	this := RoutePointsRetrieveListArguments{}
	return &this
}

// NewRoutePointsRetrieveListArgumentsWithDefaults instantiates a new RoutePointsRetrieveListArguments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutePointsRetrieveListArgumentsWithDefaults() *RoutePointsRetrieveListArguments {
	this := RoutePointsRetrieveListArguments{}
	return &this
}

// GetRouteIds returns the RouteIds field value if set, zero value otherwise.
func (o *RoutePointsRetrieveListArguments) GetRouteIds() []int64 {
	if o == nil || o.RouteIds == nil {
		var ret []int64
		return ret
	}
	return *o.RouteIds
}

// GetRouteIdsOk returns a tuple with the RouteIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutePointsRetrieveListArguments) GetRouteIdsOk() (*[]int64, bool) {
	if o == nil || o.RouteIds == nil {
		return nil, false
	}
	return o.RouteIds, true
}

// HasRouteIds returns a boolean if a field has been set.
func (o *RoutePointsRetrieveListArguments) HasRouteIds() bool {
	if o != nil && o.RouteIds != nil {
		return true
	}

	return false
}

// SetRouteIds gets a reference to the given []int64 and assigns it to the RouteIds field.
func (o *RoutePointsRetrieveListArguments) SetRouteIds(v []int64) {
	o.RouteIds = &v
}

func (o RoutePointsRetrieveListArguments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RouteIds != nil {
		toSerialize["route_ids"] = o.RouteIds
	}
	return json.Marshal(toSerialize)
}

type NullableRoutePointsRetrieveListArguments struct {
	value *RoutePointsRetrieveListArguments
	isSet bool
}

func (v NullableRoutePointsRetrieveListArguments) Get() *RoutePointsRetrieveListArguments {
	return v.value
}

func (v *NullableRoutePointsRetrieveListArguments) Set(val *RoutePointsRetrieveListArguments) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutePointsRetrieveListArguments) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutePointsRetrieveListArguments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutePointsRetrieveListArguments(val *RoutePointsRetrieveListArguments) *NullableRoutePointsRetrieveListArguments {
	return &NullableRoutePointsRetrieveListArguments{value: val, isSet: true}
}

func (v NullableRoutePointsRetrieveListArguments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutePointsRetrieveListArguments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


