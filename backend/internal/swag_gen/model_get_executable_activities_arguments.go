/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetExecutableActivitiesArguments struct for GetExecutableActivitiesArguments
type GetExecutableActivitiesArguments struct {
	Data *map[string]interface{} `json:"data,omitempty"`
	Options *map[string]interface{} `json:"options,omitempty"`
	Filters *GetExecutableActivitiesFiltersModel `json:"filters,omitempty"`
}

// NewGetExecutableActivitiesArguments instantiates a new GetExecutableActivitiesArguments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetExecutableActivitiesArguments() *GetExecutableActivitiesArguments {
	this := GetExecutableActivitiesArguments{}
	return &this
}

// NewGetExecutableActivitiesArgumentsWithDefaults instantiates a new GetExecutableActivitiesArguments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetExecutableActivitiesArgumentsWithDefaults() *GetExecutableActivitiesArguments {
	this := GetExecutableActivitiesArguments{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetExecutableActivitiesArguments) GetData() map[string]interface{} {
	if o == nil || o.Data == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetExecutableActivitiesArguments) GetDataOk() (*map[string]interface{}, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetExecutableActivitiesArguments) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *GetExecutableActivitiesArguments) SetData(v map[string]interface{}) {
	o.Data = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *GetExecutableActivitiesArguments) GetOptions() map[string]interface{} {
	if o == nil || o.Options == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetExecutableActivitiesArguments) GetOptionsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *GetExecutableActivitiesArguments) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given map[string]interface{} and assigns it to the Options field.
func (o *GetExecutableActivitiesArguments) SetOptions(v map[string]interface{}) {
	o.Options = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *GetExecutableActivitiesArguments) GetFilters() GetExecutableActivitiesFiltersModel {
	if o == nil || o.Filters == nil {
		var ret GetExecutableActivitiesFiltersModel
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetExecutableActivitiesArguments) GetFiltersOk() (*GetExecutableActivitiesFiltersModel, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *GetExecutableActivitiesArguments) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given GetExecutableActivitiesFiltersModel and assigns it to the Filters field.
func (o *GetExecutableActivitiesArguments) SetFilters(v GetExecutableActivitiesFiltersModel) {
	o.Filters = &v
}

func (o GetExecutableActivitiesArguments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableGetExecutableActivitiesArguments struct {
	value *GetExecutableActivitiesArguments
	isSet bool
}

func (v NullableGetExecutableActivitiesArguments) Get() *GetExecutableActivitiesArguments {
	return v.value
}

func (v *NullableGetExecutableActivitiesArguments) Set(val *GetExecutableActivitiesArguments) {
	v.value = val
	v.isSet = true
}

func (v NullableGetExecutableActivitiesArguments) IsSet() bool {
	return v.isSet
}

func (v *NullableGetExecutableActivitiesArguments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetExecutableActivitiesArguments(val *GetExecutableActivitiesArguments) *NullableGetExecutableActivitiesArguments {
	return &NullableGetExecutableActivitiesArguments{value: val, isSet: true}
}

func (v NullableGetExecutableActivitiesArguments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetExecutableActivitiesArguments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


