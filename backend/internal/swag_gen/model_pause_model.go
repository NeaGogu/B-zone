/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PauseModel struct for PauseModel
type PauseModel struct {
	// Unique Identifier
	Id *int64 `json:"id,omitempty"`
	// Determines if pause is a drivetime pause or a timewindow pause
	DriveTimeMode *bool `json:"drive_time_mode,omitempty"`
	// Name of pause
	Name *string `json:"name,omitempty"`
	// initial driving time in minutes until first possibility of starting pause. (Only used in servicewindow pause)
	InitialDrivingDuration *int64 `json:"initial_driving_duration,omitempty"`
	// max driving time in minutes before a pause must be started
	MaxDrivingDuration *int64 `json:"max_driving_duration,omitempty"`
	// (total) duration for pause(s) in minutes
	PauseDuration *int64 `json:"pause_duration,omitempty"`
	// A list of durations in minutes by which the total duration of the pause may be split. (Only used in servicewindow pause)
	PossibleSplit *[]int32 `json:"possible_split,omitempty"`
	// Earliest time. (Only used in drivetime pause)
	EarliestTime *string `json:"earliest_time,omitempty"`
	// Latest time. (Only used in drivetime pause)
	LatestTime *string `json:"latest_time,omitempty"`
	// 
	Links *[]LinkModel `json:"links,omitempty"`
	// 
	MetaData *[]MetaDataModel `json:"meta_data,omitempty"`
}

// NewPauseModel instantiates a new PauseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPauseModel() *PauseModel {
	this := PauseModel{}
	return &this
}

// NewPauseModelWithDefaults instantiates a new PauseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPauseModelWithDefaults() *PauseModel {
	this := PauseModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PauseModel) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PauseModel) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PauseModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *PauseModel) SetId(v int64) {
	o.Id = &v
}

// GetDriveTimeMode returns the DriveTimeMode field value if set, zero value otherwise.
func (o *PauseModel) GetDriveTimeMode() bool {
	if o == nil || o.DriveTimeMode == nil {
		var ret bool
		return ret
	}
	return *o.DriveTimeMode
}

// GetDriveTimeModeOk returns a tuple with the DriveTimeMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PauseModel) GetDriveTimeModeOk() (*bool, bool) {
	if o == nil || o.DriveTimeMode == nil {
		return nil, false
	}
	return o.DriveTimeMode, true
}

// HasDriveTimeMode returns a boolean if a field has been set.
func (o *PauseModel) HasDriveTimeMode() bool {
	if o != nil && o.DriveTimeMode != nil {
		return true
	}

	return false
}

// SetDriveTimeMode gets a reference to the given bool and assigns it to the DriveTimeMode field.
func (o *PauseModel) SetDriveTimeMode(v bool) {
	o.DriveTimeMode = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PauseModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PauseModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PauseModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PauseModel) SetName(v string) {
	o.Name = &v
}

// GetInitialDrivingDuration returns the InitialDrivingDuration field value if set, zero value otherwise.
func (o *PauseModel) GetInitialDrivingDuration() int64 {
	if o == nil || o.InitialDrivingDuration == nil {
		var ret int64
		return ret
	}
	return *o.InitialDrivingDuration
}

// GetInitialDrivingDurationOk returns a tuple with the InitialDrivingDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PauseModel) GetInitialDrivingDurationOk() (*int64, bool) {
	if o == nil || o.InitialDrivingDuration == nil {
		return nil, false
	}
	return o.InitialDrivingDuration, true
}

// HasInitialDrivingDuration returns a boolean if a field has been set.
func (o *PauseModel) HasInitialDrivingDuration() bool {
	if o != nil && o.InitialDrivingDuration != nil {
		return true
	}

	return false
}

// SetInitialDrivingDuration gets a reference to the given int64 and assigns it to the InitialDrivingDuration field.
func (o *PauseModel) SetInitialDrivingDuration(v int64) {
	o.InitialDrivingDuration = &v
}

// GetMaxDrivingDuration returns the MaxDrivingDuration field value if set, zero value otherwise.
func (o *PauseModel) GetMaxDrivingDuration() int64 {
	if o == nil || o.MaxDrivingDuration == nil {
		var ret int64
		return ret
	}
	return *o.MaxDrivingDuration
}

// GetMaxDrivingDurationOk returns a tuple with the MaxDrivingDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PauseModel) GetMaxDrivingDurationOk() (*int64, bool) {
	if o == nil || o.MaxDrivingDuration == nil {
		return nil, false
	}
	return o.MaxDrivingDuration, true
}

// HasMaxDrivingDuration returns a boolean if a field has been set.
func (o *PauseModel) HasMaxDrivingDuration() bool {
	if o != nil && o.MaxDrivingDuration != nil {
		return true
	}

	return false
}

// SetMaxDrivingDuration gets a reference to the given int64 and assigns it to the MaxDrivingDuration field.
func (o *PauseModel) SetMaxDrivingDuration(v int64) {
	o.MaxDrivingDuration = &v
}

// GetPauseDuration returns the PauseDuration field value if set, zero value otherwise.
func (o *PauseModel) GetPauseDuration() int64 {
	if o == nil || o.PauseDuration == nil {
		var ret int64
		return ret
	}
	return *o.PauseDuration
}

// GetPauseDurationOk returns a tuple with the PauseDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PauseModel) GetPauseDurationOk() (*int64, bool) {
	if o == nil || o.PauseDuration == nil {
		return nil, false
	}
	return o.PauseDuration, true
}

// HasPauseDuration returns a boolean if a field has been set.
func (o *PauseModel) HasPauseDuration() bool {
	if o != nil && o.PauseDuration != nil {
		return true
	}

	return false
}

// SetPauseDuration gets a reference to the given int64 and assigns it to the PauseDuration field.
func (o *PauseModel) SetPauseDuration(v int64) {
	o.PauseDuration = &v
}

// GetPossibleSplit returns the PossibleSplit field value if set, zero value otherwise.
func (o *PauseModel) GetPossibleSplit() []int32 {
	if o == nil || o.PossibleSplit == nil {
		var ret []int32
		return ret
	}
	return *o.PossibleSplit
}

// GetPossibleSplitOk returns a tuple with the PossibleSplit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PauseModel) GetPossibleSplitOk() (*[]int32, bool) {
	if o == nil || o.PossibleSplit == nil {
		return nil, false
	}
	return o.PossibleSplit, true
}

// HasPossibleSplit returns a boolean if a field has been set.
func (o *PauseModel) HasPossibleSplit() bool {
	if o != nil && o.PossibleSplit != nil {
		return true
	}

	return false
}

// SetPossibleSplit gets a reference to the given []int32 and assigns it to the PossibleSplit field.
func (o *PauseModel) SetPossibleSplit(v []int32) {
	o.PossibleSplit = &v
}

// GetEarliestTime returns the EarliestTime field value if set, zero value otherwise.
func (o *PauseModel) GetEarliestTime() string {
	if o == nil || o.EarliestTime == nil {
		var ret string
		return ret
	}
	return *o.EarliestTime
}

// GetEarliestTimeOk returns a tuple with the EarliestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PauseModel) GetEarliestTimeOk() (*string, bool) {
	if o == nil || o.EarliestTime == nil {
		return nil, false
	}
	return o.EarliestTime, true
}

// HasEarliestTime returns a boolean if a field has been set.
func (o *PauseModel) HasEarliestTime() bool {
	if o != nil && o.EarliestTime != nil {
		return true
	}

	return false
}

// SetEarliestTime gets a reference to the given string and assigns it to the EarliestTime field.
func (o *PauseModel) SetEarliestTime(v string) {
	o.EarliestTime = &v
}

// GetLatestTime returns the LatestTime field value if set, zero value otherwise.
func (o *PauseModel) GetLatestTime() string {
	if o == nil || o.LatestTime == nil {
		var ret string
		return ret
	}
	return *o.LatestTime
}

// GetLatestTimeOk returns a tuple with the LatestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PauseModel) GetLatestTimeOk() (*string, bool) {
	if o == nil || o.LatestTime == nil {
		return nil, false
	}
	return o.LatestTime, true
}

// HasLatestTime returns a boolean if a field has been set.
func (o *PauseModel) HasLatestTime() bool {
	if o != nil && o.LatestTime != nil {
		return true
	}

	return false
}

// SetLatestTime gets a reference to the given string and assigns it to the LatestTime field.
func (o *PauseModel) SetLatestTime(v string) {
	o.LatestTime = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PauseModel) GetLinks() []LinkModel {
	if o == nil || o.Links == nil {
		var ret []LinkModel
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PauseModel) GetLinksOk() (*[]LinkModel, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PauseModel) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkModel and assigns it to the Links field.
func (o *PauseModel) SetLinks(v []LinkModel) {
	o.Links = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *PauseModel) GetMetaData() []MetaDataModel {
	if o == nil || o.MetaData == nil {
		var ret []MetaDataModel
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PauseModel) GetMetaDataOk() (*[]MetaDataModel, bool) {
	if o == nil || o.MetaData == nil {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *PauseModel) HasMetaData() bool {
	if o != nil && o.MetaData != nil {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given []MetaDataModel and assigns it to the MetaData field.
func (o *PauseModel) SetMetaData(v []MetaDataModel) {
	o.MetaData = &v
}

func (o PauseModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DriveTimeMode != nil {
		toSerialize["drive_time_mode"] = o.DriveTimeMode
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.InitialDrivingDuration != nil {
		toSerialize["initial_driving_duration"] = o.InitialDrivingDuration
	}
	if o.MaxDrivingDuration != nil {
		toSerialize["max_driving_duration"] = o.MaxDrivingDuration
	}
	if o.PauseDuration != nil {
		toSerialize["pause_duration"] = o.PauseDuration
	}
	if o.PossibleSplit != nil {
		toSerialize["possible_split"] = o.PossibleSplit
	}
	if o.EarliestTime != nil {
		toSerialize["earliest_time"] = o.EarliestTime
	}
	if o.LatestTime != nil {
		toSerialize["latest_time"] = o.LatestTime
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.MetaData != nil {
		toSerialize["meta_data"] = o.MetaData
	}
	return json.Marshal(toSerialize)
}

type NullablePauseModel struct {
	value *PauseModel
	isSet bool
}

func (v NullablePauseModel) Get() *PauseModel {
	return v.value
}

func (v *NullablePauseModel) Set(val *PauseModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePauseModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePauseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePauseModel(val *PauseModel) *NullablePauseModel {
	return &NullablePauseModel{value: val, isSet: true}
}

func (v NullablePauseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePauseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


