/*
 * Bumbal Client Api
 *
 * Bumbal API documentation
 *
 * API version: 2.0
 * Contact: info@bumbal.eu
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CommunicationTemplateModel struct for CommunicationTemplateModel
type CommunicationTemplateModel struct {
	// Identifier
	Id *int32 `json:"id,omitempty"`
	// Name of this Template
	Name *string `json:"name,omitempty"`
	// Description of this Template
	Description *string `json:"description,omitempty"`
	// Subject used in email
	Subject *string `json:"subject,omitempty"`
	// Mustache based HTML content template
	ContentHtml *string `json:"content_html,omitempty"`
	// Mustache based Text content template
	ContentText *string `json:"content_text,omitempty"`
	// Include the files associated with this activity as attachment, mail only
	IncludeAttachments *bool `json:"include_attachments,omitempty"`
	// 
	Mappings *[]CommunicationMappingModel `json:"mappings,omitempty"`
}

// NewCommunicationTemplateModel instantiates a new CommunicationTemplateModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommunicationTemplateModel() *CommunicationTemplateModel {
	this := CommunicationTemplateModel{}
	return &this
}

// NewCommunicationTemplateModelWithDefaults instantiates a new CommunicationTemplateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommunicationTemplateModelWithDefaults() *CommunicationTemplateModel {
	this := CommunicationTemplateModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CommunicationTemplateModel) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationTemplateModel) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommunicationTemplateModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CommunicationTemplateModel) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CommunicationTemplateModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationTemplateModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CommunicationTemplateModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CommunicationTemplateModel) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CommunicationTemplateModel) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationTemplateModel) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CommunicationTemplateModel) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CommunicationTemplateModel) SetDescription(v string) {
	o.Description = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *CommunicationTemplateModel) GetSubject() string {
	if o == nil || o.Subject == nil {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationTemplateModel) GetSubjectOk() (*string, bool) {
	if o == nil || o.Subject == nil {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *CommunicationTemplateModel) HasSubject() bool {
	if o != nil && o.Subject != nil {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *CommunicationTemplateModel) SetSubject(v string) {
	o.Subject = &v
}

// GetContentHtml returns the ContentHtml field value if set, zero value otherwise.
func (o *CommunicationTemplateModel) GetContentHtml() string {
	if o == nil || o.ContentHtml == nil {
		var ret string
		return ret
	}
	return *o.ContentHtml
}

// GetContentHtmlOk returns a tuple with the ContentHtml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationTemplateModel) GetContentHtmlOk() (*string, bool) {
	if o == nil || o.ContentHtml == nil {
		return nil, false
	}
	return o.ContentHtml, true
}

// HasContentHtml returns a boolean if a field has been set.
func (o *CommunicationTemplateModel) HasContentHtml() bool {
	if o != nil && o.ContentHtml != nil {
		return true
	}

	return false
}

// SetContentHtml gets a reference to the given string and assigns it to the ContentHtml field.
func (o *CommunicationTemplateModel) SetContentHtml(v string) {
	o.ContentHtml = &v
}

// GetContentText returns the ContentText field value if set, zero value otherwise.
func (o *CommunicationTemplateModel) GetContentText() string {
	if o == nil || o.ContentText == nil {
		var ret string
		return ret
	}
	return *o.ContentText
}

// GetContentTextOk returns a tuple with the ContentText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationTemplateModel) GetContentTextOk() (*string, bool) {
	if o == nil || o.ContentText == nil {
		return nil, false
	}
	return o.ContentText, true
}

// HasContentText returns a boolean if a field has been set.
func (o *CommunicationTemplateModel) HasContentText() bool {
	if o != nil && o.ContentText != nil {
		return true
	}

	return false
}

// SetContentText gets a reference to the given string and assigns it to the ContentText field.
func (o *CommunicationTemplateModel) SetContentText(v string) {
	o.ContentText = &v
}

// GetIncludeAttachments returns the IncludeAttachments field value if set, zero value otherwise.
func (o *CommunicationTemplateModel) GetIncludeAttachments() bool {
	if o == nil || o.IncludeAttachments == nil {
		var ret bool
		return ret
	}
	return *o.IncludeAttachments
}

// GetIncludeAttachmentsOk returns a tuple with the IncludeAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationTemplateModel) GetIncludeAttachmentsOk() (*bool, bool) {
	if o == nil || o.IncludeAttachments == nil {
		return nil, false
	}
	return o.IncludeAttachments, true
}

// HasIncludeAttachments returns a boolean if a field has been set.
func (o *CommunicationTemplateModel) HasIncludeAttachments() bool {
	if o != nil && o.IncludeAttachments != nil {
		return true
	}

	return false
}

// SetIncludeAttachments gets a reference to the given bool and assigns it to the IncludeAttachments field.
func (o *CommunicationTemplateModel) SetIncludeAttachments(v bool) {
	o.IncludeAttachments = &v
}

// GetMappings returns the Mappings field value if set, zero value otherwise.
func (o *CommunicationTemplateModel) GetMappings() []CommunicationMappingModel {
	if o == nil || o.Mappings == nil {
		var ret []CommunicationMappingModel
		return ret
	}
	return *o.Mappings
}

// GetMappingsOk returns a tuple with the Mappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunicationTemplateModel) GetMappingsOk() (*[]CommunicationMappingModel, bool) {
	if o == nil || o.Mappings == nil {
		return nil, false
	}
	return o.Mappings, true
}

// HasMappings returns a boolean if a field has been set.
func (o *CommunicationTemplateModel) HasMappings() bool {
	if o != nil && o.Mappings != nil {
		return true
	}

	return false
}

// SetMappings gets a reference to the given []CommunicationMappingModel and assigns it to the Mappings field.
func (o *CommunicationTemplateModel) SetMappings(v []CommunicationMappingModel) {
	o.Mappings = &v
}

func (o CommunicationTemplateModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Subject != nil {
		toSerialize["subject"] = o.Subject
	}
	if o.ContentHtml != nil {
		toSerialize["content_html"] = o.ContentHtml
	}
	if o.ContentText != nil {
		toSerialize["content_text"] = o.ContentText
	}
	if o.IncludeAttachments != nil {
		toSerialize["include_attachments"] = o.IncludeAttachments
	}
	if o.Mappings != nil {
		toSerialize["mappings"] = o.Mappings
	}
	return json.Marshal(toSerialize)
}

type NullableCommunicationTemplateModel struct {
	value *CommunicationTemplateModel
	isSet bool
}

func (v NullableCommunicationTemplateModel) Get() *CommunicationTemplateModel {
	return v.value
}

func (v *NullableCommunicationTemplateModel) Set(val *CommunicationTemplateModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCommunicationTemplateModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCommunicationTemplateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommunicationTemplateModel(val *CommunicationTemplateModel) *NullableCommunicationTemplateModel {
	return &NullableCommunicationTemplateModel{value: val, isSet: true}
}

func (v NullableCommunicationTemplateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommunicationTemplateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


